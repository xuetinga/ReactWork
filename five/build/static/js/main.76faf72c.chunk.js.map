{"version":3,"sources":["components/List.js","components/btns.js","pages/Home.js","components/Control.js","pages/context.js","pages/Demo02.js","pages/Demo01.js","pages/Hoc.js","components/Input.js","components/TodoList.js","exercise/Home.js","exercise/item.js","exercise/items.js","exercise/RouterSwitch.js","taobao/Mytab.js","taobao/Home.js","taobao/Cart.js","taobao/Child.js","taobao/Code.js","taobao/Mine.js","taobao/Search.js","taobao/App.js","index.js"],"names":["List","done","this","props","id","renderTodos","Component","Buttons","map","item","key","onClick","getData","React","Context","createContext","Demo02","style","width","height","backgroundColor","Consumer","data","Demo01","protoTypes","name","PropTypes","string","isRequired","defaultProps","withFetch","Com","url","state","fetch","then","res","json","setState","Input","dangerouslySetInnerHTML","__html","content","console","log","title","htmlFor","type","onChange","handleChange","value","inpValue","ref","inp","input","placeholder","addTodo","Home","items","className","to","price","toFixed","Item","match","params","itemInfo","find","Number","Mytab","pathname","location","split","length","position","bottom","unselectedTintColor","tintColor","barTintColor","icon","selectedIcon","selected","onPress","history","push","withRouter","imgHeight","data1","src","number","setTimeout","autoplay","infinite","marginTop","val","href","display","alt","verticalAlign","onLoad","window","dispatchEvent","Event","i","Cart","goBack","size","lineHeight","border","Code","Mine","Search","clear","handleClick","manualFocusInst","focus","onSubmit","onClear","onFocus","onBlur","onCancel","showCancelButton","App","exact","path","component","render","method","headers","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.76faf72c.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nexport default class List extends Component {\r\n  render() {\r\n    const done = this.props.done\r\n      return (\r\n        <div id=\"div2\">\r\n          <ul id=\"doing\"> \r\n            {this.props.renderTodos(done)}\r\n          </ul>\r\n        </div>\r\n        \r\n      )\r\n  }\r\n}","import React from 'react';\r\n//函数 数组任何数据都在props中\r\nconst Buttons = (props)=>{\r\n    const btns = [1,2,3,4,5];\r\n    {\r\n        return <div>{\r\n            btns.map(\r\n                (item)=>(\r\n                  <button \r\n                    key={item}  onClick = {()=>props.getData(item)}\r\n                  >\r\n                    {item}\r\n                  </button>\r\n              ))\r\n            }\r\n\r\n        </div>\r\n       \r\n      }\r\n}\r\n\r\n\r\nexport default Buttons;","import React,{Component} from 'react'; //这一个是必须写的 因为这里面用到了\r\nimport List from '../components/List'  //这里也要去引用List\r\nimport Buttons from '../components/btns';\r\nclass Home extends React.Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        data:[]\r\n      }\r\n      // this.handleClick = this.handleClick.bind(this)\r\n    }\r\n  componentDidMount(){\r\n      fetch('https://cnodejs.org/api/v1/topics')\r\n      .then(res=>res.json())\r\n      .then( ({data}) => {\r\n        console.log(data);\r\n        this.setState({data})\r\n      })\r\n    }\r\n  getData=(page)=>{\r\n    console.log(page);\r\n    fetch('https://cnodejs.org/api/v1/topics?page='+page).\r\n    then(res=>res.json()).\r\n    then(({data})=>{\r\n    console.log(data);\r\n    this.setState({data}); //这里拿到json数据\r\n  })\r\n  }\r\n    render(){\r\n      const { data } = this.state;\r\n      return <div>\r\n          \r\n        <Buttons getData = {this.getData}/>\r\n        <List data={data}/>\r\n      </div>\r\n    }\r\n  }\r\n  //命名导出 默认导出 主要看react都是默认导出不用取名    \r\n  //默认导出 只能导出一个\r\n  export default Home; //这里是默认导出  \r\n\r\n//   //命名导出\r\n//   let a =10;\r\n//   export {a}\r\n//   //在另一个文件引用的时候就是  \r\n//   import {a} from ''\r\n\r\n","\r\nimport React, { Component } from 'react'\r\n//引入样式样式\r\nimport './control.css';\r\nexport default class Control extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue :'',\r\n            todos:[{title:'1',done:false},\r\n            {title:'2',done:true},\r\n            {title:'3',done:false},\r\n            {title:'4',done:false}\r\n        \r\n        ],\r\n        // finished:[\r\n        //     {title:'',done:false}\r\n        // ]\r\n        }\r\n    }\r\n    //获取实时内容\r\n    handleChange = (e)=>{\r\n        console.log(\"执行了handlechange\");\r\n        console.log(e.target.value);\r\n        this.setState({inpValue:e.target.value});\r\n\r\n        // localStorage.setItem('KEY',e.target.value);\r\n\r\n    }\r\n    // addChange = (todos)=>{\r\n    //     this.setState({todos.title:todos.target.value})\r\n    // }\r\n    \r\n    //这个的作用是 让他刷新之后还存在 在这里去存\r\n    componentDidUpdate(){\r\n        console.log(\"执行了update\");\r\n        localStorage.setItem('todos',JSON.stringify(this.state.todos))\r\n        \r\n\r\n    }\r\n\r\n    //在这里面去取\r\n    componentDidMount(){\r\n        console.log(\"执行了didmount\");\r\n\r\n        this.input.focus();\r\n        // this.input.value; 这样也可以\r\n        let todos = localStorage.getItem('todos');//todos在最初进来的时候没有 \r\n        if(todos){\r\n            this.setState({\r\n                todos:JSON.parse(todos)\r\n            })\r\n            //有就把值赋给 todos \r\n        }\r\n    }\r\n    //添加内容到已经完成里面\r\n    addTodo=()=>{\r\n        console.log(\"执行了addtodo\");\r\n\r\n        if(this.state.inpValue){\r\n            this.setState({\r\n                todos:[\r\n                    {\r\n                        title:this.state.inpValue,\r\n                        done:false},\r\n                        ...this.state.todos\r\n                ]\r\n            })\r\n            this.setState({inpValue:''})\r\n        }\r\n        \r\n        // else{\r\n        //     return;\r\n        // }\r\n        \r\n    }\r\n    // addTodo=()=>{\r\n    //     this.state.todos.push({title:this.state.inpValue}); //在数组里面再添加一项\r\n    //     this.setState({todos:this.state.todos});\r\n    // }\r\n    //删除内容\r\n    removeTodo=(index)=>{\r\n        console.log(\"执行了removetodo\");\r\n\r\n        // let newTodos = JSON.parse(JSON.stringify(this.state.todos));//深拷贝 一个全新的\r\n        // newTodos.splice(index,1);\r\n        // this.setState({\r\n        //     todos:newTodos\r\n        // })\r\n        //  另一种方法\r\n        this.setState({\r\n            todos:this.state.todos.filter((item,idx)=>\r\n                index!=idx\r\n                //不等于它就是真的 就会返回 这里就是直接一个函数。 这里是一个返回值\r\n            )\r\n        },()=>{\r\n            localStorage.setItem('todos',JSON.stringify(this.state.todos))\r\n\r\n        })\r\n\r\n        // console.log(e);\r\n        // console.log(this.state.todos[0].title);\r\n    }\r\n    // setStatus=(status)=>{\r\n    //     console.log(status);\r\n    //     if(status){\r\n    //         this.setState(\r\n    //             {\r\n    //                 finished:[\r\n    //                     {title:this.state.inpValue,done:false},...this.state.todos\r\n    //                 ]\r\n    //             }\r\n    //         )\r\n    //     }\r\n    // }\r\n    toggle=(index)=>{\r\n        console.log(\"执行了toggle\");\r\n\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos));\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n           todos:newTodos\r\n        });\r\n      \r\n    }\r\n    renderTodos=(done)=>{\r\n        console.log(\"执行了rendertodo\");\r\n    \r\n      return this.state.todos.map((todo,index) =>{\r\n            if(done == todo.done){\r\n                return <li>\r\n                    {/* <input type=\"checkbox\" onClick={()=>this.setStatus(todo.done)} /> */}\r\n                    <input  onClick={()=>this.toggle(index)}  checked={done}  type=\"checkbox\"/ >\r\n                    <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                    {/* 这里是实现添加那个<h1>ddd</h1>的  就是解析标签 */}\r\n                    {/* <span >{todo.title}</span> */}\r\n\r\n                    <button onClick={()=>this.removeTodo(index)}>删除 </button>\r\n                </li>\r\n            }\r\n            \r\n        })\r\n    }\r\n    render() { \r\n        //  localStorage.setItem('todos',JSON.stringify(this.state.todos))\r\n        //写在这里都会执行 就不用在toggle中写了\r\n        const {todos,inpValue} = this.state;\r\n        let arr1 = todos.filter(item=>item.done);\r\n        let arr2 = todos.filter(item=>!item.done);\r\n        // let arr1 = todos.filter((item,index)=>{\r\n        //     return !item.done;\r\n        //     console.log(index,item);\r\n        // })\r\n        //每循环一次 回调函数执行一次\r\n        return (\r\n            <div className='box'>\r\n                <label htmlFor=\"inp\">todolist\r\n                \r\n                </label>\r\n                <input id =\"inp\"value={inpValue} type=\"text\" onChange={this.handleChange} ref={inp =>this.input = inp} action=\"#content\" placeholder=\"todo\" >\r\n                    {/* 加入了value就是react的了 value后面的值不能动了 就是一改变就会调用这个函数  value后面的值是默认的 给他赋值是e.target.value 走了setState就会更新*/}\r\n                </input>\r\n                <button onClick={this.addTodo} >\r\n                    添加\r\n                </button>\r\n                <h2>\r\n                    正在进行{arr2.length}\r\n                </h2>\r\n               \r\n                {/* {\r\n                    [{title:1,done:false},{}].map()\r\n                } */}\r\n                <ul id=\"doing\">\r\n                    \r\n                    {this.renderTodos(false)}\r\n                   \r\n                </ul>\r\n                <h2>\r\n                    已经完成{arr1.length}\r\n                </h2>\r\n                <ul style={{color:'blue'}}>\r\n                    {/* //里面是个对象变量 第一个是变量括起来 里面是对象 marginRight */}\r\n                    {/* {{color:3>2'red':'green'}} */}\r\n                    \r\n                    {this.renderTodos(true)}\r\n                </ul>\r\n                {\r\n                    3>2 ? <button>登录</button>:<span>不成立</span>\r\n                }\r\n                {/* 可以直接加条件判断 不能查if语句 因为放的要是一个值 */}\r\n                <button>\r\n                    {2>3?'真':'假'}\r\n                    {/* 声明一个状态 每次取反 ture一直切换  */}\r\n\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nconst Context = React.createContext();//返回一个对象 来接受它、\r\nexport default Context;\r\n\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from './context'\r\n\r\nfunction Demo02() {\r\n    return (\r\n        <div style={{width:100,height:'100px',backgroundColor:'red'}}>\r\n                    <h2>demo02</h2>\r\n                    <ul>\r\n                        <Context.Consumer>\r\n                        {\r\n                            data=>data.data.map((item)=><li key={item}>{item}</li>)\r\n                            // data =>data.map(item=><li key ={item}>{item}</li>)\r\n                        }\r\n                        </Context.Consumer>\r\n                    </ul>\r\n                    \r\n\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default Demo02\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from './context'\r\nimport Demo02 from './Demo02'\r\n\r\n//小练习 对于行内加样式\r\n\r\n        const Demo01 = (props)=>{\r\n            return (\r\n                <div style={{width:100,height:'100px',backgroundColor:'red'}}>\r\n                    <h2>demo01</h2>\r\n                    <ul>\r\n                        <Context.Consumer>\r\n                        {\r\n                            data=>data.data.map((item)=><li key={item}>{item}</li>)\r\n                        }\r\n                        </Context.Consumer>\r\n                    </ul>\r\n                    <Demo02/>\r\n                        {/* 这里引用就直接写就行 */}\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    \r\n\r\nDemo01.protoTypes ={\r\n    name:PropTypes.string.isRequired\r\n    //必须传的  \r\n}\r\nDemo01.defaultProps={\r\n    name:'tomg'\r\n    // 就是你没有传参数的时候 给你一个默认的。\r\n}\r\nexport default Demo01\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n//高阶函数 接受一个组件返回一个新的组件\r\nconst withFetch = (Com,url)=>{\r\n    return class Topic extends Component{\r\n        constructor(){\r\n            super();\r\n            this.state = {\r\n                data:[]\r\n            }\r\n        }\r\n        componentDidMount(){\r\n            fetch(url)\r\n            .then(res=>res.json())\r\n            .then(res=>this.setState({data:res.data}))\r\n        }\r\n        render(){\r\n            return <Com data={this.state.data}/>\r\n        }\r\n    }\r\n}\r\nconst De =(props)=>{\r\n    return <div>\r\n        <h1>标题</h1>\r\n        {/* <div>{props.data.content}</div> */}\r\n        <div dangerouslySetInnerHTML={\r\n            {__html:props.data.content}\r\n            // 这里是获取到了Com 组件中data属性的内容\r\n        } ></div>\r\n    </div>\r\n}\r\nexport const Detail = withFetch(De,'https://cnodejs.org/api/v1/topic/5433d5e4e737cbe96dcef312');\r\n\r\n// 详情页\r\n// export class Detail extends Component{\r\n//     constructor(){\r\n//         super();\r\n//         this.state={\r\n//             data:''\r\n//         }\r\n//     }\r\n//     componentDidMount(){\r\n//         fetch('https://cnodejs.org/topic/5e16978581adfe260207a8c1')\r\n//         .then(res=>res.json())\r\n//         .then(res=>this.setState({data:res.data.content}))\r\n//     }\r\n//     render(){\r\n//         return<div>\r\n//             <h1>标题</h1>\r\n//             <div>{this.state.data}</div>\r\n//         </div>\r\n//     }\r\n// }\r\n\r\n\r\n// export class Hoc extends Component {\r\n//     constructor(){\r\n//         super();\r\n//         this.state = {\r\n//             data:[]\r\n//         }\r\n//     }\r\n//     componentDidMount(){\r\n//         fetch('https://cnodejs.org/api/v1/topics')\r\n//         .then(res=>res.json())\r\n//         .then(res=>this.setState({data:res.data}))\r\n//     }\r\n//     render() {\r\n//         console.log(this.state.data);\r\n//         return (\r\n//             <div>\r\n//                 hoc\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n// 这是对上面的简化\r\nconst Ho = (props)=>{\r\n    console.log(props.data);\r\n    return <ul>\r\n        {\r\n            props.data.map((item)=><li>{item.title}</li>)\r\n        }\r\n    </ul>\r\n}\r\nconst Hoc = withFetch(Ho,'https://cnodejs.org/api/v1/topics')\r\nexport default Hoc;\r\n","import React,{Component} from 'react';\r\n// import TodoList from './TodoList'\r\n// import './TodoList.css';\r\nexport default class Input extends Component {\r\n   \r\n\r\n    render() {\r\n        return (\r\n            <div id=\"div1\">  \r\n                <label htmlFor=\"inp\">\r\n                    todolist \r\n                </label>\r\n\r\n                <input id=\"inp\" \r\n                type=\"text\"\r\n                onChange={this.props.handleChange} \r\n                value={this.props.inpValue}\r\n                ref={inp =>this.input = inp}\r\n                placeholder=\"添加ToDo\" >\r\n                </input>\r\n\r\n                <button  \r\n                onClick={this.props.addTodo} >\r\n                    添加\r\n                </button>\r\n            </div>\r\n        \r\n        \r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n//引入样式样式\r\n// import './TodoList.css';\r\nimport List from './List';\r\nimport Input from'./Input';\r\nexport default class TodoList extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue :'',\r\n            todos:[ ],\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({inpValue:e.target.value});\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem('todos',JSON.stringify(this.state.todos))\r\n    }\r\n\r\n    componentDidMount(){\r\n        let todos = localStorage.getItem('todos');//todos在最初进来的时候没有 \r\n        if(todos){\r\n            this.setState({\r\n                todos:JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    addTodo=()=>{\r\n        if(this.state.inpValue==''){\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos: [\r\n                {\r\n                    title: this.state.inpValue,\r\n                    done: false\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n        this.setState({inpValue:''})\r\n    }\r\n    toggle=(index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos: newTodos\r\n        })\r\n    }\r\n    removeTodo=(index)=>{\r\n        this.setState({\r\n          todos:this.state.todos.filter((item,idx)=>\r\n              index!=idx\r\n          )\r\n        })\r\n\r\n      // console.log(e);\r\n      // console.log(this.state.todos[0].title);\r\n    }\r\n    renderTodos=(done)=>{\r\n        return this.state.todos.map((todo,index) =>{\r\n              if(done == todo.done){\r\n                  return <li>\r\n                      <input  onClick={()=>this.toggle(index)}  checked={done}  type=\"checkbox\"/ >\r\n                      <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                      <button onClick={()=>this.removeTodo(index)}>删除 </button>\r\n                  </li>\r\n              }\r\n          })\r\n      }\r\n    render(){\r\n        const {todos,inpValue} = this.state;\r\n        let arr1 = todos.filter(item=>!item.done);\r\n        let arr2 = todos.filter(item=>item.done);\r\n        return (\r\n            <div>\r\n                <Input\r\n                    addTodo={this.addTodo} \r\n                    handleChange = {this.handleChange}\r\n                    inpValue = {inpValue}\r\n                /> \r\n                \r\n                <h2>正在进行{arr1.length}</h2>\r\n                <List renderTodos={this.renderTodos} done={false}/>\r\n                <h2>已经完成{arr2.length}</h2>\r\n                <List renderTodos={this.renderTodos} done={true}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\r\nimport React from 'react';\r\nimport './router.css';\r\nimport { Link, Route } from 'react-router-dom';\r\n \r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        //商品数据通过props传递过来\r\n        super(props)\r\n    }\r\n    render() {\r\n        console.log(this.props);\r\n        //此处得到的数据已经是数组\r\n        let items = this.props.items;\r\n        return (\r\n            <div>\r\n                {/* <div>主页</div> */}\r\n                {/* 场景二：商品展示主页 */}\r\n                <h2>商品列表</h2>\r\n                <ul className=\"item-list\">\r\n                    <li className=\"head\">\r\n                        <span>名称</span>\r\n                        <span>价格</span>\r\n                    </li>\r\n                    {\r\n                        // 点击某行进入详情页\r\n                        items.map(item => (\r\n                            <li key={item.id}>\r\n                                <span>\r\n                                 {/* 注意Item的Route组件因为是和主页及关于我们页面一样切换不同页面，所以应该在RouterSwitch组件中使用Route组件 */}\r\n                                    <Link to={'/Item/'+item.id}>{item.name}</Link>\r\n                                </span>\r\n                                <span>￥ {(item.price / 100).toFixed(2)} </span>\r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Home;","\r\nimport React from 'react';\r\n \r\nclass Item extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        //此处可得到所有传过来的history,match,location,items所有数据\r\n        // let {history,match:{params:{id}},location,items} = this.props;\r\n        console.log(this.props);\r\n        let items = this.props.items;\r\n        // let id = this.props.match.params.id;\r\n        let {match:{params:{id}}} = this.props;\r\n        console.log(id);\r\n\r\n        //通过传递过来的id匹配到数据中的数据,注意从match.params中获得的id是string，必须转为数字类型\r\n        let itemInfo = items.find(item=>item.id === Number(id));\r\n        console.log(itemInfo)  \r\n        return itemInfo ? (\r\n            <div>\r\n              <h2>商品详情 - {itemInfo.name}</h2>\r\n              <dt>ID</dt>\r\n              <dd>{itemInfo.id}</dd>\r\n              <dt>名称</dt>\r\n              <dd>{itemInfo.name}</dd>\r\n              <dt>价格</dt>\r\n              <dd>￥ {(itemInfo.price/100).toFixed(2)}</dd>\r\n            </div>\r\n          ) : <div>获取商品详情出错</div>;\r\n    }\r\n}\r\n \r\nexport default Item;","\r\n   const  items=[\r\n      {\r\n        id: 1,\r\n        name: 'iPhone XR',\r\n        price: 542500\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Apple iPad Air 3',\r\n        price: 377700\r\n      },\r\n      {\r\n        id: 3,\r\n        name: 'Macbook Pro 15.4',\r\n        price: 1949900\r\n      },\r\n      {\r\n        id: 4,\r\n        name: 'Apple iMac',\r\n        price: 1629900\r\n      },\r\n      {\r\n        id: 5,\r\n        name: 'Apple Magic Mouse',\r\n        price: 72900\r\n      },\r\n      {\r\n        id: 6,\r\n        name: 'Apple Watch Series 4',\r\n        price: 599900\r\n      }\r\n    ]\r\n    export default items;","\r\nimport React from 'react';\r\nimport {Link, Route ,BrowserRouter as Router,Switch, Redirect} from 'react-router-dom';\r\n \r\nimport Home from './Home';\r\n// import About from './About';\r\nimport Item from './item';\r\n \r\n// 注意：所有用到的数据都需要进行导出\r\nimport items from './items.js';\r\n/**\r\n * 场景一：使用路由无刷新切换页面\r\n */\r\nclass RouterSwitch extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <Link>路由组件： 相当于a标签功能；to属性相当于a标签的href属性；拦截了a标签中点击后刷新跳转*/}\r\n                <nav>\r\n                    <Router>\r\n                    <Link to=\"/\">首页</Link>\r\n                    <span> | </span>\r\n                    <Link to=\"/about\">关于我们</Link>\r\n                    <Route path=\"/\" exact render={el => <Home items={items} />} />\r\n                {/* <Route path=\"/about\" component={About} /> */}\r\n \r\n                {/* 注意Item的Route组件因为是和主页及关于我们页面一样，所以应该在此组件中切换 */}\r\n                {/* /item/:id(\\d+)表示id后只能是数字，params是path路径下的可变部分，如/item/1 */}\r\n                {/* 也需要将数据items传递到Item页面，这里是路由组件，所以props属性会自动添加几个与路由有关的几个属性history:对象，location:对象，match:对象\r\n                通过...props将props属性中所有对象传递到Item组件，且传入items*/}\r\n                <Route path='/Item/:id(\\d+)' render={(props)=><Item {...props} items={items} />} />\r\n                    </Router>\r\n                   \r\n                </nav>\r\n                <br />\r\n                {/* Route 组件：用于设置路由信息，path属性匹配路径；component设置要显示的组件；exact表示精确匹配，非 exact 模式下 '/' 匹配所有以 '/' 开头的路由（注意/前不要加点./） */}\r\n                {/* <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/about\" component={About} /> */}\r\n \r\n                {/* 场景二：商品展示主页。*/}\r\n                {/* 如果Route组件需要传递数据，就不能使用compoment属性，而是需要使用render属性 \r\n                render 属性值是一个函数,当路由匹配的时候指定该函数进行渲染\r\n                */}\r\n\r\n              \r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default RouterSwitch;","import React from 'react';\r\nimport { Button, TabBar } from 'antd-mobile';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Mytab extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const { pathname } = this.props.location;\r\n        console.log(pathname.split('/'));\r\n        if(pathname.split('/').length>2){\r\n            return null;\r\n        }\r\n        return (\r\n            <div style={ {\r\n                position: 'fixed',\r\n                width: '100%',\r\n                bottom: 0\r\n            } }>\r\n                <TabBar\r\n                    unselectedTintColor=\"#949494\"\r\n                    tintColor=\"red\"\r\n                    barTintColor=\"white\"\r\n                >\r\n                    <TabBar.Item\r\n                        title=\"首页\"\r\n                        key=\"home\"\r\n                        icon={\r\n                            <i className='iconfont icon-shouye'></i>                           \r\n                        }\r\n                        selectedIcon={\r\n                            <i className='iconfont icon-shouye'></i>                           \r\n                        }\r\n                        selected={ pathname === '/home' }\r\n                        onPress={ () => {\r\n                            this.props.history.push('/home');\r\n                        } }\r\n                    >\r\n                    </TabBar.Item>\r\n                    <TabBar.Item\r\n                        icon={\r\n                            <i className='iconfont icon-icon4'></i>                           \r\n                        }\r\n                        selectedIcon={\r\n                            <i className='iconfont icon-icon4'></i>                           \r\n                        }\r\n                        title=\"购物车\"\r\n                        key=\"cart\"\r\n                        selected={ pathname === '/cart' }\r\n                        onPress={ () => {\r\n                            this.props.history.push('/cart')\r\n                        } }\r\n                    ></TabBar.Item>\r\n                    <TabBar.Item\r\n                        icon={\r\n                            <i className='iconfont icon-weibiaoti-'></i>\r\n                        }\r\n                        selectedIcon={\r\n                            <i className='iconfont icon-weibiaoti-'></i>\r\n                           \r\n                        }\r\n                        title=\"订单列表\"\r\n                        key=\"code\"\r\n                        selected={ pathname === '/code' }\r\n                        onPress={ () => {\r\n                            this.props.history.push('/code')\r\n\r\n                        } }\r\n                    >\r\n                        \r\n\t\t\t</TabBar.Item>\r\n                    <TabBar.Item\r\n                        icon={<i className='iconfont icon-wode2'></i> }\r\n                        selectedIcon={<i className='iconfont icon-wode2'></i>  }\r\n                        title=\"我的淘宝\"\r\n                        key=\"mine\"\r\n                        selected={ pathname === '/mine' }\r\n                        onPress={ () => {\r\n                            this.props.history.push('/mine')\r\n                        } }\r\n                    >\r\n                        \r\n\t\t\t</TabBar.Item>\r\n                </TabBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(Mytab);","import React from 'react'\r\nimport {WingBlank,Carousel} from 'antd-mobile'\r\nimport './tb.css'\r\nimport Mytab from './Mytab';\r\n\r\n// iconfont.cn官网搜选图标，加入购物车\r\n// 点击页面右上角购物车，将图标添加进项目（没有项目就新建）\r\n// 点击“下载到本地”\r\n// 解压压缩包，全部复制到项目public文件夹下，\r\n// 在index.html中通过link引入iconfont.css\r\n// 使用时，<i className='iconfont icon-具体名字'></i>\r\nclass Home extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            data:['1','2','3'],  \r\n            imgHeight: 176, \r\n            data1 : [{\r\n              src:'https://img.alicdn.com/imgextra/i4/55815106/O1CN01uNl1J31naawFdgd8m_!!0-saturn_solar.jpg_220x220.jpg_.webp',\r\n              name:'黑麦威士忌',\r\n              price:'￥111',\r\n              number:'100人购买',\r\n            },\r\n                {src:'https://img.alicdn.com/imgextra/i2/118669861/O1CN0121jFBu2MiOE7tfsYD_!!0-saturn_solar.jpg_220x220.jpg_.webp',\r\n                name:'波本酒',\r\n                price:'￥222',\r\n                number:'100人购买',\r\n              },\r\n                {src:'https://img.alicdn.com/imgextra/i4/291340029/O1CN01VAP52Q1C5K6z7sGyN_!!0-saturn_solar.jpg_220x220.jpg_.webp',\r\n                name:'基尔酒',\r\n                price:'￥333',\r\n                number:'100人购买',\r\n              },\r\n                {src:'https://img.alicdn.com/imgextra/i4/55538386/O1CN0134kVaL2Boq0le0Ei6_!!0-saturn_solar.jpg_220x220.jpg_.webp',\r\n                name:'朗姆酒',\r\n                price:'￥444',\r\n                number:'100人购买',\r\n              },\r\n                {src:'https://img.alicdn.com/imgextra/i1/55538386/O1CN0119YOke2Boq2Rivk2B_!!0-saturn_solar.jpg_220x220.jpg_.webp',\r\n                name:'伏特加',\r\n                price:'￥555',\r\n                number:'100人购买',\r\n              },\r\n                {src:'https://img.alicdn.com/imgextra/i2/118669861/O1CN0121jFBu2MiOE7tfsYD_!!0-saturn_solar.jpg_220x220.jpg_.webp',\r\n                name:'琴酒',\r\n                price:'￥666',\r\n                number:'100人购买',\r\n              },\r\n                {src:'https://img.alicdn.com/imgextra/i3/291340029/O1CN01YrekGQ1C5K2WmJFvg_!!0-saturn_solar.jpg_220x220.jpg_.webp',\r\n                name:'雪莉酒',\r\n                price:'￥777',\r\n                number:'100人购买',\r\n              },\r\n                {src:'https://img.alicdn.com/imgextra/i3/113296325/O1CN01G0rlPh1watjqy1T0Z_!!0-saturn_solar.jpg_220x220.jpg_.webp',\r\n                name:'龙舌兰',\r\n                price:'￥888',\r\n                number:'100人购买', \r\n              },\r\n                {src:'https://img.alicdn.com/imgextra/i3/59422206/O1CN01VDD8iZ1SAOLrpIXkf_!!0-saturn_solar.jpg_220x220.jpg_.webp',\r\n                name:'苦艾酒',\r\n                price:'￥999',\r\n                number:'100人购买',\r\n              },\r\n                {src:'https://img.alicdn.com/imgextra/i2/169530060/O1CN01Ro15O41CJWOW2Dd40_!!0-saturn_solar.jpg_220x220.jpg_.webp',\r\n                name:'基安蒂',\r\n                price:'￥1000',\r\n                number:'100人购买',\r\n              }\r\n    ]\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        // simulate img loading\r\n        setTimeout(() => {\r\n          this.setState({\r\n            data: ['https://aecpm.alicdn.com/simba/img/TB12NW9kH1YBuNjSszhSuwUsFXa.jpg', \r\n            'https://img.alicdn.com/imgextra/i1/6000000000720/O1CN01QON2dX1HBnnbupK0g_!!6000000000720-0-octopus.jpg', \r\n            'https://img.alicdn.com/imgextra/i4/6000000002436/O1CN01r0sGKc1TrjRkVM8w8_!!6000000002436-0-octopus.jpg'],\r\n          });\r\n        }, 100);\r\n      }\r\n    render() {\r\n    return (\r\n        <div>\r\n             <header className=\"Search\">\r\n                    <div className=\"header-bd\">\r\n                        <a className=\"placeholder\" onClick={()=>{this.props.history.push('/home/search')}}>\r\n                        <span className=\"text iconfont iconsousuo\">寻找宝贝店铺</span>\r\n                        </a>\r\n                    </div>\r\n                </header>\r\n        <Carousel\r\n          autoplay={true}\r\n          infinite\r\n          style={{marginTop:'37px'}}\r\n        >\r\n          {this.state.data.map(val => (\r\n            <a\r\n              key={val}\r\n              href=\"http://www.alipay.com\"\r\n              style={{ display: 'inline-block', width: '100%', height: this.state.imgHeight }}\r\n            >\r\n              <img\r\n                src={val}\r\n                alt=\"\"\r\n                style={{ width: '100%', verticalAlign: 'top' }}\r\n                onLoad={() => {\r\n                  // fire window resize event to change height\r\n                  window.dispatchEvent(new Event('resize'));\r\n                  this.setState({ imgHeight: 'auto' });\r\n                }}\r\n              />\r\n            </a>\r\n          ))}\r\n        </Carousel>\r\n                <ul className='goods'>\r\n               \r\n                    {\r\n                        this.state.data1.map((data,i)=>(\r\n                            <li key={i} \r\n                                onClick={()=>this.props.history.push({\r\n                                    pathname:'/home/child',\r\n                                    // id:i,\r\n                                    src:data.src\r\n                              })}\r\n                              className='details'\r\n                            >\r\n                                <img src={data.src}/>\r\n                                <p className='p1'>{data.name}</p>                              \r\n                                <p className='p2'>{data.price}</p>\r\n                                <p className='p3'>{data.number}</p>\r\n                               \r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n        \r\n        <Mytab/>\r\n           \r\n            \r\n        </div>\r\n    )\r\n}\r\n}\r\nexport default Home\r\n","import React from 'react'\r\nimport Mytab from './Mytab'\r\n\r\nconst Cart = (props) => {\r\n    return (\r\n        <div>\r\n            购物车\r\n            <button onClick={props.history.goBack}>返回</button>\r\n            <Mytab/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","import React from 'react'\r\nimport {\r\n   \r\n    withRouter\r\n} from 'react-router-dom'\r\nimport {NavBar,Icon,TabBar,Button} from 'antd-mobile'\r\nconst Child =(props)=> {\r\n        return (\r\n            <div className='doc'>\r\n                <Icon type='left' size='lg' onClick={()=>props.history.goBack()}/>\r\n                <div>\r\n                    <img src={props.location.src}/>\r\n                </div> \r\n\r\n                <div className=\"bottomNav\" style={ {position: 'fixed',bottom:0, width: '100%',height:'50px',lineHeight:'50px'}}>\r\n                  <div className='btns'>\r\n                    <button style={{width:'16%',backgroundColor:'white',border:'none'}} >\r\n                        <i className='iconfont icon-dianpu'></i>\r\n                        店铺\r\n                    </button>\r\n                    <button style={{width:'16%',backgroundColor:'white',border:'none'}}>\r\n                        <i className='iconfont icon-kefu' ></i>\r\n                        客服\r\n                    </button>\r\n                    <button style={{width:'16%',backgroundColor:'white',border:'none'}}>\r\n                        <i className='iconfont icon-shoucang'></i>\r\n                        收藏\r\n                    </button>\r\n                    <button  style={{width:'26%',backgroundColor:' rgb(255, 133, 42)',border:'none'}}>\r\n                        加入购物车\r\n                    </button>\r\n                    <button  style={{width:'26%',backgroundColor:' rgb(255, 133, 42)',border:'none'}}>\r\n                        立即购买\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    \r\n      }\r\n    \r\n    \r\nexport default withRouter(Child)","import Mytab from './Mytab'\r\nimport React from 'react'\r\n\r\nconst Code = () => {\r\n    return (\r\n        <div>\r\n            订单\r\n            <Mytab/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Code","import Mytab from './Mytab'\r\nimport React from 'react'\r\nconst Mine = () => {\r\n    return (\r\n        <div>\r\n            我的淘宝\r\n            <Mytab/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mine","import React from 'react'\r\nimport { SearchBar, Button, WhiteSpace, WingBlank } from 'antd-mobile';\r\n\r\nclass Search extends React.Component {\r\n  state = {\r\n    value: '',\r\n  };\r\n  onChange= (value) => {\r\n    this.setState({ value });\r\n  };\r\n  clear = () => {\r\n    this.setState({ value: '' });\r\n  };\r\n  handleClick = () => {\r\n    this.manualFocusInst.focus();\r\n  }\r\n  render() {\r\n    return (<div>\r\n      <SearchBar\r\n        value={this.state.value}\r\n        placeholder=\"Search\"\r\n        onSubmit={value => console.log(value, 'onSubmit')}\r\n        onClear={value => console.log(value, 'onClear')}\r\n        onFocus={() => console.log('onFocus')}\r\n        onBlur={() => console.log('onBlur')}\r\n        onCancel={() => this.props.history.goBack()} \r\n        showCancelButton\r\n        onChange={this.onChange}\r\n      />\r\n    </div>);\r\n  }\r\n}\r\nexport default Search","import React from 'react';\r\nimport { BrowserRouter as Router, Redirect, Route, NavLink, Switch } from 'react-router-dom'\r\n\r\nimport Mytab from './Mytab';\r\nimport Home from './Home';\r\nimport Cart from './Cart';\r\nimport Child from './Child';\r\nimport Code from './Code';\r\nimport Mine from './Mine';\r\nimport Search from './Search'\r\n// https://aecpm.alicdn.com/simba/img/TB15tIjGVXXXXcoapXXSutbFXXX.jpg\r\nconst App = ()=>{\r\n\treturn <Router>\r\n\t\t<Switch>\r\n\t\t\t<Route exact path='/home' component={Home} />\r\n\t\t\t<Route path='/cart' component={Cart} />\r\n\t\t\t<Route path='/home/detail' component={Cart} />\r\n\t\t\t<Route path='/home/child' render={(props)=><Child {...props} />}/>\r\n            <Route path='/home/search' component={Search}/>\r\n            <Route path='/code' component={Code}/>\r\n            <Route path='/Mine' component={Mine}/>\r\n\r\n\t\t\t<Route component={Home} />\r\n\t\t\t{/* <Route render={()=><Redirect to='/'/>} /> */}\r\n\t\t</Switch>\r\n\t\t{/* <Mytab /> */}\r\n\t</Router>\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';//这个只要index 引用了就行\r\nimport Home from './pages/Home'; //导入那一个文件  \r\nimport List from './components/List'; //要导入那个文件的内容\r\n//变灰了就是声明了没有用\r\nimport Control from './components/Control';\r\nimport Demo01 from './pages/Demo01';\r\n// import App from './App';\r\nimport Hoc,{Detail} from './pages/Hoc';\r\nimport Hook from './pages/Hook';\r\nimport Context from './pages/context'\r\nimport TodoList from './components/TodoList'\r\nimport 'antd-mobile/dist/antd-mobile.css';\r\nimport RouterSwitch from './exercise/RouterSwitch';\r\n// import App2 from './App2'\r\n// import App from './reduceDemo/App'\r\n// import 'antd-mobile/dist/antd-mobile.css'\r\nimport App from './taobao/App'\r\n// import App from './exercise1/App'\r\n// alt shift + 上下键   复制一行\r\n// alt + 上下键         移动一行\r\n// 按住alt ，鼠标点击\r\n// Ctrl + shift + 左右键，选中整个单词\r\n// ctrl+shift+L \r\n\r\n\r\nlet url ='https://www.fastmock.site/mock/9e4bbf9e35ad15942010865690c87ac6/api/login';\r\nfetch(url,{\r\n    method:'post',\r\n    headers:{\r\n        'Content-Type':'application/json'\r\n    },\r\n})\r\n.then(res=>res.json())\r\n.then(res=>console.log(res));\r\nReactDOM.render(\r\n  <App/>\r\n  // <Control/>\r\n  // <RouterSwitch/>\r\n  // <App2/>\r\n    // <Context.Provider value='usecontext'>\r\n    //   <Hook/>\r\n    // </Context.Provider>\r\n ,\r\n  // <Hook/>,\r\n  // <div><Hoc/><Detail/></div>,\r\n  // <Hoc/>,\r\n  // <App/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// 组件声明\r\n// 函数组件\r\n// UI（展示）组件，木偶组件\r\n// function App(props){\r\n//   const { title, id } = props;\r\n//   return <div>\r\n//     <h1>App组件内容</h1>\r\n//     <div>{title}</div>\r\n//     <div>{id}</div>\r\n//   </div>\r\n// }\r\n// // 智能组件\r\n// class Demo extends React.Component{\r\n//   constructor(){\r\n//      super();\r\n//     //  声明状态\r\n//      this.state = {\r\n//        name: new Date().toLocaleString()\r\n//      }\r\n//      setInterval(()=>{\r\n//       this.setState({name:new Date().toLocaleString()})\r\n//      },1000)\r\n//   }\r\n//   render(){\r\n//     return <div>\r\n//       <div>name:{this.state.name}</div>\r\n//       <App title={this.state.name} id='app'/>\r\n//     </div>\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// let ele = React.createElement(\r\n//   'h1',\r\n//   {id:'title'},\r\n//   React.createElement('div',{},'hello'),\r\n//   'react'\r\n// )\r\n\r\n// 将jsx对象渲染到DOM中\r\n// let ReactDOM = {\r\n//   render(eleObj,container){\r\n//     // 解构\r\n//     const { type,props } = eleObj;\r\n//     // 创建第一层节点\r\n//     let ele = document.createElement(type);\r\n//     // 遍历属性对象，将属性添加到第一层节点对象上\r\n//     for (const prop in props) {\r\n//       console.log(prop)\r\n//       if(prop == 'children'){\r\n//         if(typeof props.children == 'string'){\r\n//             const txtNode = document.createTextNode(props.children);\r\n//             ele.appendChild(txtNode);\r\n//             break;\r\n//         }\r\n//         // 将第一层节点对象的子元素添加进去\r\n//         props.children.forEach( child => {\r\n//           if(typeof child == 'string'){\r\n//             const txtNode = document.createTextNode(child);\r\n//             ele.appendChild(txtNode);\r\n//           }else{\r\n//             ReactDOM.render(child,ele);\r\n//           }\r\n//         })\r\n//       }else{\r\n//         ele[prop] = props[prop];\r\n//       }\r\n//     }\r\n\r\n//     // 将第一层DOM节点添加到container中\r\n//     container.appendChild(ele);\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n  // 1、原生JS，DOM操作（jQ）\r\n  // 2、React：开发效率高、性能高\r\n  // 3、环境搭建、创建一个项目、运行\r\n  // 4、JSX语法\r\n\r\n\r\n\r\n"],"sourceRoot":""}