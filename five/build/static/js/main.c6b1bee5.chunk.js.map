{"version":3,"sources":["components/List.js","components/btns.js","pages/Home.js","components/Control.js","pages/context.js","pages/Demo02.js","pages/Demo01.js","pages/Hoc.js","components/Input.js","components/TodoList.js","exercise/Home.js","exercise/item.js","exercise/items.js","exercise/RouterSwitch.js","pages3/Mytab.js","pages3/Home.js","pages3/Totop.js","pages3/Data.js","pages3/gouwuche.js","pages3/My.js","pages3/Shoucang.js","pages3/Child.js","pages3/Search.js","pages3/Login.js","pages3/Datareducer.js","pages3/Collectreducer.js","pages3/Loginreducer.js","pages3/Shopreducer.js","pages3/store.js","App2.js","taobao/Shoppingreducer.js","taobao/Collectreducer.js","taobao/Loginreducer.js","taobao/Store.js","taobao/Mytab.js","taobao/Home.js","taobao/Cart.js","taobao/Child.js","taobao/Search.js","taobao/Login.js","index.js"],"names":["List","done","this","props","id","renderTodos","Component","Buttons","map","item","key","onClick","getData","React","Context","createContext","Demo02","style","width","height","backgroundColor","Consumer","data","Demo01","protoTypes","name","PropTypes","string","isRequired","defaultProps","withFetch","Com","url","state","fetch","then","res","json","setState","Input","dangerouslySetInnerHTML","__html","content","console","log","title","htmlFor","type","onChange","handleChange","value","inpValue","ref","inp","input","placeholder","addTodo","Home","items","className","to","price","toFixed","Item","match","params","itemInfo","find","Number","Mytab","selectedTab","hidden","fullScreen","pathname","location","position","bottom","unselectedTintColor","tintColor","barTintColor","icon","selectedIcon","selected","onPress","history","push","data-seed","username","badge","connect","datalist","withRouter","imgHeight","setTimeout","dispatch","dataList","autoplay","infinite","top","val","href","display","src","alt","verticalAlign","onLoad","window","dispatchEvent","Event","size","mode","alert","list","i","img","color","fontSize","shop","index","My","data1","collect","Child","goBack","right","some","e","Search","clear","handleClick","manualFocusInst","focus","onCancel","showCancelButton","method","headers","datareducer","action","collectreducer","arr","splice","shopreducer","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","getState","next","returnValue","__REDUX_DEVTOOLS_EXTENSION__","App","exact","path","render","component","Login","Gouwuche","Shoucang","split","length","useEffect","marginTop","number","lineHeight","border","ReactDOM","App2","document","getElementById"],"mappings":"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","file":"static/js/main.c6b1bee5.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nexport default class List extends Component {\r\n  render() {\r\n    const done = this.props.done\r\n      return (\r\n        <div id=\"div2\">\r\n          <ul id=\"doing\"> \r\n            {this.props.renderTodos(done)}\r\n          </ul>\r\n        </div>\r\n        \r\n      )\r\n  }\r\n}","import React from 'react';\r\n//函数 数组任何数据都在props中\r\nconst Buttons = (props)=>{\r\n    const btns = [1,2,3,4,5];\r\n    {\r\n        return <div>{\r\n            btns.map(\r\n                (item)=>(\r\n                  <button \r\n                    key={item}  onClick = {()=>props.getData(item)}\r\n                  >\r\n                    {item}\r\n                  </button>\r\n              ))\r\n            }\r\n\r\n        </div>\r\n       \r\n      }\r\n}\r\n\r\n\r\nexport default Buttons;","import React,{Component} from 'react'; //这一个是必须写的 因为这里面用到了\r\nimport List from '../components/List'  //这里也要去引用List\r\nimport Buttons from '../components/btns';\r\nclass Home extends React.Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        data:[]\r\n      }\r\n      // this.handleClick = this.handleClick.bind(this)\r\n    }\r\n  componentDidMount(){\r\n      fetch('https://cnodejs.org/api/v1/topics')\r\n      .then(res=>res.json())\r\n      .then( ({data}) => {\r\n        console.log(data);\r\n        this.setState({data})\r\n      })\r\n    }\r\n  getData=(page)=>{\r\n    console.log(page);\r\n    fetch('https://cnodejs.org/api/v1/topics?page='+page).\r\n    then(res=>res.json()).\r\n    then(({data})=>{\r\n    console.log(data);\r\n    this.setState({data}); //这里拿到json数据\r\n  })\r\n  }\r\n    render(){\r\n      const { data } = this.state;\r\n      return <div>\r\n          \r\n        <Buttons getData = {this.getData}/>\r\n        <List data={data}/>\r\n      </div>\r\n    }\r\n  }\r\n  //命名导出 默认导出 主要看react都是默认导出不用取名    \r\n  //默认导出 只能导出一个\r\n  export default Home; //这里是默认导出  \r\n\r\n//   //命名导出\r\n//   let a =10;\r\n//   export {a}\r\n//   //在另一个文件引用的时候就是  \r\n//   import {a} from ''\r\n\r\n","\r\nimport React, { Component } from 'react'\r\n//引入样式样式\r\nimport './control.css';\r\nexport default class Control extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue :'',\r\n            todos:[{title:'1',done:false},\r\n            {title:'2',done:true},\r\n            {title:'3',done:false},\r\n            {title:'4',done:false}\r\n        \r\n        ],\r\n        // finished:[\r\n        //     {title:'',done:false}\r\n        // ]\r\n        }\r\n    }\r\n    //获取实时内容\r\n    handleChange = (e)=>{\r\n        console.log(\"执行了handlechange\");\r\n        console.log(e.target.value);\r\n        this.setState({inpValue:e.target.value});\r\n\r\n        // localStorage.setItem('KEY',e.target.value);\r\n\r\n    }\r\n    // addChange = (todos)=>{\r\n    //     this.setState({todos.title:todos.target.value})\r\n    // }\r\n    \r\n    //这个的作用是 让他刷新之后还存在 在这里去存\r\n    componentDidUpdate(){\r\n        console.log(\"执行了update\");\r\n        localStorage.setItem('todos',JSON.stringify(this.state.todos))\r\n        \r\n\r\n    }\r\n\r\n    //在这里面去取\r\n    componentDidMount(){\r\n        console.log(\"执行了didmount\");\r\n\r\n        this.input.focus();\r\n        // this.input.value; 这样也可以\r\n        let todos = localStorage.getItem('todos');//todos在最初进来的时候没有 \r\n        if(todos){\r\n            this.setState({\r\n                todos:JSON.parse(todos)\r\n            })\r\n            //有就把值赋给 todos \r\n        }\r\n    }\r\n    //添加内容到已经完成里面\r\n    addTodo=()=>{\r\n        console.log(\"执行了addtodo\");\r\n\r\n        if(this.state.inpValue){\r\n            this.setState({\r\n                todos:[\r\n                    {\r\n                        title:this.state.inpValue,\r\n                        done:false},\r\n                        ...this.state.todos\r\n                ]\r\n            })\r\n            this.setState({inpValue:''})\r\n        }\r\n        \r\n        // else{\r\n        //     return;\r\n        // }\r\n        \r\n    }\r\n    // addTodo=()=>{\r\n    //     this.state.todos.push({title:this.state.inpValue}); //在数组里面再添加一项\r\n    //     this.setState({todos:this.state.todos});\r\n    // }\r\n    //删除内容\r\n    removeTodo=(index)=>{\r\n        console.log(\"执行了removetodo\");\r\n\r\n        // let newTodos = JSON.parse(JSON.stringify(this.state.todos));//深拷贝 一个全新的\r\n        // newTodos.splice(index,1);\r\n        // this.setState({\r\n        //     todos:newTodos\r\n        // })\r\n        //  另一种方法\r\n        this.setState({\r\n            todos:this.state.todos.filter((item,idx)=>\r\n                index!=idx\r\n                //不等于它就是真的 就会返回 这里就是直接一个函数。 这里是一个返回值\r\n            )\r\n        },()=>{\r\n            localStorage.setItem('todos',JSON.stringify(this.state.todos))\r\n\r\n        })\r\n\r\n        // console.log(e);\r\n        // console.log(this.state.todos[0].title);\r\n    }\r\n    // setStatus=(status)=>{\r\n    //     console.log(status);\r\n    //     if(status){\r\n    //         this.setState(\r\n    //             {\r\n    //                 finished:[\r\n    //                     {title:this.state.inpValue,done:false},...this.state.todos\r\n    //                 ]\r\n    //             }\r\n    //         )\r\n    //     }\r\n    // }\r\n    toggle=(index)=>{\r\n        console.log(\"执行了toggle\");\r\n\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos));\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n           todos:newTodos\r\n        });\r\n      \r\n    }\r\n    renderTodos=(done)=>{\r\n        console.log(\"执行了rendertodo\");\r\n    \r\n      return this.state.todos.map((todo,index) =>{\r\n            if(done == todo.done){\r\n                return <li>\r\n                    {/* <input type=\"checkbox\" onClick={()=>this.setStatus(todo.done)} /> */}\r\n                    <input  onClick={()=>this.toggle(index)}  checked={done}  type=\"checkbox\"/ >\r\n                    <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                    {/* 这里是实现添加那个<h1>ddd</h1>的  就是解析标签 */}\r\n                    {/* <span >{todo.title}</span> */}\r\n\r\n                    <button onClick={()=>this.removeTodo(index)}>删除 </button>\r\n                </li>\r\n            }\r\n            \r\n        })\r\n    }\r\n    render() { \r\n        //  localStorage.setItem('todos',JSON.stringify(this.state.todos))\r\n        //写在这里都会执行 就不用在toggle中写了\r\n        const {todos,inpValue} = this.state;\r\n        let arr1 = todos.filter(item=>item.done);\r\n        let arr2 = todos.filter(item=>!item.done);\r\n        // let arr1 = todos.filter((item,index)=>{\r\n        //     return !item.done;\r\n        //     console.log(index,item);\r\n        // })\r\n        //每循环一次 回调函数执行一次\r\n        return (\r\n            <div className='box'>\r\n                <label htmlFor=\"inp\">todolist\r\n                \r\n                </label>\r\n                <input id =\"inp\"value={inpValue} type=\"text\" onChange={this.handleChange} ref={inp =>this.input = inp} action=\"#content\" placeholder=\"todo\" >\r\n                    {/* 加入了value就是react的了 value后面的值不能动了 就是一改变就会调用这个函数  value后面的值是默认的 给他赋值是e.target.value 走了setState就会更新*/}\r\n                </input>\r\n                <button onClick={this.addTodo} >\r\n                    添加\r\n                </button>\r\n                <h2>\r\n                    正在进行{arr2.length}\r\n                </h2>\r\n               \r\n                {/* {\r\n                    [{title:1,done:false},{}].map()\r\n                } */}\r\n                <ul id=\"doing\">\r\n                    \r\n                    {this.renderTodos(false)}\r\n                   \r\n                </ul>\r\n                <h2>\r\n                    已经完成{arr1.length}\r\n                </h2>\r\n                <ul style={{color:'blue'}}>\r\n                    {/* //里面是个对象变量 第一个是变量括起来 里面是对象 marginRight */}\r\n                    {/* {{color:3>2'red':'green'}} */}\r\n                    \r\n                    {this.renderTodos(true)}\r\n                </ul>\r\n                {\r\n                    3>2 ? <button>登录</button>:<span>不成立</span>\r\n                }\r\n                {/* 可以直接加条件判断 不能查if语句 因为放的要是一个值 */}\r\n                <button>\r\n                    {2>3?'真':'假'}\r\n                    {/* 声明一个状态 每次取反 ture一直切换  */}\r\n\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nconst Context = React.createContext();//返回一个对象 来接受它、\r\nexport default Context;\r\n\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from './context'\r\n\r\nfunction Demo02() {\r\n    return (\r\n        <div style={{width:100,height:'100px',backgroundColor:'red'}}>\r\n                    <h2>demo02</h2>\r\n                    <ul>\r\n                        <Context.Consumer>\r\n                        {\r\n                            data=>data.data.map((item)=><li key={item}>{item}</li>)\r\n                            // data =>data.map(item=><li key ={item}>{item}</li>)\r\n                        }\r\n                        </Context.Consumer>\r\n                    </ul>\r\n                    \r\n\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default Demo02\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from './context'\r\nimport Demo02 from './Demo02'\r\n\r\n//小练习 对于行内加样式\r\n\r\n        const Demo01 = (props)=>{\r\n            return (\r\n                <div style={{width:100,height:'100px',backgroundColor:'red'}}>\r\n                    <h2>demo01</h2>\r\n                    <ul>\r\n                        <Context.Consumer>\r\n                        {\r\n                            data=>data.data.map((item)=><li key={item}>{item}</li>)\r\n                        }\r\n                        </Context.Consumer>\r\n                    </ul>\r\n                    <Demo02/>\r\n                        {/* 这里引用就直接写就行 */}\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    \r\n\r\nDemo01.protoTypes ={\r\n    name:PropTypes.string.isRequired\r\n    //必须传的  \r\n}\r\nDemo01.defaultProps={\r\n    name:'tomg'\r\n    // 就是你没有传参数的时候 给你一个默认的。\r\n}\r\nexport default Demo01\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n//高阶函数 接受一个组件返回一个新的组件\r\nconst withFetch = (Com,url)=>{\r\n    return class Topic extends Component{\r\n        constructor(){\r\n            super();\r\n            this.state = {\r\n                data:[]\r\n            }\r\n        }\r\n        componentDidMount(){\r\n            fetch(url)\r\n            .then(res=>res.json())\r\n            .then(res=>this.setState({data:res.data}))\r\n        }\r\n        render(){\r\n            return <Com data={this.state.data}/>\r\n        }\r\n    }\r\n}\r\nconst De =(props)=>{\r\n    return <div>\r\n        <h1>标题</h1>\r\n        {/* <div>{props.data.content}</div> */}\r\n        <div dangerouslySetInnerHTML={\r\n            {__html:props.data.content}\r\n            // 这里是获取到了Com 组件中data属性的内容\r\n        } ></div>\r\n    </div>\r\n}\r\nexport const Detail = withFetch(De,'https://cnodejs.org/api/v1/topic/5433d5e4e737cbe96dcef312');\r\n\r\n// 详情页\r\n// export class Detail extends Component{\r\n//     constructor(){\r\n//         super();\r\n//         this.state={\r\n//             data:''\r\n//         }\r\n//     }\r\n//     componentDidMount(){\r\n//         fetch('https://cnodejs.org/topic/5e16978581adfe260207a8c1')\r\n//         .then(res=>res.json())\r\n//         .then(res=>this.setState({data:res.data.content}))\r\n//     }\r\n//     render(){\r\n//         return<div>\r\n//             <h1>标题</h1>\r\n//             <div>{this.state.data}</div>\r\n//         </div>\r\n//     }\r\n// }\r\n\r\n\r\n// export class Hoc extends Component {\r\n//     constructor(){\r\n//         super();\r\n//         this.state = {\r\n//             data:[]\r\n//         }\r\n//     }\r\n//     componentDidMount(){\r\n//         fetch('https://cnodejs.org/api/v1/topics')\r\n//         .then(res=>res.json())\r\n//         .then(res=>this.setState({data:res.data}))\r\n//     }\r\n//     render() {\r\n//         console.log(this.state.data);\r\n//         return (\r\n//             <div>\r\n//                 hoc\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n// 这是对上面的简化\r\nconst Ho = (props)=>{\r\n    console.log(props.data);\r\n    return <ul>\r\n        {\r\n            props.data.map((item)=><li>{item.title}</li>)\r\n        }\r\n    </ul>\r\n}\r\nconst Hoc = withFetch(Ho,'https://cnodejs.org/api/v1/topics')\r\nexport default Hoc;\r\n","import React,{Component} from 'react';\r\n// import TodoList from './TodoList'\r\n// import './TodoList.css';\r\nexport default class Input extends Component {\r\n   \r\n\r\n    render() {\r\n        return (\r\n            <div id=\"div1\">  \r\n                <label htmlFor=\"inp\">\r\n                    todolist \r\n                </label>\r\n\r\n                <input id=\"inp\" \r\n                type=\"text\"\r\n                onChange={this.props.handleChange} \r\n                value={this.props.inpValue}\r\n                ref={inp =>this.input = inp}\r\n                placeholder=\"添加ToDo\" >\r\n                </input>\r\n\r\n                <button  \r\n                onClick={this.props.addTodo} >\r\n                    添加\r\n                </button>\r\n            </div>\r\n        \r\n        \r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n//引入样式样式\r\n// import './TodoList.css';\r\nimport List from './List';\r\nimport Input from'./Input';\r\nexport default class TodoList extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue :'',\r\n            todos:[ ],\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({inpValue:e.target.value});\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem('todos',JSON.stringify(this.state.todos))\r\n    }\r\n\r\n    componentDidMount(){\r\n        let todos = localStorage.getItem('todos');//todos在最初进来的时候没有 \r\n        if(todos){\r\n            this.setState({\r\n                todos:JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    addTodo=()=>{\r\n        if(this.state.inpValue==''){\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos: [\r\n                {\r\n                    title: this.state.inpValue,\r\n                    done: false\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n        this.setState({inpValue:''})\r\n    }\r\n    toggle=(index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos: newTodos\r\n        })\r\n    }\r\n    removeTodo=(index)=>{\r\n        this.setState({\r\n          todos:this.state.todos.filter((item,idx)=>\r\n              index!=idx\r\n          )\r\n        })\r\n\r\n      // console.log(e);\r\n      // console.log(this.state.todos[0].title);\r\n    }\r\n    renderTodos=(done)=>{\r\n        return this.state.todos.map((todo,index) =>{\r\n              if(done == todo.done){\r\n                  return <li>\r\n                      <input  onClick={()=>this.toggle(index)}  checked={done}  type=\"checkbox\"/ >\r\n                      <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                      <button onClick={()=>this.removeTodo(index)}>删除 </button>\r\n                  </li>\r\n              }\r\n          })\r\n      }\r\n    render(){\r\n        const {todos,inpValue} = this.state;\r\n        let arr1 = todos.filter(item=>!item.done);\r\n        let arr2 = todos.filter(item=>item.done);\r\n        return (\r\n            <div>\r\n                <Input\r\n                    addTodo={this.addTodo} \r\n                    handleChange = {this.handleChange}\r\n                    inpValue = {inpValue}\r\n                /> \r\n                \r\n                <h2>正在进行{arr1.length}</h2>\r\n                <List renderTodos={this.renderTodos} done={false}/>\r\n                <h2>已经完成{arr2.length}</h2>\r\n                <List renderTodos={this.renderTodos} done={true}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\r\nimport React from 'react';\r\nimport './router.css';\r\nimport { Link, Route } from 'react-router-dom';\r\n \r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        //商品数据通过props传递过来\r\n        super(props)\r\n    }\r\n    render() {\r\n        console.log(this.props);\r\n        //此处得到的数据已经是数组\r\n        let items = this.props.items;\r\n        return (\r\n            <div>\r\n                {/* <div>主页</div> */}\r\n                {/* 场景二：商品展示主页 */}\r\n                <h2>商品列表</h2>\r\n                <ul className=\"item-list\">\r\n                    <li className=\"head\">\r\n                        <span>名称</span>\r\n                        <span>价格</span>\r\n                    </li>\r\n                    {\r\n                        // 点击某行进入详情页\r\n                        items.map(item => (\r\n                            <li key={item.id}>\r\n                                <span>\r\n                                 {/* 注意Item的Route组件因为是和主页及关于我们页面一样切换不同页面，所以应该在RouterSwitch组件中使用Route组件 */}\r\n                                    <Link to={'/Item/'+item.id}>{item.name}</Link>\r\n                                </span>\r\n                                <span>￥ {(item.price / 100).toFixed(2)} </span>\r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Home;","\r\nimport React from 'react';\r\n \r\nclass Item extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        //此处可得到所有传过来的history,match,location,items所有数据\r\n        // let {history,match:{params:{id}},location,items} = this.props;\r\n        console.log(this.props);\r\n        let items = this.props.items;\r\n        // let id = this.props.match.params.id;\r\n        let {match:{params:{id}}} = this.props;\r\n        console.log(id);\r\n\r\n        //通过传递过来的id匹配到数据中的数据,注意从match.params中获得的id是string，必须转为数字类型\r\n        let itemInfo = items.find(item=>item.id === Number(id));\r\n        console.log(itemInfo)  \r\n        return itemInfo ? (\r\n            <div>\r\n              <h2>商品详情 - {itemInfo.name}</h2>\r\n              <dt>ID</dt>\r\n              <dd>{itemInfo.id}</dd>\r\n              <dt>名称</dt>\r\n              <dd>{itemInfo.name}</dd>\r\n              <dt>价格</dt>\r\n              <dd>￥ {(itemInfo.price/100).toFixed(2)}</dd>\r\n            </div>\r\n          ) : <div>获取商品详情出错</div>;\r\n    }\r\n}\r\n \r\nexport default Item;","\r\n   const  items=[\r\n      {\r\n        id: 1,\r\n        name: 'iPhone XR',\r\n        price: 542500\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Apple iPad Air 3',\r\n        price: 377700\r\n      },\r\n      {\r\n        id: 3,\r\n        name: 'Macbook Pro 15.4',\r\n        price: 1949900\r\n      },\r\n      {\r\n        id: 4,\r\n        name: 'Apple iMac',\r\n        price: 1629900\r\n      },\r\n      {\r\n        id: 5,\r\n        name: 'Apple Magic Mouse',\r\n        price: 72900\r\n      },\r\n      {\r\n        id: 6,\r\n        name: 'Apple Watch Series 4',\r\n        price: 599900\r\n      }\r\n    ]\r\n    export default items;","\r\nimport React from 'react';\r\nimport {Link, Route ,BrowserRouter as Router,Switch, Redirect} from 'react-router-dom';\r\n \r\nimport Home from './Home';\r\n// import About from './About';\r\nimport Item from './item';\r\n \r\n// 注意：所有用到的数据都需要进行导出\r\nimport items from './items.js';\r\n/**\r\n * 场景一：使用路由无刷新切换页面\r\n */\r\nclass RouterSwitch extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <Link>路由组件： 相当于a标签功能；to属性相当于a标签的href属性；拦截了a标签中点击后刷新跳转*/}\r\n                <nav>\r\n                    <Router>\r\n                    <Link to=\"/\">首页</Link>\r\n                    <span> | </span>\r\n                    <Link to=\"/about\">关于我们</Link>\r\n                    <Route path=\"/\" exact render={el => <Home items={items} />} />\r\n                {/* <Route path=\"/about\" component={About} /> */}\r\n \r\n                {/* 注意Item的Route组件因为是和主页及关于我们页面一样，所以应该在此组件中切换 */}\r\n                {/* /item/:id(\\d+)表示id后只能是数字，params是path路径下的可变部分，如/item/1 */}\r\n                {/* 也需要将数据items传递到Item页面，这里是路由组件，所以props属性会自动添加几个与路由有关的几个属性history:对象，location:对象，match:对象\r\n                通过...props将props属性中所有对象传递到Item组件，且传入items*/}\r\n                <Route path='/Item/:id(\\d+)' render={(props)=><Item {...props} items={items} />} />\r\n                    </Router>\r\n                   \r\n                </nav>\r\n                <br />\r\n                {/* Route 组件：用于设置路由信息，path属性匹配路径；component设置要显示的组件；exact表示精确匹配，非 exact 模式下 '/' 匹配所有以 '/' 开头的路由（注意/前不要加点./） */}\r\n                {/* <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/about\" component={About} /> */}\r\n \r\n                {/* 场景二：商品展示主页。*/}\r\n                {/* 如果Route组件需要传递数据，就不能使用compoment属性，而是需要使用render属性 \r\n                render 属性值是一个函数,当路由匹配的时候指定该函数进行渲染\r\n                */}\r\n\r\n              \r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default RouterSwitch;","import { Button ,TabBar} from 'antd-mobile';\r\nimport {withRouter} from 'react-router-dom'\r\nimport React from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass Mytab extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        selectedTab: '/home',\r\n        hidden: false,\r\n        fullScreen: false,\r\n      };\r\n    }\r\n   \r\n    render() {\r\n      const pathname =this.props.location.pathname;\r\n      // let id = this.props.match.params.id;\r\n\r\n      return (\r\n        <div style={ {position: 'fixed',bottom:0, width: '100%' }}>\r\n          <TabBar\r\n            unselectedTintColor=\"#111111\"\r\n            tintColor=\"#33A3F4\"\r\n            barTintColor=\"#f7e5e8\"\r\n          >\r\n            <TabBar.Item\r\n              title=\"首页\"\r\n              key=\"Home\"\r\n              icon={\r\n                <i className='iconfont iconHomehomepagemenu'></i>                           \r\n              }\r\n              selectedIcon={\r\n                <i className='iconfont iconHomehomepagemenu'></i>                           \r\n              }\r\n              selected={pathname === '/home' }\r\n              // badge={3}\r\n              onPress={() => {\r\n                console.log(this.props)\r\n                this.props.history.push('/home')\r\n               \r\n              }}\r\n              data-seed=\"logId\"\r\n            >\r\n            </TabBar.Item>\r\n            <TabBar.Item\r\n            \r\n            icon={\r\n              <i className='iconfont iconshoucang'></i>                           \r\n              }\r\n            selectedIcon={\r\n              <i className='iconfont iconshoucang'></i>                           \r\n            }\r\n              title=\"收藏\"\r\n              key=\"dingdan\"\r\n              selected={pathname === '/shoucang'}\r\n              onPress={() => {\r\n                this.props.username?\r\n                this.props.history.push('/shoucang'):\r\n                this.props.history.push('/login')\r\n               \r\n              }}\r\n            >\r\n            \r\n            </TabBar.Item>\r\n            <TabBar.Item\r\n             icon={\r\n              <i className='iconfont iconcart-Empty'></i>                           \r\n            }\r\n            selectedIcon={\r\n              <i className='iconfont iconcart-Empty'></i>                           \r\n            }\r\n           \r\n              title=\"购物车\"\r\n              key=\"gouwuche\"\r\n              badge='99'\r\n              selected={pathname === '/gouwuche'}\r\n              onPress={() => {\r\n                  this.props.history.push('/gouwuche')\r\n                \r\n              }}\r\n              onClick={()=>{\r\n                console.log(this.props)\r\n              }}\r\n            >\r\n            </TabBar.Item>\r\n            \r\n           \r\n            \r\n            <TabBar.Item\r\n            icon={\r\n              <i className='iconfont iconwode'></i>                           \r\n            }\r\n            selectedIcon={\r\n              <i className='iconfont iconwode'></i>                           \r\n            }\r\n              title=\"我的淘宝\"\r\n              key=\"my\"\r\n              selected={pathname === '/my'}\r\n              onPress={() => {\r\n                this.props.history.push('/my')\r\n              }}\r\n            >\r\n            </TabBar.Item>\r\n            \r\n            \r\n          </TabBar>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\nconst mapStateToProps = (state) => ({\r\n    datalist: state.data.datalist,\r\n    username:state.log.username\r\n})\r\nexport default connect(mapStateToProps)(withRouter(Mytab));","import { Icon, Button, WingBlank, Carousel, NoticeBar, WhiteSpace, Grid, DatePickerView } from 'antd-mobile'\r\nimport { Link, Router, NavLink, Route, Redirect, useHistory, useLocation, useParams, useRouteMatch, withRouter } from 'react-router-dom'\r\nimport React, { useEffect } from 'react'\r\nimport './Home.css'\r\nimport Mytab from './Mytab';\r\n// import list from './Contents.js'\r\nimport Totop from './Totop'\r\nimport { getData } from './Data'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: ['1', '2', '3'],\r\n            imgHeight: 375,\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        // simulate img loading\r\n        setTimeout(() => {\r\n            this.setState({\r\n                data:[\"https://gw.alicdn.com/bao/uploaded/i1/1659913878/O1CN01hzAGF81eWAWENMPK1_!!0-item_pic.jpg_500x500q90.jpg_.webp\",\r\n                \"https://gw.alicdn.com/bao/uploaded/i2/2137121108/O1CN01nGXueD1K3VTK3Aghn_!!0-item_pic.jpg_500x500q90.jpg_.webphttps://gw.alicdn.com/bao/uploaded/i2/50672170/O1CN011RttvpfNPPCdMI2_!!50672170.jpg_500x500q90.jpg_.webp\",\r\n                \"https://gw.alicdn.com/bao/uploaded/i3/47732699/O1CN01j8QGOI1VoBUZvBEw8_!!47732699.jpg_500x500q90.jpg_.webp\"\r\n            ]\r\n            });\r\n        }, 100);\r\n        \r\n        this.props.dispatch(getData())\r\n    }\r\n    componentDidUpdate(){\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header className=\"Search\">\r\n                    <div className=\"header-bd\">\r\n                        <a className=\"placeholder\" onClick={() => { this.props.history.push('/home/search') }}>\r\n                            <span className=\"text iconfont iconsousuo\">寻找宝贝店铺</span>\r\n                        </a>\r\n                    </div>\r\n                </header>\r\n\r\n                <Carousel\r\n                    autoplay={true}\r\n                    infinite={true}\r\n                    style={{ top: '20px' }}\r\n                >\r\n                    {this.state.data.map(val => (\r\n                        <a\r\n                            key={val}\r\n                            href={val}\r\n                            style={{ display: 'inline-block', width: '100%', height: this.state.imgHeight }}\r\n                        >\r\n                            <img\r\n                                src={val}\r\n                                alt=\"\"\r\n                                style={{ width: '100%', verticalAlign: 'top' }}\r\n                                onLoad={() => {\r\n                                    console.log(val);\r\n                                    // fire window resize event to change height\r\n                                    window.dispatchEvent(new Event('resize'));\r\n                                    this.state.imgHeight = 'auto';\r\n                                }}\r\n                            />\r\n                        </a>\r\n                    ))}\r\n                </Carousel>\r\n                <WhiteSpace size=\"lg\" />\r\n                <NoticeBar mode=\"link\" onClick={() => alert('别这样对我')}>\r\n                    双十一要到了，是时候卸载淘宝了！\r\n                    </NoticeBar>\r\n                <WhiteSpace size=\"lg\" />\r\n\r\n                {/* 你可能还喜欢 */}\r\n                <div className='imgs'>\r\n                    <img src=\"https://img.alicdn.com/tfs/TB1V2eQrKSSBuNjy0FlXXbBpVXa-966-114.png\" className=\"fenimg\" />\r\n                </div>\r\n\r\n                <ul className='contents'>\r\n                    {\r\n                        this.props.datalist.map((list, i) => (\r\n                            <li\r\n                                key={i}\r\n                                className='content'\r\n                            // onClick={()=>props.history.push({\r\n                            //     pathname:'/home/child/'+i,\r\n                            //     id:i,\r\n                            //     src:list.src\r\n                            //   })}\r\n                            >\r\n                                <Link to={'/child/' + i}>\r\n                                    <img src={list.img} />\r\n                                    <p className='title'>\r\n                                        {list.title}\r\n                                    </p>\r\n                                    <p className='price'>\r\n                                        ￥{list.price}\r\n                                        <span style={{ color: 'grey', fontSize: '11px' }}> {list.id}人已购买</span>\r\n                                    </p>\r\n\r\n                                </Link>\r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n                {/* <Totop></Totop> */}\r\n                <Mytab />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    datalist: state.data.datalist\r\n})\r\nexport default connect(mapStateToProps)(withRouter(Home))\r\n\r\n","import React, { Component } from 'react'\r\nimport './Totop.css'\r\nexport default class Totop extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { \r\n            hasScrolled: false \r\n        }\r\n        this.onScroll = this.onScroll.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        window.onscroll = this.onScroll;\r\n    }\r\n    onScroll = () => {\r\n        if (document.documentElement.scrollTop > 100 && !this.state.hasScrolled) {\r\n          this.setState({ hasScrolled: true })\r\n        } else if (document.documentElement.scrollTop < 100 && this.state.hasScrolled) {\r\n          this.setState({ hasScrolled: false })\r\n        }\r\n    }\r\n    scrollToTop = () => {\r\n        document.documentElement.scrollTop = 0\r\n    }\r\n\r\n    render() {\r\n        return (\r\n    \r\n            <div className='Totop'>\r\n                {this.state.hasScrolled && (\r\n                <div className='top' onClick={this.scrollToTop}>\r\n                    <i className=\"iconfont icondingbu \"></i>\r\n                    <p>顶部</p>\r\n                </div>\r\n                )}\r\n      </div>\r\n        )\r\n    }\r\n}","export const getData = () => {\r\n    return (dispatch) => {\r\n        let url = 'https://www.fastmock.site/mock/9e4bbf9e35ad15942010865690c87ac6/api/getgoodslist';\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                dispatch({\r\n                    type: 'GETDATA',\r\n                    dataList: res.data\r\n                })\r\n            });\r\n    }\r\n}\r\nexport const log = () => {\r\n    return (dispatch) => {\r\n        let url = 'https://www.fastmock.site/mock/9e4bbf9e35ad15942010865690c87ac6/api/login';\r\n        fetch(url, {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                dispatch(\r\n                    {\r\n                        type: 'LOGIN',\r\n                        username: res.data.name //这里实现换值\r\n                    }\r\n                )\r\n            }\r\n            );\r\n    }\r\n}\r\n\r\n","import { Button, WhiteSpace } from 'antd-mobile'\r\nimport React, { useEffect } from 'react'\r\nimport { Link, Router, NavLink, Route, Redirect, useHistory, useLocation, useParams, useRouteMatch, withRouter } from 'react-router-dom'\r\n\r\nimport Mytab from './Mytab'\r\nimport { connect } from 'react-redux'\r\nconst Gouwuche = (props) => {\r\n\r\n    console.log(props);\r\n    // useEffect(() => {\r\n    //    props.dispatch({\r\n    //        type:'COLLECT',\r\n    //        collect:props.datalist\r\n    //    })\r\n    // }, [])\r\n    return (\r\n\r\n        <div>\r\n            <h1>购物车</h1>\r\n            <ul id='gul' style={{ backgroundColor: '#f5f5f9' }}>\r\n                {\r\n                    props.datalist.map((list, i) => (\r\n                        <li\r\n                            key={i}\r\n                        >\r\n\r\n                                <div id='cart'>\r\n                                    <div id=\"cinp\">\r\n                                        <input type=\"radio\" name=\"xuan\" className='que'/>\r\n                                        <span></span>\r\n                                    </div>\r\n                            <Link to={'/child/' + Number(list.id - 100)}>\r\n\r\n                                    <div id='cimg'>\r\n                                        <img src={list.img} />\r\n\r\n                                    </div>\r\n                            </Link>\r\n\r\n                                    <div id='cp'>\r\n                                        <p id='cpy'>\r\n                                            {list.title}\r\n                                        </p>\r\n                                        <p id='cpp'>\r\n                                            ￥{list.price}\r\n                                            <span style={{ color: 'grey', fontSize: '11px' }}> {list.id}人已购买</span>\r\n                                        </p>\r\n                                        <button id='cancelshopbutton' onClick={() => props.dispatch({\r\n                                            type: 'CANCELSHOP',\r\n                                            index: i\r\n                                        })}>取消购买</button>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n            <Mytab />\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return { datalist: state.shop }\r\n}\r\nexport default connect(mapStateToProps)(Gouwuche)\r\n\r\n","import React from 'react'\r\nimport Mytab from './Mytab'\r\n\r\nconst My = (props) => {\r\n    console.log(props);\r\n    console.log(props.data1);\r\n    return (\r\n        <div>\r\n            我的淘宝\r\n            <Mytab/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default My\r\n","import { Button, WhiteSpace } from 'antd-mobile'\r\nimport React, { useEffect } from 'react'\r\nimport { Link, Router, NavLink, Route, Redirect, useHistory, useLocation, useParams, useRouteMatch, withRouter } from 'react-router-dom'\r\n\r\nimport Mytab from './Mytab'\r\nimport { connect } from 'react-redux'\r\nconst Shoucang = (props) => {\r\n    \r\n    return (\r\n        <div>\r\n            <p id='navp'><i className='iconfont iconshoucang'></i>我的收藏</p>\r\n            <ul style={{ backgroundColor: '#f5f5f9' }}>\r\n                {\r\n                    props.datalist.map((list, i) => (\r\n                        <li\r\n                            key={i}\r\n                        >\r\n                            <div id='shoucang'>\r\n                                <Link to={'/child/' + Number(list.id - 100)}>\r\n\r\n                                    <div id='simg'>\r\n                                        <img src={list.img} />\r\n\r\n                                    </div>\r\n                                </Link>\r\n\r\n                                <div id='sp'>\r\n                                    <p id='spt'>\r\n                                        {list.title}\r\n                                    </p>\r\n                                    <p id='spp'>\r\n                                        ￥{list.price}\r\n                                        <span style={{ color: 'grey', fontSize: '11px' }}> {list.id}人已购买</span>\r\n                                    </p>\r\n                                    <button id='cancelbutton' onClick={() => props.dispatch({\r\n                                        type: 'CANCEL',\r\n                                        index: i\r\n                                    })}>取消收藏</button>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n            <Mytab />\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    datalist: state.collect\r\n})\r\nexport default connect(mapStateToProps)(Shoucang)\r\n\r\n","import React, { useState } from 'react'\r\nimport {\r\n    withRouter\r\n} from 'react-router-dom'\r\nimport './Home.css'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Child extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        // console.log(this.props)\r\n        let id = this.props.match.params.id;//知道是哪一个商品\r\n        return (\r\n            <div className='doc'>\r\n                <div className='top-bar'>\r\n                    {/* //顶部回到上一页 */}\r\n                    <button\r\n                        className='btn-back'\r\n                        onClick={() => this.props.history.goBack()}>\r\n                        <span className='back'> {'<'} </span>\r\n                    </button>\r\n                    {/* 顶部加入购物车 */}\r\n                    <button className=\"btn-cart\"\r\n                        onClick={\r\n                            () => {\r\n                                this.props.dispatch({\r\n                                    type: 'SHOP',\r\n                                    shop: this.props.datalist[id]\r\n                                })\r\n                            }\r\n                        }    >\r\n                        <i className='iconfont icongouwuche3-copy' ></i>\r\n                    </button>\r\n                </div>\r\n\r\n                <div style={{ top: '0px' }}>\r\n                    <img src={this.props.datalist[id].img} style={{ width: '100%' }} />\r\n                    <p className='price' style={{ color: 'coral', fontSize: '25px' }}>\r\n                        ￥{this.props.datalist[id].price}\r\n                        <span style={{ color: 'grey', fontSize: '15px', right: '0px' }}> {this.props.datalist[id].id}人已购买</span>\r\n                    </p>\r\n                    <p className='title' style={{ fontSize: '20px' }}>\r\n                        {this.props.datalist[id].title}\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"bottomBtn\">\r\n                    <div className='btn'>\r\n                        <button>\r\n                            <i className='iconfont iconicon_A' ></i>\r\n                            <span>店铺</span>\r\n                        </button>\r\n                        {/* 实现弹出框 */}\r\n                        {/* <button onClick={() => prompt('客服', '请输入你要咨询的内容', [\r\n                            { text: 'Cancel' },\r\n                            { text: 'Submit', onPress: value => console.log(`输入的内容:${value}`) },\r\n                        ], 'default', '100')}\r\n                        ><i className='iconfont iconkefuxiaoxixinxi'></i>\r\n                            <span>客服</span>\r\n                        </button> */}\r\n                        <button>\r\n                            <i className='iconfont iconkefuxiaoxixinxi'></i>\r\n                            <span>客服</span>\r\n                        </button>\r\n                        <button\r\n                            onClick={\r\n                                () => {\r\n                                    if (!this.props.username) {\r\n                                        this.props.history.push({pathname:'/login',id:id})\r\n                                    }\r\n\r\n                                    this.props.dispatch({\r\n                                        type: 'COLLECT',\r\n                                        collect: this.props.datalist[id],\r\n                                        // isShow:!this.props.isShow //存储是否收藏\r\n                                    })\r\n                                }\r\n                            }\r\n                        >\r\n                            {this.props.collect.some((item) => {\r\n                                return item.id - 100 == id;\r\n                            })\r\n                                ? <i className='iconfont iconshixinxingxing'></i>\r\n                                : <i className='iconfont iconshoucang'></i>}\r\n                            <span>{this.props.collect.some((item) => {\r\n                                console.log(item.id);\r\n                                console.log(id);\r\n                                return item.id - 100 == id;\r\n                            }) ? '已收藏' : '收藏'}</span>\r\n                        </button>\r\n\r\n                        <button\r\n                            onClick={\r\n                                (e) => {\r\n                                    this.props.dispatch({\r\n                                        type: 'SHOP',\r\n                                        shop: this.props.datalist[id]\r\n                                    })\r\n                                }\r\n                            }\r\n                        >\r\n                            加入购物车\r\n                        </button>\r\n                        <button>\r\n                            立即购买\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    datalist: state.data.datalist,\r\n    username: state.log.username,\r\n    collect: state.collect\r\n    // isShow:state.log.isShow //存储是否收藏\r\n})\r\nexport default connect(mapStateToProps)(withRouter(Child))\r\n\r\n\r\n","import React from 'react'\r\nimport { SearchBar, Button, WhiteSpace, WingBlank } from 'antd-mobile';\r\n\r\nclass Search extends React.Component {\r\n  state = {\r\n    value: '',\r\n  };\r\n//   componentDidMount() {\r\n//     this.autoFocusInst.focus();\r\n//   }\r\n  onChange= (value) => {\r\n    this.setState({ value });\r\n  };\r\n  clear = () => {\r\n    this.setState({ value: '' });\r\n  };\r\n  handleClick = () => {\r\n    this.manualFocusInst.focus();\r\n  }\r\n  render() {\r\n    console.log(this);\r\n\r\n    return (<div>\r\n      <SearchBar\r\n        value={this.state.value}\r\n        placeholder=\"Search\"\r\n        onCancel={() => this.props.history.push('/home')} //这里是回到上一页  还是直接添加\r\n        showCancelButton\r\n        onChange={this.onChange}\r\n      />\r\n    </div>);\r\n  }\r\n}\r\nexport default Search","import React,{useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {log} from './Data'\r\nimport './Home.css'\r\nconst Login = (props) => {\r\n    let id = props.location.id;\r\n    return (\r\n        <div>\r\n            {\r\n                <div>\r\n                    <div><h2>您需要登录才能继续访问</h2></div>\r\n                    <div className=\"tb-logo\"></div>\r\n                    <div className='fm-text'>\r\n                        <input name=\"fm-login-id\" type=\"text\"  id=\"fm-login-id\" placeholder=\"手机号/邮箱/会员名\"/>\r\n\r\n                    </div>\r\n                    <div className='fm-text'>\r\n\r\n                        <input name=\"fm-login-password\" type=\"password\"  id=\"fm-login-password\" placeholder=\"请输入登录密码\"  ></input>\r\n                    </div>\r\n                    <button id='login'\r\n                    onClick={()=>{\r\n                        props.history.push('/child/'+id);\r\n                        props.dispatch(log())\r\n                        }\r\n                    }\r\n                        >登录</button> \r\n            \r\n                </div>\r\n                \r\n            }\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state)=>({\r\n    username:state.username\r\n})\r\nexport default connect(mapStateToProps)(Login)\r\n","const datareducer = (state={datalist:[]},action)=>{\r\n    console.log(action);\r\n    switch(action.type){\r\n        case 'GETDATA':\r\n            return {datalist:action.dataList}\r\n        default:\r\n            return state;//什么也没有也要返回一个值\r\n    }\r\n}\r\nexport default datareducer;","let collect = [];\r\nconst collectreducer = (state = collect, action) => {\r\n    if (action.type == 'COLLECT') {\r\n        return [...state, action.collect];\r\n    }\r\n    if (action.type == 'CANCEL') {\r\n        let arr = [...state];\r\n        console.log(arr);\r\n        arr.splice(action.index, 1);\r\n        return arr;\r\n    }\r\n    console.log(action);\r\n    return state;\r\n}\r\nexport default collectreducer;","//如果是login就 改变usernmame的值 然后有了值 页面就会回到收藏那里\r\nconst log=(state={username:''},action)=>{\r\n   console.log(action);\r\n   if(action.type =='LOGIN'){\r\n       return {username:action.username}\r\n   }\r\n   return state;\r\n\r\n}\r\nexport default log","let shop = [];\r\nconst shopreducer = (state=shop,action)=>{\r\n    if(action.type == 'SHOP'){\r\n        return [...state,action.shop];\r\n    }\r\n    if(action.type == 'CANCELSHOP'){\r\n        let arr = [...state];\r\n        arr.splice(action.index,1);\r\n        return arr;\r\n    }\r\n    console.log(action);\r\n    return state;\r\n}\r\nexport default shopreducer;","import {createStore,combineReducers,applyMiddleware,compose} from 'redux';\r\n//compose就是把多个函数组合在一起变成一个函数\r\n// import todolist from './Todosreducer';\r\n// import homereducer from './Homereducer'\r\n// let rootReducer = combineReducers({todo:todolist,home:homereducer});//把子reducer组合起来 在todos里面就变成了数组\r\nimport data from './Datareducer';\r\nimport collect from './Collectreducer'\r\nimport log from './Loginreducer'\r\nimport shop from './Shopreducer'\r\n// import thunk from 'redux-thunk' //这是一个中间键\r\nlet rootReducer = combineReducers({data,collect,log,shop});\r\nfunction logger({ getState }) {\r\n    return (next) => (action) => {\r\n      console.log('will dispatch', action)\r\n  \r\n      // 调用 middleware 链中下一个 middleware 的 dispatch。\r\n      let returnValue = next(action)\r\n  \r\n      console.log('state after dispatch', getState())\r\n  \r\n      // 一般会是 action 本身，除非\r\n      // 后面的 middleware 修改了它。\r\n      return returnValue\r\n    }\r\n    //箭头函数返回了一个箭头函数\r\n  }\r\n//会先走logger thunk 在走到reducer\r\nconst thunk = ({ dispatch, getState }) => (next) => (action) => {\r\n  console.log('thunk');\r\n  if (typeof action === 'function') {\r\n      return action(dispatch, getState);\r\n  }\r\n  return next(action);\r\n};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n      applyMiddleware(logger, thunk),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\nexport default store;\r\n//其实就是状态容器 存着数据 ","import React from 'react';\r\nimport { Route ,BrowserRouter as Router,Switch, Redirect} from 'react-router-dom';\r\nimport './App.css';\r\nimport Mytab from './pages3/Mytab';\r\nimport Home from './pages3/Home'\r\nimport Gouwuche from './pages3/gouwuche'\r\nimport My from './pages3/My'\r\nimport Shoucang from './pages3/Shoucang'\r\nimport Child from './pages3/Child'\r\nimport Search from './pages3/Search';\r\nimport Login from './pages3/Login';\r\nimport list from './pages3/Contents.js'\r\nimport Totop from './pages3/Totop';\r\nimport store from './pages3/store'\r\nimport {Provider} from 'react-redux'  //给你往下提供 包到最外层\r\n\r\nconst App =()=>{\r\n  \r\n  return (\r\n    <Provider store={store}>\r\n\r\n    \r\n    <Router>\r\n      <Switch>\r\n        <Route exact path='/home' render={()=><Home/>}></Route>\r\n        <Route path ='/child/:id' render={(props)=><Child {...props} />}></Route>\r\n        <Route path='/home/search' component={Search}></Route>\r\n        <Route path='/login' component={Login}></Route>\r\n        <Route path='/gouwuche' component={Gouwuche}></Route>\r\n        <Route path='/my' render={(props)=><My {...props}/>}></Route>\r\n        <Route path='/shoucang' component={Shoucang}></Route>\r\n        <Route component={Home}></Route>\r\n        \r\n        {/* <Route render ={\r\n          ()=>\r\n            <Redirect to='/'/>\r\n        }/> */}\r\n\r\n      </Switch>\r\n\r\n      {/* <Mytab/> */}\r\n    </Router>\r\n    </Provider>\r\n  )\r\n}\r\n  \r\nexport default App;","let arr = [];\r\n\r\nconst shopreducer = (state = {arr}, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case 'GETLIST':\r\n            return { arr: action.arr }\r\n        default:\r\n            return state; //什么也没有也要返回一个值\r\n    }\r\n}\r\nexport default shopreducer;","let collect = [];\r\nconst collectreducer = (state = collect, action) => {\r\n    if (action.type == 'COLLECT') {\r\n        return [...state, action.collect];\r\n    }\r\n    if (action.type == 'CANCEL') {\r\n        let arr = [...state];\r\n        console.log(arr);\r\n        arr.splice(action.index, 1);\r\n        return arr;\r\n    }\r\n    console.log(action);\r\n    return state;\r\n}\r\nexport default collectreducer;","//如果是login就 改变usernmame的值 然后有了值 页面就会回到收藏那里\r\nconst log = (state = { username: '' }, action) => {\r\n    console.log(action);\r\n    if (action.type == 'LOGIN') {\r\n        return { username: action.username }\r\n    }\r\n    return state;\r\n}\r\nexport default log","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\n//compose就是把多个函数组合在一起变成一个函数\r\n// import todolist from './Todosreducer';\r\n// import homereducer from './Homereducer'\r\n// let rootReducer = combineReducers({todo:todolist,home:homereducer});//把子reducer组合起来 在todos里面就变成了数组\r\nimport shop from './Shoppingreducer';\r\nimport collect from './Collectreducer'\r\nimport log from './Loginreducer'\r\n// import thunk from 'redux-thunk' //这是一个中间键\r\nlet rootReducer = combineReducers({ shop, collect, log });\r\n\r\nfunction logger({ getState }) {\r\n    return (next) => (action) => {\r\n      console.log('will dispatch', action)\r\n  \r\n      // 调用 middleware 链中下一个 middleware 的 dispatch。\r\n      let returnValue = next(action)\r\n  \r\n      console.log('state after dispatch', getState())\r\n\r\n      return returnValue\r\n    }\r\n    //箭头函数返回了一个箭头函数\r\n  }\r\n//会先走logger thunk 在走到reducer\r\nconst thunk = ({ dispatch, getState }) => (next) => (action) => {\r\n  console.log('thunk');\r\n  if (typeof action === 'function') {\r\n      return action(dispatch, getState);\r\n  }\r\n  return next(action);\r\n};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n      applyMiddleware(logger, thunk),\r\n    //   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\nexport default store;","import React from 'react';\r\nimport { Button, TabBar } from 'antd-mobile';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nclass Mytab extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    render() {\r\n        const { pathname } = this.props.location;\r\n        console.log(pathname.split('/'));\r\n        if(pathname.split('/').length>2){\r\n            return null;\r\n        }\r\n        return (\r\n            <div style={ {\r\n                position: 'fixed',\r\n                width: '100%',\r\n                bottom: 0\r\n            } }>\r\n                <TabBar\r\n                    unselectedTintColor=\"#949494\"\r\n                    tintColor=\"red\"\r\n                    barTintColor=\"white\"\r\n                >\r\n                    <TabBar.Item\r\n                        title=\"首页\"\r\n                        key=\"home\"\r\n                        icon={\r\n                            <i className='iconfont icon-shouye'></i>                           \r\n                        }\r\n                        selectedIcon={\r\n                            <i className='iconfont icon-shouye'></i>                           \r\n                        }\r\n                        selected={ pathname === '/home' }\r\n                        onPress={ () => {\r\n                            this.props.history.push('/home');\r\n                        } }\r\n                    >\r\n                    </TabBar.Item>\r\n                    <TabBar.Item\r\n                        icon={\r\n                            <i className='iconfont icon-icon4'></i>                           \r\n                        }\r\n                        selectedIcon={\r\n                            <i className='iconfont icon-icon4'></i>                           \r\n                        }\r\n                        title=\"收藏\"\r\n                        key=\"cart\"\r\n                        selected={ pathname === '/cart' }\r\n                        onPress={ () => {\r\n                            this.props.history.push('/cart')\r\n                           if(!this.props.username){\r\n                            this.props.history.push('/login')\r\n                          \r\n                        }    \r\n                        } }\r\n                        // onClick={\r\n                        //     (e)=>{\r\n                        //         if(!this.props.username){\r\n                        //             this.props.history.push('/login')\r\n                        //         }    \r\n                        //     }\r\n                        // }         \r\n                    ></TabBar.Item>\r\n                    <TabBar.Item\r\n                        icon={\r\n                            <i className='iconfont icon-weibiaoti-'></i>\r\n                        }\r\n                        selectedIcon={\r\n                            <i className='iconfont icon-weibiaoti-'></i>\r\n                           \r\n                        }\r\n                        title=\"订单列表\"\r\n                        key=\"code\"\r\n                        selected={ pathname === '/code' }\r\n                        onPress={ () => {\r\n                            this.props.history.push('/code')\r\n\r\n                        } }\r\n                    >\r\n                        \r\n\t\t\t</TabBar.Item>\r\n                    <TabBar.Item\r\n                        icon={<i className='iconfont icon-wode2'></i> }\r\n                        selectedIcon={<i className='iconfont icon-wode2'></i>  }\r\n                        title=\"我的淘宝\"\r\n                        key=\"mine\"\r\n                        selected={ pathname === '/mine' }\r\n                        onPress={ () => {\r\n                            this.props.history.push('/mine')\r\n                        } }\r\n                    >\r\n                        \r\n\t\t\t</TabBar.Item>\r\n                </TabBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    list: state.shop.arr,\r\n    username:state.log.username\r\n})\r\nexport default connect(mapStateToProps)(withRouter(Mytab));\r\n","import React, { useEffect } from 'react'\r\nimport { WingBlank, Carousel } from 'antd-mobile'\r\nimport './tb.css'\r\nimport Mytab from './Mytab';\r\nimport { connect } from 'react-redux'\r\nimport { Link, Router, withRouter } from 'react-router-dom'\r\n\r\n// iconfont.cn官网搜选图标，加入购物车\r\n// 点击页面右上角购物车，将图标添加进项目（没有项目就新建）\r\n// 点击“下载到本地”\r\n// 解压压缩包，全部复制到项目public文件夹下，\r\n// 在index.html中通过link引入iconfont.css\r\n// 使用时，<i className='iconfont icon-具体名字'></i>\r\nconst getList = () => {\r\n  return (dispatch) => {\r\n    let url = 'https://www.fastmock.site/mock/9e4bbf9e35ad15942010865690c87ac6/api/getgoodslist';\r\n    fetch(url, {\r\n      method: 'post',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        console.log(res.data)\r\n        dispatch({\r\n          type: 'GETLIST',\r\n          arr: res.data\r\n        })\r\n      });\r\n  }\r\n}\r\n\r\nconst Home = (props) => {\r\n  console.log(props);\r\n  useEffect(() => { props.dispatch(getList()) }\r\n    , [])\r\n  const data = ['1', '2', '3'], imgHeight = 176;\r\n  return (\r\n    <div>\r\n      <header className=\"Search\">\r\n        <div className=\"header-bd\">\r\n          <a className=\"placeholder\" onClick={() => {props.history.push('/home/search') }}>\r\n            <span className=\"text iconfont iconsousuo\">寻找宝贝店铺</span>\r\n          </a>\r\n        </div>\r\n      </header>\r\n      <Carousel\r\n          autoplay={true}\r\n          infinite\r\n          style={{marginTop:'37px'}}\r\n        >\r\n          {data.map(val => (\r\n            <a\r\n              key={val}\r\n              href=\"http://www.alipay.com\"\r\n              style={{ display: 'inline-block', width: '100%', height: imgHeight }}\r\n            >\r\n              <img\r\n                src={val}\r\n                alt=\"\"\r\n                style={{ width: '100%', verticalAlign: 'top' }}\r\n                onLoad={() => {\r\n                  // fire window resize event to change height\r\n                  window.dispatchEvent(new Event('resize'));\r\n                  imgHeight='auto';\r\n                }}\r\n              />\r\n            </a>\r\n          ))}\r\n        </Carousel>\r\n      <ul className='goods'>\r\n\r\n        {\r\n          props.datalist.map((data, i) => (\r\n            <li key={i}\r\n              onClick={() => props.history.push({\r\n                pathname: '/home/child',\r\n                id: data.id\r\n              })}\r\n              className='details'\r\n            >\r\n              <img src={data.img} />\r\n              <p className='p1'>{data.name}</p>\r\n              <p className='p2'>{data.price}</p>\r\n              <p className='p3'>{data.number}</p>\r\n\r\n            </li>\r\n          ))\r\n        }\r\n      </ul>\r\n\r\n      <Mytab />\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  datalist: state.shop.arr\r\n})\r\nexport default connect(mapStateToProps)(withRouter(Home))\r\n","import React from 'react'\r\nimport Mytab from './Mytab'\r\nimport {connect} from 'react-redux'\r\nimport {\r\n    withRouter\r\n} from 'react-router-dom'\r\nconst Cart = (props) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                {props.arr.map((img,i)=>{\r\n                   return <div>\r\n                       <img style={{height:'188px'}}src={img}/>\r\n                       <button id='cancelbutton' onClick={() => props.dispatch({\r\n                                        type: 'CANCEL',\r\n                                        index:i\r\n                                    })}>取消收藏</button>\r\n                   </div>\r\n                })}\r\n                {/* <img src={props.location.src} /> */}\r\n               \r\n            </div>\r\n            <Mytab/>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    arr: state.collect\r\n})\r\nexport default connect(mapStateToProps)(withRouter(Cart))\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {\r\n    withRouter\r\n} from 'react-router-dom'\r\nimport { NavBar, Icon, TabBar, Button } from 'antd-mobile'\r\nconst Child = (props) => {\r\n    console.log(props);\r\n    let id = props.location.id;\r\n    return (\r\n        <div className='doc'>\r\n            <Icon type='left' size='lg' onClick={() => props.history.goBack()} />\r\n            <div>\r\n                {/* <img src={props.location.src} /> */}\r\n                <img style={{height:'188px'}} src={props.datalist[id-100].img}/>\r\n            </div>\r\n\r\n            <div className=\"bottomNav\" style={{ position: 'fixed', bottom: 0, width: '100%', height: '50px', lineHeight: '50px' }}>\r\n                <div className='btns'>\r\n                    <button style={{ width: '16%', backgroundColor: 'white', border: 'none' }} >\r\n                        <i className='iconfont icon-dianpu'></i>\r\n                        店铺\r\n                    </button>\r\n                    <button style={{ width: '16%', backgroundColor: 'white', border: 'none' }}>\r\n                        <i className='iconfont icon-kefu' ></i>\r\n                        客服\r\n                    </button>\r\n                    <button\r\n                        onClick={\r\n                            (e) => {\r\n                                // if(!props.username){\r\n                                //     props.history.push('/login')\r\n                                // } \r\n                                // console.log(props)\r\n                                props.dispatch({\r\n                                    type: 'COLLECT',\r\n                                    collect: props.datalist[id-100].img\r\n                                })\r\n\r\n                            }\r\n                        }\r\n                        style={{ width: '16%', backgroundColor: 'white', border: 'none' }}>\r\n                        <span>{props.arr.some((item) => {\r\n                            console.log(item)\r\n                                return item == props.datalist[id-100].img ;\r\n                            }) ? '已收藏' : '收藏'}</span>\r\n                        {/* <i className='iconfont icon-shoucang'></i>\r\n                        收藏 */}\r\n                    </button>\r\n                    <button style={{ width: '26%', backgroundColor: ' rgb(255, 133, 42)', border: 'none' }}>\r\n                        加入购物车\r\n                    </button>\r\n                    <button style={{ width: '26%', backgroundColor: ' rgb(255, 133, 42)', border: 'none' }}>\r\n                        立即购买\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    arr: state.collect,\r\n    datalist: state.shop.arr,\r\n    username: state.log.username\r\n})\r\nexport default connect(mapStateToProps)(withRouter(Child))\r\n","import React from 'react'\r\nimport { SearchBar, Button, WhiteSpace, WingBlank } from 'antd-mobile';\r\n\r\nclass Search extends React.Component {\r\n  state = {\r\n    value: '',\r\n  };\r\n  onChange= (value) => {\r\n    this.setState({ value });\r\n  };\r\n  clear = () => {\r\n    this.setState({ value: '' });\r\n  };\r\n  handleClick = () => {\r\n    this.manualFocusInst.focus();\r\n  }\r\n  render() {\r\n    return (<div>\r\n      <SearchBar\r\n        value={this.state.value}\r\n        placeholder=\"Search\"\r\n        onSubmit={value => console.log(value, 'onSubmit')}\r\n        onClear={value => console.log(value, 'onClear')}\r\n        onFocus={() => console.log('onFocus')}\r\n        onBlur={() => console.log('onBlur')}\r\n        onCancel={() => this.props.history.goBack()} \r\n        showCancelButton\r\n        onChange={this.onChange}\r\n      />\r\n    </div>);\r\n  }\r\n}\r\nexport default Search","import React,{useState} from 'react'\r\nimport {connect} from 'react-redux'\r\n// import {log} from './ActionCreators'\r\nconst log=(username)=>{\r\n    return (dispatch)=>{\r\n        let url ='https://www.fastmock.site/mock/9e4bbf9e35ad15942010865690c87ac6/api/login';\r\n        fetch(url,{\r\n            method:'post',\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            },\r\n        })\r\n        .then(res=>res.json())\r\n        .then(res=>\r\n            {\r\n                console.log(res);\r\n                dispatch(\r\n                    {\r\n                    type:'LOGIN',\r\n                    username:res.data.name //这里实现换值\r\n                    }\r\n                )  \r\n            }\r\n            );\r\n    }\r\n}\r\nconst Login = (props) => {\r\n    console.log(props);\r\n    return (\r\n        <div>\r\n            {\r\n                props.username?\r\n                <div>\r\n                    {props.username}\r\n                    <button onClick={()=>{\r\n                        props.dispatch(                       \r\n                            {\r\n                            type:'LOGIN',\r\n                            username:''\r\n                        }\r\n                        )     \r\n                    }\r\n                    \r\n                    }>\r\n                        退出\r\n                    </button>\r\n                </div>\r\n            :\r\n            <button\r\n                onClick={()=>{\r\n                    props.history.push('/cart')\r\n                    props.dispatch(log())\r\n                    }\r\n                }\r\n            >登录</button> \r\n            \r\n            }\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state)=>({\r\n    username:state.username\r\n})\r\nexport default connect(mapStateToProps)(Login)\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';//这个只要index 引用了就行\r\nimport Home from './pages/Home'; //导入那一个文件  \r\nimport List from './components/List'; //要导入那个文件的内容\r\n//变灰了就是声明了没有用\r\nimport Control from './components/Control';\r\nimport Demo01 from './pages/Demo01';\r\n// import App from './App';\r\nimport Hoc,{Detail} from './pages/Hoc';\r\nimport Hook from './pages/Hook';\r\nimport Context from './pages/context'\r\nimport TodoList from './components/TodoList'\r\n\r\n\r\nimport RouterSwitch from './exercise/RouterSwitch';\r\nimport App2 from './App2'\r\n// import App4 from './App4'\r\nimport App from './taobao/App'\r\n// import App from './reduceDemo/App'\r\nimport 'antd-mobile/dist/antd-mobile.css'\r\n// import App from './exercise1/App'\r\n// alt shift + 上下键   复制一行\r\n// alt + 上下键         移动一行\r\n// 按住alt ，鼠标点击\r\n// Ctrl + shift + 左右键，选中整个单词\r\n// ctrl+shift+L \r\n\r\n\r\n// let url ='https://www.fastmock.site/mock/9e4bbf9e35ad15942010865690c87ac6/api/login';\r\n// fetch(url,{\r\n//     method:'post',\r\n//     headers:{\r\n//         'Content-Type':'application/json'\r\n//     },\r\n// })\r\n// .then(res=>res.json())\r\n// .then(res=>console.log(res));\r\nReactDOM.render(\r\n  <App2/>\r\n  // <Control/>\r\n  // <RouterSwitch/>\r\n  // <App2/>\r\n    // <Context.Provider value='usecontext'>\r\n    //   <Hook/>\r\n    // </Context.Provider>\r\n ,\r\n  // <Hook/>,\r\n  // <div><Hoc/><Detail/></div>,\r\n  // <Hoc/>,\r\n  // <App/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// 组件声明\r\n// 函数组件\r\n// UI（展示）组件，木偶组件\r\n// function App(props){\r\n//   const { title, id } = props;\r\n//   return <div>\r\n//     <h1>App组件内容</h1>\r\n//     <div>{title}</div>\r\n//     <div>{id}</div>\r\n//   </div>\r\n// }\r\n// // 智能组件\r\n// class Demo extends React.Component{\r\n//   constructor(){\r\n//      super();\r\n//     //  声明状态\r\n//      this.state = {\r\n//        name: new Date().toLocaleString()\r\n//      }\r\n//      setInterval(()=>{\r\n//       this.setState({name:new Date().toLocaleString()})\r\n//      },1000)\r\n//   }\r\n//   render(){\r\n//     return <div>\r\n//       <div>name:{this.state.name}</div>\r\n//       <App title={this.state.name} id='app'/>\r\n//     </div>\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// let ele = React.createElement(\r\n//   'h1',\r\n//   {id:'title'},\r\n//   React.createElement('div',{},'hello'),\r\n//   'react'\r\n// )\r\n\r\n// 将jsx对象渲染到DOM中\r\n// let ReactDOM = {\r\n//   render(eleObj,container){\r\n//     // 解构\r\n//     const { type,props } = eleObj;\r\n//     // 创建第一层节点\r\n//     let ele = document.createElement(type);\r\n//     // 遍历属性对象，将属性添加到第一层节点对象上\r\n//     for (const prop in props) {\r\n//       console.log(prop)\r\n//       if(prop == 'children'){\r\n//         if(typeof props.children == 'string'){\r\n//             const txtNode = document.createTextNode(props.children);\r\n//             ele.appendChild(txtNode);\r\n//             break;\r\n//         }\r\n//         // 将第一层节点对象的子元素添加进去\r\n//         props.children.forEach( child => {\r\n//           if(typeof child == 'string'){\r\n//             const txtNode = document.createTextNode(child);\r\n//             ele.appendChild(txtNode);\r\n//           }else{\r\n//             ReactDOM.render(child,ele);\r\n//           }\r\n//         })\r\n//       }else{\r\n//         ele[prop] = props[prop];\r\n//       }\r\n//     }\r\n\r\n//     // 将第一层DOM节点添加到container中\r\n//     container.appendChild(ele);\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n  // 1、原生JS，DOM操作（jQ）\r\n  // 2、React：开发效率高、性能高\r\n  // 3、环境搭建、创建一个项目、运行\r\n  // 4、JSX语法\r\n\r\n\r\n\r\n"],"sourceRoot":""}