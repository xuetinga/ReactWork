{"version":3,"sources":["components/List.js","components/btns.js","pages/Home.js","components/Control.js","pages/context.js","pages/Demo02.js","pages/Demo01.js","pages/Hoc.js","components/Input.js","components/TodoList.js","exercise/Home.js","exercise/item.js","exercise/items.js","exercise/RouterSwitch.js","pages3/Mytab.js","pages3/ActionCreators.js","pages3/Totop.js","pages3/Home.js","pages3/gouwuche.js","pages3/My.js","pages3/Shoucang.js","pages3/Child.js","pages3/Search.js","pages3/Login.js","pages3/Datareducer.js","pages3/Collectreducer.js","pages3/Loginreducer.js","pages3/Shopreducer.js","pages3/store.js","App2.js","reduceDemo/Todosreducer.js","App4.js","reduceDemo/Homereducer.js","reduceDemo/store.js","reduceDemo/Todos.js","reduceDemo/Input.js","reduceDemo/actionCreators.js","reduceDemo/Home.js","index.js"],"names":["List","done","this","props","id","renderTodos","Component","Buttons","map","item","key","onClick","getData","React","Context","createContext","Demo02","style","width","height","backgroundColor","Consumer","data","Demo01","protoTypes","name","PropTypes","string","isRequired","defaultProps","withFetch","Com","url","state","fetch","then","res","json","setState","dangerouslySetInnerHTML","__html","content","console","log","title","Input","htmlFor","type","onChange","handleChange","value","inpValue","ref","inp","input","placeholder","addTodo","Home","items","className","to","price","toFixed","Item","match","params","itemInfo","find","Number","Mytab","selectedTab","hidden","fullScreen","pathname","location","position","bottom","unselectedTintColor","tintColor","barTintColor","icon","selectedIcon","selected","onPress","history","push","data-seed","dot","username","connect","datalist","withRouter","dispatch","dataList","method","headers","imgHeight","setTimeout","autoplay","infinite","top","val","href","display","src","alt","verticalAlign","onLoad","window","dispatchEvent","Event","size","mode","alert","list","i","img","color","fontSize","shop","index","My","data1","collect","Child","isToggleOn","goBack","e","target","right","prevState","Search","clear","handleClick","manualFocusInst","focus","onCancel","showCancelButton","useState","datareducer","action","collectreducer","arr","splice","shopreducer","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","getState","next","returnValue","__REDUX_DEVTOOLS_EXTENSION__","App","exact","path","render","component","Login","Gouwuche","Shoucang","todo","todolist","homereducer","home","onKeyDown","keyCode","setShow","ReactDOM","App2","document","getElementById"],"mappings":"mRACqBA,E,uKAEjB,IAAMC,EAAOC,KAAKC,MAAMF,KACtB,OACE,yBAAKG,GAAG,QACN,wBAAIA,GAAG,SACJF,KAAKC,MAAME,YAAYJ,S,GANFK,aCqBnBC,EApBC,SAACJ,GAGT,OAAO,6BAFE,CAAC,EAAE,EAAE,EAAE,EAAE,GAGTK,KACD,SAACC,GAAD,OACE,4BACEC,IAAKD,EAAOE,QAAW,kBAAIR,EAAMS,QAAQH,KAExCA,Q,GCRFI,IAAMP,U,iBCCYA,Y,eCFtBQ,EADCD,IAAME,gBCqBPC,MAlBf,WACI,OACI,yBAAKC,MAAO,CAACC,MAAM,IAAIC,OAAO,QAAQC,gBAAgB,QAC1C,sCACA,4BACI,kBAAC,EAAQC,SAAT,MAEI,SAAAC,GAAI,OAAEA,EAAKA,KAAKd,KAAI,SAACC,GAAD,OAAQ,wBAAIC,IAAKD,GAAOA,YCJ1Dc,EAAS,SAACpB,GACZ,OACI,yBAAKc,MAAO,CAACC,MAAM,IAAIC,OAAO,QAAQC,gBAAgB,QAClD,sCACA,4BACI,kBAAC,EAAQC,SAAT,MAEI,SAAAC,GAAI,OAAEA,EAAKA,KAAKd,KAAI,SAACC,GAAD,OAAQ,wBAAIC,IAAKD,GAAOA,UAIpD,kBAAC,EAAD,QAQpBc,EAAOC,WAAY,CACfC,KAAKC,IAAUC,OAAOC,YAG1BL,EAAOM,aAAa,CAChBJ,KAAK,QAGMF,IC/BTO,EAAY,SAACC,EAAIC,GACnB,yDACI,aAAc,IAAD,8BACT,gBACKC,MAAQ,CACTX,KAAK,IAHA,EADjB,gEAOwB,IAAD,OACfY,MAAMF,GACLG,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GAAG,OAAE,EAAKE,SAAS,CAAChB,KAAKc,EAAId,YAV3C,+BAaQ,OAAO,kBAACS,EAAD,CAAKT,KAAMpB,KAAK+B,MAAMX,WAbrC,GAA2BhB,c,GA2BTwB,GAVZ,SAAC3B,GACP,OAAO,6BACH,4CAEA,yBAAKoC,wBACD,CAACC,OAAOrC,EAAMmB,KAAKmB,cAKI,6DAsDvBX,GARD,SAAC3B,GAER,OADAuC,QAAQC,IAAIxC,EAAMmB,MACX,4BAECnB,EAAMmB,KAAKd,KAAI,SAACC,GAAD,OAAQ,4BAAKA,EAAKmC,aAIpB,qC,OClFJC,E,uKAGP,IAAD,OACL,OACI,yBAAKzC,GAAG,QACJ,2BAAO0C,QAAQ,OAAf,YAIA,2BAAO1C,GAAG,MACV2C,KAAK,OACLC,SAAU9C,KAAKC,MAAM8C,aACrBC,MAAOhD,KAAKC,MAAMgD,SAClBC,IAAK,SAAAC,GAAG,OAAG,EAAKC,MAAQD,GACxBE,YAAY,qBAGZ,4BACA5C,QAAST,KAAKC,MAAMqD,SADpB,qB,GAlBmBlD,a,GCEGA,Y,eCqCvBmD,G,yDApCX,WAAYtD,GAAO,OAAC,oBAAD,YAETA,G,qDAGNuC,QAAQC,IAAIzC,KAAKC,OAEjB,IAAIuD,EAAQxD,KAAKC,MAAMuD,MACvB,OACI,6BAGI,wDACA,wBAAIC,UAAU,aACV,wBAAIA,UAAU,QACV,8CACA,+CAIAD,EAAMlD,KAAI,SAAAC,GAAI,OACV,wBAAIC,IAAKD,EAAKL,IACV,8BAEI,kBAAC,IAAD,CAAMwD,GAAI,SAASnD,EAAKL,IAAKK,EAAKgB,OAEtC,yCAAUhB,EAAKoD,MAAQ,KAAKC,QAAQ,GAApC,e,GA3BbjD,IAAMP,YC4BVyD,E,kDA7BX,WAAY5D,GAAO,uCACTA,G,qDAKNuC,QAAQC,IAAIzC,KAAKC,OACjB,IAAIuD,EAAQxD,KAAKC,MAAMuD,MAEHtD,EAAQF,KAAKC,MAA5B6D,MAAOC,OAAQ7D,GACpBsC,QAAQC,IAAIvC,GAGZ,IAAI8D,EAAWR,EAAMS,MAAK,SAAA1D,GAAI,OAAEA,EAAKL,KAAOgE,OAAOhE,MAEnD,OADAsC,QAAQC,IAAIuB,GACLA,EACH,6BACE,0DAAYA,EAASzC,MACrB,kCACA,4BAAKyC,EAAS9D,IACd,4CACA,4BAAK8D,EAASzC,MACd,4CACA,uCAAQyC,EAASL,MAAM,KAAKC,QAAQ,KAEpC,qF,GA1BKjD,IAAMP,WC8BNoD,EAhCH,CACV,CACEtD,GAAI,EACJqB,KAAM,YACNoC,MAAO,QAET,CACEzD,GAAI,EACJqB,KAAM,mBACNoC,MAAO,QAET,CACEzD,GAAI,EACJqB,KAAM,mBACNoC,MAAO,SAET,CACEzD,GAAI,EACJqB,KAAM,aACNoC,MAAO,SAET,CACEzD,GAAI,EACJqB,KAAM,oBACNoC,MAAO,OAET,CACEzD,GAAI,EACJqB,KAAM,uBACNoC,MAAO,S,GCjBYhD,IAAMP,U,qBCP3B+D,E,kDACF,WAAYlE,GAAQ,IAAD,8BACjB,cAAMA,IACD8B,MAAQ,CACXqC,YAAa,QACbC,QAAQ,EACRC,YAAY,GALG,E,qDAST,IAAD,OACDC,EAAUvE,KAAKC,MAAMuE,SAASD,SAGpC,OACE,yBAAKxD,MAAQ,CAAC0D,SAAU,QAAQC,OAAO,EAAG1D,MAAO,SAC/C,kBAAC,IAAD,CACE2D,oBAAoB,UACpBC,UAAU,UACVC,aAAa,WAEb,kBAAC,IAAOhB,KAAR,CACEnB,MAAM,eACNlC,IAAI,OACJsE,KACE,uBAAGrB,UAAU,kCAEfsB,aACE,uBAAGtB,UAAU,kCAEfuB,SAAuB,UAAbT,EAEVU,QAAS,WACPzC,QAAQC,IAAI,EAAKxC,OACjB,EAAKA,MAAMiF,QAAQC,KAAK,UAG1BC,YAAU,UAMZ,kBAAC,IAAOvB,KAAR,CAEAiB,KACE,uBAAGrB,UAAU,0BAEfsB,aACE,uBAAGtB,UAAU,0BAEbf,MAAM,eACNlC,IAAI,UACJ6E,KAAG,EACHL,SAAuB,cAAbT,EACVU,QAAS,WACP,EAAKhF,MAAMqF,SACX,EAAKrF,MAAMiF,QAAQC,KAAK,aACxB,EAAKlF,MAAMiF,QAAQC,KAAK,aAM5B,kBAAC,IAAOtB,KAAR,CACCiB,KACC,uBAAGrB,UAAU,4BAEfsB,aACE,uBAAGtB,UAAU,4BAGbf,MAAM,qBACNlC,IAAI,WAEJwE,SAAuB,cAAbT,EACVU,QAAS,WACL,EAAKhF,MAAMiF,QAAQC,KAAK,cAG5B1E,QAAS,WACP+B,QAAQC,IAAI,EAAKxC,UAOrB,kBAAC,IAAO4D,KAAR,CACAiB,KACE,uBAAGrB,UAAU,sBAEfsB,aACE,uBAAGtB,UAAU,sBAEbf,MAAM,2BACNlC,IAAI,KACJwE,SAAuB,QAAbT,EACVU,QAAS,WACP,EAAKhF,MAAMiF,QAAQC,KAAK,gB,GAnGpBxE,IAAMP,WAkHXmF,eAJS,SAACxD,GAAD,MAAY,CAChCyD,SAAUzD,EAAMX,KAAKoE,SACrBF,SAASvD,EAAMU,IAAI6C,YAERC,CAAyBE,YAAWtB,I,gBCxHtCzD,G,OCEsBN,YDFd,WACjB,OAAO,SAACsF,GAEJ1D,MADU,oFAETC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACFM,QAAQC,IAAI,MACZD,QAAQC,IAAIP,GACZwD,EAAS,CACL7C,KAAK,UACL8C,SAASzD,EAAId,aAKhBqB,EAAI,SAAC6C,GACd,OAAO,SAACI,GAEJ1D,MADS,4EACC,CACN4D,OAAO,OACPC,QAAQ,CACJ,eAAe,sBAGtB5D,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GAEEM,QAAQC,IAAIP,GACZwD,EACI,CACA7C,KAAK,QACLyC,SAASpD,EAAId,KAAKG,YErBhCgC,E,kDACF,WAAYtD,GAAQ,IAAD,8BACf,cAAMA,IACD8B,MAAQ,CACTX,KAAM,CAAC,IAAK,IAAK,KACjB0E,UAAW,KAJA,E,gEAOE,IAAD,OAEhBC,YAAW,WACP,EAAK3D,SAAS,CACVhB,KAAK,CAAC,iHACN,yNACA,kHAGL,KACHpB,KAAKC,MAAMyF,SAAShF,O,+BAad,IAAD,OACL,OACI,6BACI,4BAAQ+C,UAAU,UACd,yBAAKA,UAAU,aACX,uBAAGA,UAAU,cAAchD,QAAS,WAAQ,EAAKR,MAAMiF,QAAQC,KAAK,kBAChE,0BAAM1B,UAAU,4BAAhB,2CAKZ,kBAAC,IAAD,CACIuC,UAAU,EACVC,UAAU,EACVlF,MAAO,CAAEmF,IAAK,SAEblG,KAAK+B,MAAMX,KAAKd,KAAI,SAAA6F,GAAG,OACpB,uBACI3F,IAAK2F,EACLC,KAAMD,EACNpF,MAAO,CAAEsF,QAAS,eAAgBrF,MAAO,OAAQC,OAAQ,EAAKc,MAAM+D,YAEpE,yBACIQ,IAAKH,EACLI,IAAI,GACJxF,MAAO,CAAEC,MAAO,OAAQwF,cAAe,OACvCC,OAAQ,WACJjE,QAAQC,IAAI0D,GAEZO,OAAOC,cAAc,IAAIC,MAAM,WAC/B,EAAK7E,MAAM+D,UAAY,eAM3C,kBAAC,IAAD,CAAYe,KAAK,OACjB,kBAAC,IAAD,CAAWC,KAAK,OAAOrG,QAAS,kBAAMsG,MAAM,oCAA5C,oGAGA,kBAAC,IAAD,CAAYF,KAAK,OAGjB,yBAAKpD,UAAU,QACX,yBAAK6C,IAAI,qEAAqE7C,UAAU,YAG5F,wBAAIA,UAAU,YAENzD,KAAKC,MAAMuF,SAASlF,KAAI,SAAC0G,EAAMC,GAAP,OACpB,wBACIzG,IAAKyG,EACLxD,UAAU,WAOV,kBAAC,IAAD,CAAMC,GAAI,UAAYuD,GAClB,yBAAKX,IAAKU,EAAKE,MACf,uBAAGzD,UAAU,SACRuD,EAAKtE,OAEV,uBAAGe,UAAU,SAAb,SACMuD,EAAKrD,MACP,0BAAM5C,MAAO,CAAEoG,MAAO,OAAQC,SAAU,SAAxC,IAAoDJ,EAAK9G,GAAzD,mCAQxB,kBAAC,EAAD,W,GAzGGS,IAAMP,WAiHVmF,eAHS,SAACxD,GAAD,MAAY,CAChCyD,SAAUzD,EAAMX,KAAKoE,YAEVD,CAAyBE,YAAWlC,IChEpCgC,eAHS,SAACxD,GACrB,MAAO,CAACyD,SAASzD,EAAMsF,QAEZ9B,EArDE,SAACtF,GASd,OAPAuC,QAAQC,IAAIxC,GASR,6BAEI,wBAAIwD,UAAU,WAAW1C,MAAO,CAACG,gBAAgB,YAErCjB,EAAMuF,SAASlF,KAAI,SAAC0G,EAAKC,GAAN,OACf,wBACIzG,IAAKyG,EACLxD,UAAU,WAOV,kBAAC,IAAD,CAAMC,GAAI,UAAUQ,OAAO8C,EAAK9G,GAAG,MAC/B,yBAAKoG,IAAKU,EAAKE,MACf,2BACKF,EAAKtE,OAEV,oCACMsE,EAAKrD,MACP,0BAAM5C,MAAO,CAACoG,MAAM,OAAOC,SAAS,SAApC,IAA+CJ,EAAK9G,GAApD,8BAIR,4BAAQA,GAAG,eAAeO,QAAS,kBAAIR,EAAMyF,SAAS,CAClD7C,KAAK,aACLyE,MAAML,MAFV,iCASpB,kBAAC,EAAD,UCrCGM,EAXJ,SAACtH,GAGR,OAFAuC,QAAQC,IAAIxC,GACZuC,QAAQC,IAAIxC,EAAMuH,OAEd,4CAEI,kBAAC,EAAD,QC6CGjC,eAHS,SAACxD,GAAD,MAAU,CAClCyD,SAASzD,EAAM0F,WAEAlC,EAhDE,SAACtF,GASd,OAPAuC,QAAQC,IAAIxC,GASR,6BAEI,wBAAIwD,UAAU,WAAW1C,MAAO,CAACG,gBAAgB,YAErCjB,EAAMuF,SAASlF,KAAI,SAAC0G,EAAKC,GAAN,OACf,wBACIzG,IAAKyG,EACLxD,UAAU,WAEV,kBAAC,IAAD,CAAMC,GAAI,UAAUQ,OAAO8C,EAAK9G,GAAG,MAC/B,yBAAKoG,IAAKU,EAAKE,MACf,2BACKF,EAAKtE,OAEV,oCACMsE,EAAKrD,MACP,0BAAM5C,MAAO,CAACoG,MAAM,OAAOC,SAAS,SAApC,IAA+CJ,EAAK9G,GAApD,8BAIR,4BAAQA,GAAG,eAAeO,QAAS,kBAAIR,EAAMyF,SAAS,CAClD7C,KAAK,SACLyE,MAAML,MAFV,iCASpB,kBAAC,EAAD,UCpCNS,E,kDACF,WAAYzH,GAAQ,IAAD,8BACf,cAAMA,IACD8B,MAAQ,CACTqC,YAAa,QACbC,QAAQ,EACRC,YAAY,EACZqD,YAAY,GAND,E,gEAaf3H,KAAKC,MAAMyF,SAAShF,O,+BAqBd,IAAD,OACL8B,QAAQC,IAAIzC,KAAKC,OAEAD,KAAKC,MAAMuE,SAASD,SAArC,IACIrE,EAAKF,KAAKC,MAAM6D,MAAMC,OAAO7D,GACjC,OACI,yBAAKuD,UAAU,OACX,yBAAKA,UAAU,WACX,4BACIA,UAAU,WACVhD,QAAS,kBAAM,EAAKR,MAAMiF,QAAQ0C,WAClC,0BAAMnE,UAAU,QAAhB,IAAyB,IAAzB,MAEJ,4BAAQA,UAAU,WACdhD,QACI,SAACoH,GACGrF,QAAQC,IAAI,MACZD,QAAQC,IAAI,EAAKxC,OACjBuC,QAAQC,IAAIoF,EAAEC,QACd,EAAK7H,MAAMyF,SAAS,CAChB7C,KAAM,OACNwE,KAAM,EAAKpH,MAAMuF,SAAStF,OAItC,uBAAGuD,UAAU,kCAKrB,yBAAK1C,MAAO,CAAEmF,IAAK,QACf,yBAAKI,IAAKtG,KAAKC,MAAMuF,SAAStF,GAAIgH,IAAKnG,MAAO,CAAEC,MAAO,UAEvD,uBAAGyC,UAAU,QAAQ1C,MAAO,CAAEoG,MAAO,QAASC,SAAU,SAAxD,SACMpH,KAAKC,MAAMuF,SAAStF,GAAIyD,MAC1B,0BAAM5C,MAAO,CAAEoG,MAAO,OAAQC,SAAU,OAAQW,MAAO,QAAvD,IAAkE/H,KAAKC,MAAMuF,SAAStF,GAAIA,GAA1F,6BAEJ,uBAAGuD,UAAU,QAAQ1C,MAAO,CAAEqG,SAAU,SACnCpH,KAAKC,MAAMuF,SAAStF,GAAIwC,QAIjC,yBAAKe,UAAU,aACX,yBAAKA,UAAU,OAEX,gCACI,uBAAGA,UAAU,wBACb,+CAEJ,gCACI,uBAAGA,UAAU,iCACb,+CAGJ,4BACAhD,QACI,WACI,EAAK2B,UAAS,SAAA4F,GAAS,MAAK,CACxBL,YAAaK,EAAUL,eAIxB,EAAK5F,MAAM4F,YAGV,EAAK1H,MAAMyF,SAAS,CAChB7C,KAAM,UACN4E,QAAS,EAAKxH,MAAMuF,SAAStF,OAsCzCF,KAAK+B,MAAM4F,WAAW,uBAAGlE,UAAU,0BACnC,uBAAGA,UAAU,gCACb,8BAAOzD,KAAK+B,MAAM4F,WAAa,eAAO,uBAI1C,4BACIlH,QACI,SAACoH,GACGrF,QAAQC,IAAI,MACZD,QAAQC,IAAI,EAAKxC,OACjB,EAAKA,MAAMyF,SAAS,CAChB7C,KAAM,OACNwE,KAAM,EAAKpH,MAAMuF,SAAS,EAAKzD,MAAM7B,QAPrD,kCAcA,mE,GAhKJS,IAAMP,WAkLXmF,eANS,SAACxD,GAAD,MAAY,CAChCyD,SAAUzD,EAAMX,KAAKoE,SACrBF,SAAUvD,EAAMU,IAAI6C,SACpBmC,QAAQ1F,EAAM0F,WAGHlC,CAAyBE,YAAWiC,IC3JpCO,E,4MA7BblG,MAAQ,CACNiB,MAAO,I,EAKTF,SAAU,SAACE,GACT,EAAKZ,SAAS,CAAEY,W,EAElBkF,MAAQ,WACN,EAAK9F,SAAS,CAAEY,MAAO,M,EAEzBmF,YAAc,WACZ,EAAKC,gBAAgBC,S,uDAEb,IAAD,OAGP,OAFA7F,QAAQC,IAAIzC,MAEJ,6BACN,kBAAC,IAAD,CACEgD,MAAOhD,KAAK+B,MAAMiB,MAClBK,YAAY,SACZiF,SAAU,kBAAM,EAAKrI,MAAMiF,QAAQC,KAAK,UACxCoD,kBAAgB,EAChBzF,SAAU9C,KAAK8C,gB,GAzBFnC,IAAMP,WC4CZmF,eAHS,SAACxD,GAAD,MAAU,CAC9BuD,SAASvD,EAAMuD,YAEJC,EA3CD,SAACtF,GACXuC,QAAQC,IAAIxC,GADS,MAEGuI,oBAAS,GAFZ,6BAOrB,OACI,6BAEQvI,EAAMqF,SACN,6BACKrF,EAAMqF,UAGX,6BACI,6BAAK,mGACL,yBAAK7B,UAAU,YACf,yBAAKA,UAAU,WACX,2BAAOlC,KAAK,cAAcsB,KAAK,OAAQ3C,GAAG,cAAcmD,YAAY,wDAGxE,yBAAKI,UAAU,WAEX,2BAAOlC,KAAK,oBAAoBsB,KAAK,WAAY3C,GAAG,oBAAoBmD,YAAY,gDAExF,4BAAQnD,GAAG,QACXO,QAAS,WACLR,EAAMiF,QAAQC,KAAK,aACnBlF,EAAMyF,SAASjD,OAHnB,qB,QCrBLgG,EATK,WAAiC,IAAhC1G,EAA+B,uDAAzB,CAACyD,SAAS,CAAC,KAAKkD,EAAS,uCAEhD,OADAlG,QAAQC,IAAIiG,GACLA,EAAO7F,MACV,IAAK,UACD,MAAO,CAAC2C,SAASkD,EAAO/C,UAC5B,QACI,OAAO5D,ICNf0F,EAAU,GAkBCkB,EAjBQ,WAAyB,IAAxB5G,EAAuB,uDAAjB0F,EAAQiB,EAAS,uCAC3C,GAAkB,WAAfA,EAAO7F,KAIN,OAHAL,QAAQC,IAAIiG,GACZlG,QAAQC,IAAIV,GACZS,QAAQC,IAAIgF,GACN,GAAN,mBAAW1F,GAAX,CAAiB2G,EAAOjB,UAE5B,GAAkB,UAAfiB,EAAO7F,KAAiB,CACvB,IAAI+F,EAAG,YAAO7G,GAId,OAHAS,QAAQC,IAAImG,GACZpG,QAAQC,IAAIiG,GACZE,EAAIC,OAAOH,EAAOpB,MAAM,GACjBsB,EAGX,OADApG,QAAQC,IAAIiG,GACL3G,GCJIU,EAXL,WAA+C,IAA9CV,EAA6C,uDAAvC,CAACuD,SAAS,GAAGqC,YAAW,GAAMe,EAAS,uCAErD,OADAlG,QAAQC,IAAIiG,GACK,SAAdA,EAAO7F,KACC,CAACyC,SAASoD,EAAOpD,UAEV,QAAfoD,EAAO7F,KACF,CAAC8E,WAAWe,EAAOf,YAEpB5F,GCTNsF,EAAO,GAgBIyB,EAfK,WAAsB,IAArB/G,EAAoB,uDAAdsF,EAAKqB,EAAS,uCACrC,GAAkB,QAAfA,EAAO7F,KAGN,OAFAL,QAAQC,IAAIiG,GACZlG,QAAQC,IAAIV,GACN,GAAN,mBAAWA,GAAX,CAAiB2G,EAAOrB,OAE5B,GAAkB,cAAfqB,EAAO7F,KAAqB,CAC3B,IAAI+F,EAAG,YAAO7G,GAGd,OAFAS,QAAQC,IAAImG,GACZA,EAAIC,OAAOH,EAAOpB,MAAM,GACjBsB,EAGX,OADApG,QAAQC,IAAIiG,GACL3G,GCJPgH,EAAcC,YAAgB,CAAC5H,OAAKqG,UAAQhF,MAAI4E,SAiBpD,IAee4B,EAPDC,YACZH,EACAI,YACIC,aA3BN,YAA+B,IAAbC,EAAY,EAAZA,SACd,OAAO,SAACC,GAAD,OAAU,SAACZ,GAChBlG,QAAQC,IAAI,gBAAiBiG,GAG7B,IAAIa,EAAcD,EAAKZ,GAMvB,OAJAlG,QAAQC,IAAI,uBAAwB4G,KAI7BE,OAKC,SAAC,GAAD,IAAG7D,EAAH,EAAGA,SAAU2D,EAAb,EAAaA,SAAb,OAA4B,SAACC,GAAD,OAAU,SAACZ,GAEnD,OADAlG,QAAQC,IAAI,SACU,oBAAXiG,EACAA,EAAOhD,EAAU2D,GAErBC,EAAKZ,QAORhC,OAAO8C,8BAAgC9C,OAAO8C,iCCOrCC,EA9BJ,WAET,OACE,kBAAC,IAAD,CAAUR,MAAOA,GAGjB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,QAAQC,OAAQ,kBAAI,kBAAC,EAAD,SACtC,kBAAC,IAAD,CAAOD,KAAM,aAAaC,OAAQ,SAAC3J,GAAD,OAAS,kBAAC,EAAUA,MACtD,kBAAC,IAAD,CAAO0J,KAAK,eAAeE,UAAW5B,IACtC,kBAAC,IAAD,CAAO0B,KAAK,SAASE,UAAWC,IAChC,kBAAC,IAAD,CAAOH,KAAK,YAAYE,UAAWE,IACnC,kBAAC,IAAD,CAAOJ,KAAK,MAAMC,OAAQ,SAAC3J,GAAD,OAAS,kBAAC,EAAOA,MAC3C,kBAAC,IAAD,CAAO0J,KAAK,YAAYE,UAAWG,IACnC,kBAAC,IAAD,CAAOH,UAAWtG,QC/BtB0G,GCGctJ,IAAMP,UDHd,CAAC,EAAE,EAAE,IA4BA8J,GA3BA,WAAsB,IAArBnI,EAAoB,uDAAdkI,EAAKvB,EAAS,uCAChC,GAAiB,YAAdA,EAAO7F,KAON,OANAL,QAAQC,IAAI,gBACZD,QAAQC,IAAIiG,GACZlG,QAAQC,IAAIV,GACZS,QAAQC,IAAIwH,GACZzH,QAAQC,IAAR,sBAAgBV,GAAhB,CAAsB2G,EAAO1F,SAEvB,GAAN,OAAWiH,EAAX,CAAgBvB,EAAO1F,QAE3B,GAAiB,eAAd0F,EAAO7F,KAAqB,CAC3BL,QAAQC,IAAI,gBACZD,QAAQC,IAAIiG,GACZ,IAAIE,EAAI,YAAI7G,GAEZ,OADA6G,EAAIC,OAAOH,EAAOpB,MAAM,GACjBsB,EAKX,MAAiB,SAAdF,EAAO7F,MACNL,QAAQC,IAAIiG,GACN,GAAN,OAAWuB,EAAX,CAAgBvB,EAAO1F,SAGpBjB,GEGIoI,GA7BI,WAA6D,IAA5DpI,EAA2D,uDAArD,CAACuD,SAAS,GAAGE,SAAS,CAAC,IAAImC,YAAW,GAAMe,EAAS,uCAE3E,OADAlG,QAAQC,IAAIiG,GACK,YAAdA,EAAO7F,KACC,CAAC2C,SAASkD,EAAOlD,UAGV,SAAfkD,EAAO7F,KACC,CAAC8E,WAAWe,EAAOf,YAGX,UAAhBe,EAAO7F,KACC,CAACyC,SAASoD,EAAOpD,UAGrBvD,GCNPgH,GAAcC,YAAgB,CAACiB,QAAKG,UAyB1BlB,YACZH,GACAI,YACIC,aA3BN,YAA+B,IAAbC,EAAY,EAAZA,SACd,OAAO,SAACC,GAAD,OAAU,SAACZ,GAChBlG,QAAQC,IAAI,gBAAiBiG,GAG7B,IAAIa,EAAcD,EAAKZ,GAMvB,OAJAlG,QAAQC,IAAI,uBAAwB4G,KAI7BE,OAKC,SAAC,GAAD,IAAG7D,EAAH,EAAGA,SAAU2D,EAAb,EAAaA,SAAb,OAA4B,SAACC,GAAD,OAAU,SAACZ,GAEnD,OADAlG,QAAQC,IAAI,SACU,oBAAXiG,EACAA,EAAOhD,EAAU2D,GAErBC,EAAKZ,QAORhC,OAAO8C,8BAAgC9C,OAAO8C,iCCArCjE,aAJS,SAACxD,GAAD,MAAU,CAC9BX,KAAKW,EAAMkI,QAGA1E,EAnCD,SAACtF,GAMX,OALAuC,QAAQC,IAAIxC,GAMR,6BACKA,EAAMmB,KAAKd,KAAI,SAACC,EAAK0G,GAAN,OAAU,wBAAIzG,IAAKyG,GAC9B1G,EACD,4BACIE,QACI,kBAAIR,EAAMyF,SAAS,CACf7C,KAAK,cACLyE,MAAML,MAJlB,oBAWJ,4BAAQxG,QAAS,kBAAIR,EAAMyF,SAAS,CAC5B7C,KAAK,WAAWG,MAAM,QAD9B,oBCEGuC,eAtBD,SAACtF,GACX,OACI,6BAEI,2BAAO4C,KAAK,OAAOwH,UAAW,SAACxC,GAET,IAAXA,EAAEyC,SACDrK,EAAMyF,SAAS,CACX7C,KAAK,WACLG,MAAM6E,EAAEC,OAAO9E,eFa3C,IGzBMP,GAAI,SAAC6C,GACP,OAAO,SAACI,GAEJ1D,MADS,4EACC,CACN4D,OAAO,OACPC,QAAQ,CACJ,eAAe,sBAGtB5D,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GAEEM,QAAQC,IAAIP,GAUZwD,EAEI,CACA7C,KAAK,QACLyC,SAASpD,EAAId,KAAKG,YCgIvBgE,aALS,SAACxD,GAAD,MAAY,CAChCuD,SAAUvD,EAAMqI,KAAK9E,SACrBE,SAAUzD,EAAMqI,KAAK5E,SACrBmC,WAAW5F,EAAMqI,KAAKzC,cAEXpC,EA5HF,SAACtF,GAAU,MAMMuI,oBAAS,GANf,mBAML+B,GANK,WAoDpB,OACI,6BAQQtK,EAAMqF,SACF,6BACKrF,EAAMqF,SACP,4BAAQ7E,QAAS,WACb,IAAIwG,GAAI,EAEJA,IAEAhH,EAAMyF,SACF,CACI7C,KAAM,QACNyC,SAAU,KAIlB2B,GAAI,KAZZ,iBAsBJ,4BACIxG,QAhFN,WACV8J,GAAQ,GACRtK,EAAMyF,SAASjD,QA6EH,gBAjCZ,IAuCI,6BAEI,4BAAQhC,QAxEH,WACbR,EAAMyF,UDZH,SAACA,GAEJ1D,MADU,oFAETC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACFM,QAAQC,IAAIP,GACZwD,EAAS,CACL7C,KAAK,UACL2C,SAAStD,EAAId,aCKrBoB,QAAQC,IAAIxC,KAsEJ,WAKJ,6BACKA,EAAM0H,WAAa,uBAAGlE,UAAU,0BAC7B,uBAAGA,UAAU,0BAEjB,4BAAQhD,QA5FT,WACPR,EAAMyF,SAASjD,MACfxC,EAAMyF,SAEF,CACA7C,KAAK,OACLyC,SAAS,GACTqC,YAAY1H,EAAM0H,eAsFT1H,EAAM0H,WAAa,eAAO,2B,OCjG/C6C,IAASZ,OACP,kBAACa,EAAD,MAYAC,SAASC,eAAe,U","file":"static/js/main.4bf6665d.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nexport default class List extends Component {\r\n  render() {\r\n    const done = this.props.done\r\n      return (\r\n        <div id=\"div2\">\r\n          <ul id=\"doing\"> \r\n            {this.props.renderTodos(done)}\r\n          </ul>\r\n        </div>\r\n        \r\n      )\r\n  }\r\n}","import React from 'react';\r\n//函数 数组任何数据都在props中\r\nconst Buttons = (props)=>{\r\n    const btns = [1,2,3,4,5];\r\n    {\r\n        return <div>{\r\n            btns.map(\r\n                (item)=>(\r\n                  <button \r\n                    key={item}  onClick = {()=>props.getData(item)}\r\n                  >\r\n                    {item}\r\n                  </button>\r\n              ))\r\n            }\r\n\r\n        </div>\r\n       \r\n      }\r\n}\r\n\r\n\r\nexport default Buttons;","import React,{Component} from 'react'; //这一个是必须写的 因为这里面用到了\r\nimport List from '../components/List'  //这里也要去引用List\r\nimport Buttons from '../components/btns';\r\nclass Home extends React.Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        data:[]\r\n      }\r\n      // this.handleClick = this.handleClick.bind(this)\r\n    }\r\n  componentDidMount(){\r\n      fetch('https://cnodejs.org/api/v1/topics')\r\n      .then(res=>res.json())\r\n      .then( ({data}) => {\r\n        console.log(data);\r\n        this.setState({data})\r\n      })\r\n    }\r\n  getData=(page)=>{\r\n    console.log(page);\r\n    fetch('https://cnodejs.org/api/v1/topics?page='+page).\r\n    then(res=>res.json()).\r\n    then(({data})=>{\r\n    console.log(data);\r\n    this.setState({data}); //这里拿到json数据\r\n  })\r\n  }\r\n    render(){\r\n      const { data } = this.state;\r\n      return <div>\r\n          \r\n        <Buttons getData = {this.getData}/>\r\n        <List data={data}/>\r\n      </div>\r\n    }\r\n  }\r\n  //命名导出 默认导出 主要看react都是默认导出不用取名    \r\n  //默认导出 只能导出一个\r\n  export default Home; //这里是默认导出  \r\n\r\n//   //命名导出\r\n//   let a =10;\r\n//   export {a}\r\n//   //在另一个文件引用的时候就是  \r\n//   import {a} from ''\r\n\r\n","\r\nimport React, { Component } from 'react'\r\n//引入样式样式\r\nimport './control.css';\r\nexport default class Control extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue :'',\r\n            todos:[{title:'1',done:false},\r\n            {title:'2',done:true},\r\n            {title:'3',done:false},\r\n            {title:'4',done:false}\r\n        \r\n        ],\r\n        // finished:[\r\n        //     {title:'',done:false}\r\n        // ]\r\n        }\r\n    }\r\n    //获取实时内容\r\n    handleChange = (e)=>{\r\n        console.log(\"执行了handlechange\");\r\n        console.log(e.target.value);\r\n        this.setState({inpValue:e.target.value});\r\n\r\n        // localStorage.setItem('KEY',e.target.value);\r\n\r\n    }\r\n    // addChange = (todos)=>{\r\n    //     this.setState({todos.title:todos.target.value})\r\n    // }\r\n    \r\n    //这个的作用是 让他刷新之后还存在 在这里去存\r\n    componentDidUpdate(){\r\n        console.log(\"执行了update\");\r\n        localStorage.setItem('todos',JSON.stringify(this.state.todos))\r\n        \r\n\r\n    }\r\n\r\n    //在这里面去取\r\n    componentDidMount(){\r\n        console.log(\"执行了didmount\");\r\n\r\n        this.input.focus();\r\n        // this.input.value; 这样也可以\r\n        let todos = localStorage.getItem('todos');//todos在最初进来的时候没有 \r\n        if(todos){\r\n            this.setState({\r\n                todos:JSON.parse(todos)\r\n            })\r\n            //有就把值赋给 todos \r\n        }\r\n    }\r\n    //添加内容到已经完成里面\r\n    addTodo=()=>{\r\n        console.log(\"执行了addtodo\");\r\n\r\n        if(this.state.inpValue){\r\n            this.setState({\r\n                todos:[\r\n                    {\r\n                        title:this.state.inpValue,\r\n                        done:false},\r\n                        ...this.state.todos\r\n                ]\r\n            })\r\n            this.setState({inpValue:''})\r\n        }\r\n        \r\n        // else{\r\n        //     return;\r\n        // }\r\n        \r\n    }\r\n    // addTodo=()=>{\r\n    //     this.state.todos.push({title:this.state.inpValue}); //在数组里面再添加一项\r\n    //     this.setState({todos:this.state.todos});\r\n    // }\r\n    //删除内容\r\n    removeTodo=(index)=>{\r\n        console.log(\"执行了removetodo\");\r\n\r\n        // let newTodos = JSON.parse(JSON.stringify(this.state.todos));//深拷贝 一个全新的\r\n        // newTodos.splice(index,1);\r\n        // this.setState({\r\n        //     todos:newTodos\r\n        // })\r\n        //  另一种方法\r\n        this.setState({\r\n            todos:this.state.todos.filter((item,idx)=>\r\n                index!=idx\r\n                //不等于它就是真的 就会返回 这里就是直接一个函数。 这里是一个返回值\r\n            )\r\n        },()=>{\r\n            localStorage.setItem('todos',JSON.stringify(this.state.todos))\r\n\r\n        })\r\n\r\n        // console.log(e);\r\n        // console.log(this.state.todos[0].title);\r\n    }\r\n    // setStatus=(status)=>{\r\n    //     console.log(status);\r\n    //     if(status){\r\n    //         this.setState(\r\n    //             {\r\n    //                 finished:[\r\n    //                     {title:this.state.inpValue,done:false},...this.state.todos\r\n    //                 ]\r\n    //             }\r\n    //         )\r\n    //     }\r\n    // }\r\n    toggle=(index)=>{\r\n        console.log(\"执行了toggle\");\r\n\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos));\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n           todos:newTodos\r\n        });\r\n      \r\n    }\r\n    renderTodos=(done)=>{\r\n        console.log(\"执行了rendertodo\");\r\n    \r\n      return this.state.todos.map((todo,index) =>{\r\n            if(done == todo.done){\r\n                return <li>\r\n                    {/* <input type=\"checkbox\" onClick={()=>this.setStatus(todo.done)} /> */}\r\n                    <input  onClick={()=>this.toggle(index)}  checked={done}  type=\"checkbox\"/ >\r\n                    <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                    {/* 这里是实现添加那个<h1>ddd</h1>的  就是解析标签 */}\r\n                    {/* <span >{todo.title}</span> */}\r\n\r\n                    <button onClick={()=>this.removeTodo(index)}>删除 </button>\r\n                </li>\r\n            }\r\n            \r\n        })\r\n    }\r\n    render() { \r\n        //  localStorage.setItem('todos',JSON.stringify(this.state.todos))\r\n        //写在这里都会执行 就不用在toggle中写了\r\n        const {todos,inpValue} = this.state;\r\n        let arr1 = todos.filter(item=>item.done);\r\n        let arr2 = todos.filter(item=>!item.done);\r\n        // let arr1 = todos.filter((item,index)=>{\r\n        //     return !item.done;\r\n        //     console.log(index,item);\r\n        // })\r\n        //每循环一次 回调函数执行一次\r\n        return (\r\n            <div className='box'>\r\n                <label htmlFor=\"inp\">todolist\r\n                \r\n                </label>\r\n                <input id =\"inp\"value={inpValue} type=\"text\" onChange={this.handleChange} ref={inp =>this.input = inp} action=\"#content\" placeholder=\"todo\" >\r\n                    {/* 加入了value就是react的了 value后面的值不能动了 就是一改变就会调用这个函数  value后面的值是默认的 给他赋值是e.target.value 走了setState就会更新*/}\r\n                </input>\r\n                <button onClick={this.addTodo} >\r\n                    添加\r\n                </button>\r\n                <h2>\r\n                    正在进行{arr2.length}\r\n                </h2>\r\n               \r\n                {/* {\r\n                    [{title:1,done:false},{}].map()\r\n                } */}\r\n                <ul id=\"doing\">\r\n                    \r\n                    {this.renderTodos(false)}\r\n                   \r\n                </ul>\r\n                <h2>\r\n                    已经完成{arr1.length}\r\n                </h2>\r\n                <ul style={{color:'blue'}}>\r\n                    {/* //里面是个对象变量 第一个是变量括起来 里面是对象 marginRight */}\r\n                    {/* {{color:3>2'red':'green'}} */}\r\n                    \r\n                    {this.renderTodos(true)}\r\n                </ul>\r\n                {\r\n                    3>2 ? <button>登录</button>:<span>不成立</span>\r\n                }\r\n                {/* 可以直接加条件判断 不能查if语句 因为放的要是一个值 */}\r\n                <button>\r\n                    {2>3?'真':'假'}\r\n                    {/* 声明一个状态 每次取反 ture一直切换  */}\r\n\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nconst Context = React.createContext();//返回一个对象 来接受它、\r\nexport default Context;\r\n\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from './context'\r\n\r\nfunction Demo02() {\r\n    return (\r\n        <div style={{width:100,height:'100px',backgroundColor:'red'}}>\r\n                    <h2>demo02</h2>\r\n                    <ul>\r\n                        <Context.Consumer>\r\n                        {\r\n                            data=>data.data.map((item)=><li key={item}>{item}</li>)\r\n                            // data =>data.map(item=><li key ={item}>{item}</li>)\r\n                        }\r\n                        </Context.Consumer>\r\n                    </ul>\r\n                    \r\n\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default Demo02\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from './context'\r\nimport Demo02 from './Demo02'\r\n\r\n//小练习 对于行内加样式\r\n\r\n        const Demo01 = (props)=>{\r\n            return (\r\n                <div style={{width:100,height:'100px',backgroundColor:'red'}}>\r\n                    <h2>demo01</h2>\r\n                    <ul>\r\n                        <Context.Consumer>\r\n                        {\r\n                            data=>data.data.map((item)=><li key={item}>{item}</li>)\r\n                        }\r\n                        </Context.Consumer>\r\n                    </ul>\r\n                    <Demo02/>\r\n                        {/* 这里引用就直接写就行 */}\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    \r\n\r\nDemo01.protoTypes ={\r\n    name:PropTypes.string.isRequired\r\n    //必须传的  \r\n}\r\nDemo01.defaultProps={\r\n    name:'tomg'\r\n    // 就是你没有传参数的时候 给你一个默认的。\r\n}\r\nexport default Demo01\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n//高阶函数 接受一个组件返回一个新的组件\r\nconst withFetch = (Com,url)=>{\r\n    return class Topic extends Component{\r\n        constructor(){\r\n            super();\r\n            this.state = {\r\n                data:[]\r\n            }\r\n        }\r\n        componentDidMount(){\r\n            fetch(url)\r\n            .then(res=>res.json())\r\n            .then(res=>this.setState({data:res.data}))\r\n        }\r\n        render(){\r\n            return <Com data={this.state.data}/>\r\n        }\r\n    }\r\n}\r\nconst De =(props)=>{\r\n    return <div>\r\n        <h1>标题</h1>\r\n        {/* <div>{props.data.content}</div> */}\r\n        <div dangerouslySetInnerHTML={\r\n            {__html:props.data.content}\r\n            // 这里是获取到了Com 组件中data属性的内容\r\n        } ></div>\r\n    </div>\r\n}\r\nexport const Detail = withFetch(De,'https://cnodejs.org/api/v1/topic/5433d5e4e737cbe96dcef312');\r\n\r\n// 详情页\r\n// export class Detail extends Component{\r\n//     constructor(){\r\n//         super();\r\n//         this.state={\r\n//             data:''\r\n//         }\r\n//     }\r\n//     componentDidMount(){\r\n//         fetch('https://cnodejs.org/topic/5e16978581adfe260207a8c1')\r\n//         .then(res=>res.json())\r\n//         .then(res=>this.setState({data:res.data.content}))\r\n//     }\r\n//     render(){\r\n//         return<div>\r\n//             <h1>标题</h1>\r\n//             <div>{this.state.data}</div>\r\n//         </div>\r\n//     }\r\n// }\r\n\r\n\r\n// export class Hoc extends Component {\r\n//     constructor(){\r\n//         super();\r\n//         this.state = {\r\n//             data:[]\r\n//         }\r\n//     }\r\n//     componentDidMount(){\r\n//         fetch('https://cnodejs.org/api/v1/topics')\r\n//         .then(res=>res.json())\r\n//         .then(res=>this.setState({data:res.data}))\r\n//     }\r\n//     render() {\r\n//         console.log(this.state.data);\r\n//         return (\r\n//             <div>\r\n//                 hoc\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n// 这是对上面的简化\r\nconst Ho = (props)=>{\r\n    console.log(props.data);\r\n    return <ul>\r\n        {\r\n            props.data.map((item)=><li>{item.title}</li>)\r\n        }\r\n    </ul>\r\n}\r\nconst Hoc = withFetch(Ho,'https://cnodejs.org/api/v1/topics')\r\nexport default Hoc;\r\n","import React,{Component} from 'react';\r\n// import TodoList from './TodoList'\r\n// import './TodoList.css';\r\nexport default class Input extends Component {\r\n   \r\n\r\n    render() {\r\n        return (\r\n            <div id=\"div1\">  \r\n                <label htmlFor=\"inp\">\r\n                    todolist \r\n                </label>\r\n\r\n                <input id=\"inp\" \r\n                type=\"text\"\r\n                onChange={this.props.handleChange} \r\n                value={this.props.inpValue}\r\n                ref={inp =>this.input = inp}\r\n                placeholder=\"添加ToDo\" >\r\n                </input>\r\n\r\n                <button  \r\n                onClick={this.props.addTodo} >\r\n                    添加\r\n                </button>\r\n            </div>\r\n        \r\n        \r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n//引入样式样式\r\n// import './TodoList.css';\r\nimport List from './List';\r\nimport Input from'./Input';\r\nexport default class TodoList extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue :'',\r\n            todos:[ ],\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({inpValue:e.target.value});\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem('todos',JSON.stringify(this.state.todos))\r\n    }\r\n\r\n    componentDidMount(){\r\n        let todos = localStorage.getItem('todos');//todos在最初进来的时候没有 \r\n        if(todos){\r\n            this.setState({\r\n                todos:JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    addTodo=()=>{\r\n        if(this.state.inpValue==''){\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos: [\r\n                {\r\n                    title: this.state.inpValue,\r\n                    done: false\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n        this.setState({inpValue:''})\r\n    }\r\n    toggle=(index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos: newTodos\r\n        })\r\n    }\r\n    removeTodo=(index)=>{\r\n        this.setState({\r\n          todos:this.state.todos.filter((item,idx)=>\r\n              index!=idx\r\n          )\r\n        })\r\n\r\n      // console.log(e);\r\n      // console.log(this.state.todos[0].title);\r\n    }\r\n    renderTodos=(done)=>{\r\n        return this.state.todos.map((todo,index) =>{\r\n              if(done == todo.done){\r\n                  return <li>\r\n                      <input  onClick={()=>this.toggle(index)}  checked={done}  type=\"checkbox\"/ >\r\n                      <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                      <button onClick={()=>this.removeTodo(index)}>删除 </button>\r\n                  </li>\r\n              }\r\n          })\r\n      }\r\n    render(){\r\n        const {todos,inpValue} = this.state;\r\n        let arr1 = todos.filter(item=>!item.done);\r\n        let arr2 = todos.filter(item=>item.done);\r\n        return (\r\n            <div>\r\n                <Input\r\n                    addTodo={this.addTodo} \r\n                    handleChange = {this.handleChange}\r\n                    inpValue = {inpValue}\r\n                /> \r\n                \r\n                <h2>正在进行{arr1.length}</h2>\r\n                <List renderTodos={this.renderTodos} done={false}/>\r\n                <h2>已经完成{arr2.length}</h2>\r\n                <List renderTodos={this.renderTodos} done={true}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\r\nimport React from 'react';\r\nimport './router.css';\r\nimport { Link, Route } from 'react-router-dom';\r\n \r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        //商品数据通过props传递过来\r\n        super(props)\r\n    }\r\n    render() {\r\n        console.log(this.props);\r\n        //此处得到的数据已经是数组\r\n        let items = this.props.items;\r\n        return (\r\n            <div>\r\n                {/* <div>主页</div> */}\r\n                {/* 场景二：商品展示主页 */}\r\n                <h2>商品列表</h2>\r\n                <ul className=\"item-list\">\r\n                    <li className=\"head\">\r\n                        <span>名称</span>\r\n                        <span>价格</span>\r\n                    </li>\r\n                    {\r\n                        // 点击某行进入详情页\r\n                        items.map(item => (\r\n                            <li key={item.id}>\r\n                                <span>\r\n                                 {/* 注意Item的Route组件因为是和主页及关于我们页面一样切换不同页面，所以应该在RouterSwitch组件中使用Route组件 */}\r\n                                    <Link to={'/Item/'+item.id}>{item.name}</Link>\r\n                                </span>\r\n                                <span>￥ {(item.price / 100).toFixed(2)} </span>\r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Home;","\r\nimport React from 'react';\r\n \r\nclass Item extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        //此处可得到所有传过来的history,match,location,items所有数据\r\n        // let {history,match:{params:{id}},location,items} = this.props;\r\n        console.log(this.props);\r\n        let items = this.props.items;\r\n        // let id = this.props.match.params.id;\r\n        let {match:{params:{id}}} = this.props;\r\n        console.log(id);\r\n\r\n        //通过传递过来的id匹配到数据中的数据,注意从match.params中获得的id是string，必须转为数字类型\r\n        let itemInfo = items.find(item=>item.id === Number(id));\r\n        console.log(itemInfo)  \r\n        return itemInfo ? (\r\n            <div>\r\n              <h2>商品详情 - {itemInfo.name}</h2>\r\n              <dt>ID</dt>\r\n              <dd>{itemInfo.id}</dd>\r\n              <dt>名称</dt>\r\n              <dd>{itemInfo.name}</dd>\r\n              <dt>价格</dt>\r\n              <dd>￥ {(itemInfo.price/100).toFixed(2)}</dd>\r\n            </div>\r\n          ) : <div>获取商品详情出错</div>;\r\n    }\r\n}\r\n \r\nexport default Item;","\r\n   const  items=[\r\n      {\r\n        id: 1,\r\n        name: 'iPhone XR',\r\n        price: 542500\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Apple iPad Air 3',\r\n        price: 377700\r\n      },\r\n      {\r\n        id: 3,\r\n        name: 'Macbook Pro 15.4',\r\n        price: 1949900\r\n      },\r\n      {\r\n        id: 4,\r\n        name: 'Apple iMac',\r\n        price: 1629900\r\n      },\r\n      {\r\n        id: 5,\r\n        name: 'Apple Magic Mouse',\r\n        price: 72900\r\n      },\r\n      {\r\n        id: 6,\r\n        name: 'Apple Watch Series 4',\r\n        price: 599900\r\n      }\r\n    ]\r\n    export default items;","\r\nimport React from 'react';\r\nimport {Link, Route ,BrowserRouter as Router,Switch, Redirect} from 'react-router-dom';\r\n \r\nimport Home from './Home';\r\n// import About from './About';\r\nimport Item from './item';\r\n \r\n// 注意：所有用到的数据都需要进行导出\r\nimport items from './items.js';\r\n/**\r\n * 场景一：使用路由无刷新切换页面\r\n */\r\nclass RouterSwitch extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <Link>路由组件： 相当于a标签功能；to属性相当于a标签的href属性；拦截了a标签中点击后刷新跳转*/}\r\n                <nav>\r\n                    <Router>\r\n                    <Link to=\"/\">首页</Link>\r\n                    <span> | </span>\r\n                    <Link to=\"/about\">关于我们</Link>\r\n                    <Route path=\"/\" exact render={el => <Home items={items} />} />\r\n                {/* <Route path=\"/about\" component={About} /> */}\r\n \r\n                {/* 注意Item的Route组件因为是和主页及关于我们页面一样，所以应该在此组件中切换 */}\r\n                {/* /item/:id(\\d+)表示id后只能是数字，params是path路径下的可变部分，如/item/1 */}\r\n                {/* 也需要将数据items传递到Item页面，这里是路由组件，所以props属性会自动添加几个与路由有关的几个属性history:对象，location:对象，match:对象\r\n                通过...props将props属性中所有对象传递到Item组件，且传入items*/}\r\n                <Route path='/Item/:id(\\d+)' render={(props)=><Item {...props} items={items} />} />\r\n                    </Router>\r\n                   \r\n                </nav>\r\n                <br />\r\n                {/* Route 组件：用于设置路由信息，path属性匹配路径；component设置要显示的组件；exact表示精确匹配，非 exact 模式下 '/' 匹配所有以 '/' 开头的路由（注意/前不要加点./） */}\r\n                {/* <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/about\" component={About} /> */}\r\n \r\n                {/* 场景二：商品展示主页。*/}\r\n                {/* 如果Route组件需要传递数据，就不能使用compoment属性，而是需要使用render属性 \r\n                render 属性值是一个函数,当路由匹配的时候指定该函数进行渲染\r\n                */}\r\n\r\n              \r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default RouterSwitch;","import { Button ,TabBar} from 'antd-mobile';\r\nimport {withRouter} from 'react-router-dom'\r\nimport React from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass Mytab extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        selectedTab: '/home',\r\n        hidden: false,\r\n        fullScreen: false,\r\n      };\r\n    }\r\n   \r\n    render() {\r\n      const pathname =this.props.location.pathname;\r\n      // let id = this.props.match.params.id;\r\n\r\n      return (\r\n        <div style={ {position: 'fixed',bottom:0, width: '100%' }}>\r\n          <TabBar\r\n            unselectedTintColor=\"#111111\"\r\n            tintColor=\"#33A3F4\"\r\n            barTintColor=\"#f7e5e8\"\r\n          >\r\n            <TabBar.Item\r\n              title=\"首页\"\r\n              key=\"Home\"\r\n              icon={\r\n                <i className='iconfont iconHomehomepagemenu'></i>                           \r\n              }\r\n              selectedIcon={\r\n                <i className='iconfont iconHomehomepagemenu'></i>                           \r\n              }\r\n              selected={pathname === '/home' }\r\n              // badge={3}\r\n              onPress={() => {\r\n                console.log(this.props)\r\n                this.props.history.push('/home')\r\n               \r\n              }}\r\n              data-seed=\"logId\"\r\n            >\r\n              \r\n            \r\n           \r\n            </TabBar.Item>\r\n            <TabBar.Item\r\n            \r\n            icon={\r\n              <i className='iconfont iconshoucang'></i>                           \r\n              }\r\n            selectedIcon={\r\n              <i className='iconfont iconshoucang'></i>                           \r\n            }\r\n              title=\"收藏\"\r\n              key=\"dingdan\"\r\n              dot\r\n              selected={pathname === '/shoucang'}\r\n              onPress={() => {\r\n                this.props.username?\r\n                this.props.history.push('/shoucang'):\r\n                this.props.history.push('/login')\r\n               \r\n              }}\r\n            >\r\n            \r\n            </TabBar.Item>\r\n            <TabBar.Item\r\n             icon={\r\n              <i className='iconfont iconcart-Empty'></i>                           \r\n            }\r\n            selectedIcon={\r\n              <i className='iconfont iconcart-Empty'></i>                           \r\n            }\r\n           \r\n              title=\"购物车\"\r\n              key=\"gouwuche\"\r\n              \r\n              selected={pathname === '/gouwuche'}\r\n              onPress={() => {\r\n                  this.props.history.push('/gouwuche')\r\n                \r\n              }}\r\n              onClick={()=>{\r\n                console.log(this.props)\r\n              }}\r\n            >\r\n            </TabBar.Item>\r\n            \r\n           \r\n            \r\n            <TabBar.Item\r\n            icon={\r\n              <i className='iconfont iconwode'></i>                           \r\n            }\r\n            selectedIcon={\r\n              <i className='iconfont iconwode'></i>                           \r\n            }\r\n              title=\"我的淘宝\"\r\n              key=\"my\"\r\n              selected={pathname === '/my'}\r\n              onPress={() => {\r\n                this.props.history.push('/my')\r\n              }}\r\n            >\r\n            </TabBar.Item>\r\n            \r\n            \r\n          </TabBar>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\nconst mapStateToProps = (state) => ({\r\n    datalist: state.data.datalist,\r\n    username:state.log.username\r\n})\r\nexport default connect(mapStateToProps)(withRouter(Mytab));","export const getData=()=>{\r\n    return (dispatch)=>{\r\n        let url = 'https://www.fastmock.site/mock/9e4bbf9e35ad15942010865690c87ac6/api/getgoodslist';\r\n        fetch(url)\r\n        .then(res=>res.json())\r\n        .then(res=>{\r\n            console.log('aa')\r\n            console.log(res)\r\n            dispatch({\r\n                type:'GETDATA',\r\n                dataList:res.data\r\n            })\r\n        });\r\n    }\r\n}\r\nexport const log=(username)=>{\r\n    return (dispatch)=>{\r\n        let url ='https://www.fastmock.site/mock/9e4bbf9e35ad15942010865690c87ac6/api/login';\r\n        fetch(url,{\r\n            method:'post',\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            },\r\n        })\r\n        .then(res=>res.json())\r\n        .then(res=>\r\n            {\r\n                console.log(res);\r\n                dispatch(\r\n                    {\r\n                    type:'LOGIN',\r\n                    username:res.data.name //这里实现换值\r\n                    }\r\n                )  \r\n            }\r\n            );\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport './Totop.css'\r\nexport default class Totop extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { \r\n            hasScrolled: false \r\n        }\r\n        this.onScroll = this.onScroll.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        window.onscroll = this.onScroll;\r\n    }\r\n    onScroll = () => {\r\n        if (document.documentElement.scrollTop > 100 && !this.state.hasScrolled) {\r\n          this.setState({ hasScrolled: true })\r\n        } else if (document.documentElement.scrollTop < 100 && this.state.hasScrolled) {\r\n          this.setState({ hasScrolled: false })\r\n        }\r\n    }\r\n    scrollToTop = () => {\r\n        document.documentElement.scrollTop = 0\r\n    }\r\n\r\n    render() {\r\n        return (\r\n    \r\n            <div className='Totop'>\r\n                {this.state.hasScrolled && (\r\n                <div className='top' onClick={this.scrollToTop}>\r\n                    <i className=\"iconfont icondingbu \"></i>\r\n                    <p>顶部</p>\r\n                </div>\r\n                )}\r\n      </div>\r\n        )\r\n    }\r\n}","import { Icon, Button, WingBlank, Carousel, NoticeBar, WhiteSpace, Grid, DatePickerView } from 'antd-mobile'\r\nimport { Link, Router, NavLink, Route, Redirect, useHistory, useLocation, useParams, useRouteMatch, withRouter } from 'react-router-dom'\r\nimport React, { useEffect } from 'react'\r\nimport './Home.css'\r\nimport Mytab from './Mytab';\r\n// import list from './Contents.js'\r\nimport Totop from './Totop'\r\nimport { getData } from './ActionCreators'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: ['1', '2', '3'],\r\n            imgHeight: 375,\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        // simulate img loading\r\n        setTimeout(() => {\r\n            this.setState({\r\n                data:[\"https://gw.alicdn.com/bao/uploaded/i1/1659913878/O1CN01hzAGF81eWAWENMPK1_!!0-item_pic.jpg_500x500q90.jpg_.webp\",\r\n                \"https://gw.alicdn.com/bao/uploaded/i2/2137121108/O1CN01nGXueD1K3VTK3Aghn_!!0-item_pic.jpg_500x500q90.jpg_.webphttps://gw.alicdn.com/bao/uploaded/i2/50672170/O1CN011RttvpfNPPCdMI2_!!50672170.jpg_500x500q90.jpg_.webp\",\r\n                \"https://gw.alicdn.com/bao/uploaded/i3/47732699/O1CN01j8QGOI1VoBUZvBEw8_!!47732699.jpg_500x500q90.jpg_.webp\"\r\n            ]\r\n            });\r\n        }, 100);\r\n        this.props.dispatch(getData())\r\n    }\r\n\r\n\r\n\r\n    // useEffect(()=>{props.dispatch(getData())}\r\n    // , []);\r\n\r\n\r\n    // const getDatas = () => {\r\n    //     props.dispatch(getData());\r\n    //     console.log(props)\r\n    // }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header className=\"Search\">\r\n                    <div className=\"header-bd\">\r\n                        <a className=\"placeholder\" onClick={() => { this.props.history.push('/home/search') }}>\r\n                            <span className=\"text iconfont iconsousuo\">寻找宝贝店铺</span>\r\n                        </a>\r\n                    </div>\r\n                </header>\r\n\r\n                <Carousel\r\n                    autoplay={true}\r\n                    infinite={true}\r\n                    style={{ top: '20px' }}\r\n                >\r\n                    {this.state.data.map(val => (\r\n                        <a\r\n                            key={val}\r\n                            href={val}\r\n                            style={{ display: 'inline-block', width: '100%', height: this.state.imgHeight }}\r\n                        >\r\n                            <img\r\n                                src={val}\r\n                                alt=\"\"\r\n                                style={{ width: '100%', verticalAlign: 'top' }}\r\n                                onLoad={() => {\r\n                                    console.log(val);\r\n                                    // fire window resize event to change height\r\n                                    window.dispatchEvent(new Event('resize'));\r\n                                    this.state.imgHeight = 'auto';\r\n                                }}\r\n                            />\r\n                        </a>\r\n                    ))}\r\n                </Carousel>\r\n                <WhiteSpace size=\"lg\" />\r\n                <NoticeBar mode=\"link\" onClick={() => alert('别这样对我')}>\r\n                    双十一要到了，是时候卸载淘宝了！\r\n                    </NoticeBar>\r\n                <WhiteSpace size=\"lg\" />\r\n\r\n                {/* 你可能还喜欢 */}\r\n                <div className='imgs'>\r\n                    <img src=\"https://img.alicdn.com/tfs/TB1V2eQrKSSBuNjy0FlXXbBpVXa-966-114.png\" className=\"fenimg\" />\r\n                </div>\r\n\r\n                <ul className='contents'>\r\n                    {\r\n                        this.props.datalist.map((list, i) => (\r\n                            <li\r\n                                key={i}\r\n                                className='content'\r\n                            // onClick={()=>props.history.push({\r\n                            //     pathname:'/home/child/'+i,\r\n                            //     id:i,\r\n                            //     src:list.src\r\n                            //   })}\r\n                            >\r\n                                <Link to={'/child/' + i}>\r\n                                    <img src={list.img} />\r\n                                    <p className='title'>\r\n                                        {list.title}\r\n                                    </p>\r\n                                    <p className='price'>\r\n                                        ￥{list.price}\r\n                                        <span style={{ color: 'grey', fontSize: '11px' }}> {list.id}人已购买</span>\r\n                                    </p>\r\n\r\n                                </Link>\r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n                <Mytab />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    datalist: state.data.datalist\r\n})\r\nexport default connect(mapStateToProps)(withRouter(Home))\r\n\r\n","import { Button, WhiteSpace } from 'antd-mobile'\r\nimport React ,{useEffect}from 'react'\r\nimport {Link,Router,NavLink, Route, Redirect,useHistory,useLocation,useParams,useRouteMatch, withRouter} from 'react-router-dom'\r\n\r\nimport Mytab from './Mytab'\r\nimport {connect} from 'react-redux'\r\nconst Gouwuche = (props) => {\r\n    \r\n    console.log(props);\r\n    // useEffect(() => {\r\n    //    props.dispatch({\r\n    //        type:'COLLECT',\r\n    //        collect:props.datalist\r\n    //    })\r\n    // }, [])\r\n    return (\r\n        \r\n        <div>\r\n            \r\n            <ul className='contents' style={{backgroundColor:'#f5f5f9'}}> \r\n                    {\r\n                        props.datalist.map((list,i)=>(\r\n                            <li \r\n                                key={i} \r\n                                className='content' \r\n                                // onClick={()=>props.history.push({\r\n                                //     pathname:'/home/child/'+i,\r\n                                //     id:i,\r\n                                //     src:list.src\r\n                                //   })}\r\n                            >\r\n                                <Link to={'/child/'+Number(list.id-100)}>\r\n                                    <img src={list.img}/>\r\n                                    <p >\r\n                                        {list.title}\r\n                                    </p>\r\n                                    <p >\r\n                                        ￥{list.price}\r\n                                        <span style={{color:'grey',fontSize:'11px'}}> {list.id}人已购买</span>\r\n                                    </p>\r\n                                   \r\n                                </Link>\r\n                                <button id='cancelbutton' onClick={()=>props.dispatch({\r\n                                    type:'CANCELSHOP',\r\n                                    index:i\r\n                                })}>取消购买</button>\r\n                                \r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n            <Mytab/>\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state)=>{\r\n    return {datalist:state.shop}\r\n}\r\nexport default connect(mapStateToProps)(Gouwuche)\r\n\r\n","import React from 'react'\r\nimport Mytab from './Mytab'\r\n\r\nconst My = (props) => {\r\n    console.log(props);\r\n    console.log(props.data1);\r\n    return (\r\n        <div>\r\n            我的\r\n            <Mytab/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default My\r\n","import { Button, WhiteSpace } from 'antd-mobile'\r\nimport React ,{useEffect}from 'react'\r\nimport {Link,Router,NavLink, Route, Redirect,useHistory,useLocation,useParams,useRouteMatch, withRouter} from 'react-router-dom'\r\n\r\nimport Mytab from './Mytab'\r\nimport {connect} from 'react-redux'\r\nconst Shoucang = (props) => {\r\n    \r\n    console.log(props);\r\n    // useEffect(() => {\r\n    //    props.dispatch({\r\n    //        type:'COLLECT',\r\n    //        collect:props.datalist\r\n    //    })\r\n    // }, [])\r\n    return (\r\n        \r\n        <div>\r\n            \r\n            <ul className='contents' style={{backgroundColor:'#f5f5f9'}}> \r\n                    {\r\n                        props.datalist.map((list,i)=>(\r\n                            <li \r\n                                key={i} \r\n                                className='content' \r\n                            >\r\n                                <Link to={'/child/'+Number(list.id-100)}>\r\n                                    <img src={list.img}/>\r\n                                    <p >\r\n                                        {list.title}\r\n                                    </p>\r\n                                    <p >\r\n                                        ￥{list.price}\r\n                                        <span style={{color:'grey',fontSize:'11px'}}> {list.id}人已购买</span>\r\n                                    </p>\r\n                                   \r\n                                </Link>\r\n                                <button id='cancelbutton' onClick={()=>props.dispatch({\r\n                                    type:'CANCEL',\r\n                                    index:i\r\n                                })}>取消收藏</button>\r\n                                \r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n            <Mytab/>\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state)=>({\r\ndatalist:state.collect\r\n})\r\nexport default connect(mapStateToProps)(Shoucang)\r\n\r\n","import React, { useState } from 'react'\r\nimport {\r\n    withRouter\r\n} from 'react-router-dom'\r\nimport { NavBar, Icon, TabBar, Button } from 'antd-mobile'\r\nimport './Home.css'\r\nimport { connect } from 'react-redux'\r\nimport { getData } from './ActionCreators'\r\nimport Mytab from './Mytab'\r\n\r\nclass Child extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedTab: '/home',\r\n            hidden: false,\r\n            fullScreen: false,\r\n            isToggleOn: true,\r\n            // id : this.props.match.params.id\r\n        };\r\n        // this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(getData())\r\n    }\r\n    // handleClick() {\r\n    //     this.setState(prevState => ({\r\n    //         isToggleOn: !prevState.isToggleOn\r\n    //     }));\r\n\r\n    //   if (!this.props.username) {\r\n    //       this.props.history.push('/login')\r\n    //   }\r\n    //     this.state.isToggleOn\r\n    //     ?this.props.dispatch({\r\n    //         type: 'COLLECT',\r\n    //         collect: this.props.datalist[this.state.id],\r\n    //         // isShow:!this.props.isShow\r\n    //     })\r\n    //     :this.props.dispatch({\r\n    //         type:'CANCEL',\r\n    //         collect:this.props.datalist})\r\n        \r\n    // }\r\n    render() {\r\n        console.log(this.props)\r\n        // let lists  = this.props.list;\r\n        const pathname = this.props.location.pathname;\r\n        let id = this.props.match.params.id\r\n        return (\r\n            <div className='doc'>\r\n                <div className='top-bar'>\r\n                    <button\r\n                        className='btn-back'\r\n                        onClick={() => this.props.history.goBack()}>\r\n                        <span className='back'> {'<'} </span>\r\n                    </button>\r\n                    <button className=\"btn-cart\"\r\n                        onClick={\r\n                            (e) => {\r\n                                console.log('dd');\r\n                                console.log(this.props)\r\n                                console.log(e.target)\r\n                                this.props.dispatch({\r\n                                    type: 'SHOP',\r\n                                    shop: this.props.datalist[id]\r\n                                })\r\n                            }\r\n                        }    >\r\n                        <i className='iconfont icongouwuche3-copy' ></i>\r\n\r\n                    </button>\r\n                </div>\r\n\r\n                <div style={{ top: '0px' }}>\r\n                    <img src={this.props.datalist[id].img} style={{ width: '100%' }} />\r\n\r\n                    <p className='price' style={{ color: 'coral', fontSize: '25px' }}>\r\n                        ￥{this.props.datalist[id].price}\r\n                        <span style={{ color: 'grey', fontSize: '15px', right: '0px' }}> {this.props.datalist[id].id}人已购买</span>\r\n                    </p>\r\n                    <p className='title' style={{ fontSize: '20px' }}>\r\n                        {this.props.datalist[id].title}\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"bottomBtn\">\r\n                    <div className='btn'>\r\n\r\n                        <button>\r\n                            <i className='iconfont iconicon_A' ></i>\r\n                            <span>店铺</span>\r\n                        </button>\r\n                        <button>\r\n                            <i className='iconfont iconkefuxiaoxixinxi'></i>\r\n                            <span>客服</span>\r\n\r\n                        </button>\r\n                        <button\r\n                        onClick={\r\n                            ()=>{\r\n                                this.setState(prevState => ({\r\n                                    isToggleOn: !prevState.isToggleOn\r\n                                  }));\r\n                                       \r\n                                {\r\n                                if(this.state.isToggleOn)\r\n                                {\r\n\r\n                                    this.props.dispatch({\r\n                                        type: 'COLLECT',\r\n                                        collect: this.props.datalist[id],\r\n                                        // isShow:!this.props.isShow\r\n                                    })\r\n                                }\r\n                                }\r\n                                \r\n\r\n                            }\r\n                        }\r\n                        // onClick={\r\n                        //     (e) => {\r\n                        //         // this.setState(prevState => ({\r\n                        //         //     isToggleOn: !prevState.isToggleOn\r\n                        //         //   }));\r\n                        //         console.log('dd');\r\n                        //         console.log(this.props)\r\n                        //         // if (!this.props.username) {\r\n                        //         //     this.props.history.push('/login')\r\n                        //         // }\r\n                        //         this.props.dispatch({\r\n                        //             type:'SHOW',\r\n                        //             isToggleOn:!this.props.isToggleOn\r\n                        //         })\r\n\r\n                        //         this.props.isToggleOn?\r\n                        //         this.props.dispatch({\r\n                        //             type: 'COLLECT',\r\n                        //             collect: this.props.datalist[id],\r\n                        //             // isShow:!this.props.isShow\r\n\r\n                        //         }):\r\n                        //         this.props.dispatch({\r\n                        //             type: 'CANCEL',\r\n                        //             collect: this.props.datalist[id],\r\n                        //         })\r\n                        //     }\r\n                        // }\r\n                        >\r\n                           {this.state.isToggleOn?<i className='iconfont iconshoucang'></i>:\r\n                            <i className='iconfont iconshixinxingxing'></i>}\r\n                            <span>{this.state.isToggleOn ? '收藏' : '已收藏'}</span>\r\n\r\n                        </button>\r\n\r\n                        <button\r\n                            onClick={\r\n                                (e) => {\r\n                                    console.log('dd');\r\n                                    console.log(this.props)\r\n                                    this.props.dispatch({\r\n                                        type: 'SHOP',\r\n                                        shop: this.props.datalist[this.state.id]\r\n                                    })\r\n                                }\r\n                            }\r\n                        >\r\n                            加入购物车\r\n                        </button>\r\n                        <button>\r\n                            立即购买\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    datalist: state.data.datalist,\r\n    username: state.log.username,\r\n    collect:state.collect\r\n    // isToggleOn:state.log.isToggleOn\r\n})\r\nexport default connect(mapStateToProps)(withRouter(Child))\r\n\r\n\r\n","import React from 'react'\r\nimport { SearchBar, Button, WhiteSpace, WingBlank } from 'antd-mobile';\r\n\r\nclass Search extends React.Component {\r\n  state = {\r\n    value: '',\r\n  };\r\n//   componentDidMount() {\r\n//     this.autoFocusInst.focus();\r\n//   }\r\n  onChange= (value) => {\r\n    this.setState({ value });\r\n  };\r\n  clear = () => {\r\n    this.setState({ value: '' });\r\n  };\r\n  handleClick = () => {\r\n    this.manualFocusInst.focus();\r\n  }\r\n  render() {\r\n    console.log(this);\r\n\r\n    return (<div>\r\n      <SearchBar\r\n        value={this.state.value}\r\n        placeholder=\"Search\"\r\n        onCancel={() => this.props.history.push('/home')} //这里是回到上一页  还是直接添加\r\n        showCancelButton\r\n        onChange={this.onChange}\r\n      />\r\n    </div>);\r\n  }\r\n}\r\nexport default Search","import React,{useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {log} from './ActionCreators'\r\nimport './Home.css'\r\nconst Login = (props) => {\r\n    console.log(props);\r\n    const [isShow,setShow]= useState(false); \r\n    const login=()=>{\r\n        // setShow(true)\r\n        props.dispatch(log()) //这里就把张三的值拿了过来\r\n    }\r\n    return (\r\n        <div>\r\n            {\r\n                props.username?\r\n                <div>\r\n                    {props.username}\r\n                </div>\r\n                :\r\n                <div>\r\n                    <div><h2>您需要登录才能继续访问</h2></div>\r\n                    <div className=\"tb-logo\"></div>\r\n                    <div className='fm-text'>\r\n                        <input name=\"fm-login-id\" type=\"text\"  id=\"fm-login-id\" placeholder=\"手机号/邮箱/会员名\"/>\r\n\r\n                    </div>\r\n                    <div className='fm-text'>\r\n\r\n                        <input name=\"fm-login-password\" type=\"password\"  id=\"fm-login-password\" placeholder=\"请输入登录密码\"  ></input>\r\n                    </div>\r\n                    <button id='login'\r\n                    onClick={()=>{\r\n                        props.history.push('/shoucang');\r\n                        props.dispatch(log())\r\n                        }\r\n                    }\r\n                        >登录</button> \r\n            \r\n                </div>\r\n                \r\n            }\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state)=>({\r\n    username:state.username\r\n})\r\nexport default connect(mapStateToProps)(Login)\r\n","const datareducer = (state={datalist:[11]},action)=>{\r\n    console.log(action);\r\n    switch(action.type){\r\n        case 'GETDATA':\r\n            return {datalist:action.dataList}\r\n        default:\r\n            return state;//什么也没有也要返回一个值\r\n    }\r\n}\r\nexport default datareducer;","let collect = [];\r\nconst collectreducer = (state=collect,action)=>{\r\n    if(action.type == 'COLLECT'){\r\n        console.log(action);\r\n        console.log(state);\r\n        console.log(collect)\r\n        return [...state,action.collect];\r\n    }\r\n    if(action.type == 'CANCEL'){\r\n        let arr = [...state];\r\n        console.log(arr);\r\n        console.log(action);\r\n        arr.splice(action.index,1);\r\n        return arr;\r\n    }\r\n    console.log(action);\r\n    return state;\r\n}\r\nexport default collectreducer;","//如果是login就 改变usernmame的值 然后有了值 页面就会回到收藏那里\r\nconst log=(state={username:'',isToggleOn:true},action)=>{\r\n   console.log(action);\r\n   if(action.type =='LOGIN'){\r\n       return {username:action.username}\r\n   }\r\n   if(action.type == 'SHOW'){\r\n    return {isToggleOn:action.isToggleOn}\r\n   }\r\n   return state;\r\n\r\n}\r\nexport default log","let shop = [];\r\nconst shopreducer = (state=shop,action)=>{\r\n    if(action.type == 'SHOP'){\r\n        console.log(action);\r\n        console.log(state);\r\n        return [...state,action.shop];\r\n    }\r\n    if(action.type == 'CANCELSHOP'){\r\n        let arr = [...state];\r\n        console.log(arr);\r\n        arr.splice(action.index,1);\r\n        return arr;\r\n    }\r\n    console.log(action);\r\n    return state;\r\n}\r\nexport default shopreducer;","import {createStore,combineReducers,applyMiddleware,compose} from 'redux';\r\n//compose就是把多个函数组合在一起变成一个函数\r\n// import todolist from './Todosreducer';\r\n// import homereducer from './Homereducer'\r\n// let rootReducer = combineReducers({todo:todolist,home:homereducer});//把子reducer组合起来 在todos里面就变成了数组\r\nimport data from './Datareducer';\r\nimport collect from './Collectreducer'\r\nimport log from './Loginreducer'\r\nimport shop from './Shopreducer'\r\n// import thunk from 'redux-thunk' //这是一个中间键\r\nlet rootReducer = combineReducers({data,collect,log,shop});\r\nfunction logger({ getState }) {\r\n    return (next) => (action) => {\r\n      console.log('will dispatch', action)\r\n  \r\n      // 调用 middleware 链中下一个 middleware 的 dispatch。\r\n      let returnValue = next(action)\r\n  \r\n      console.log('state after dispatch', getState())\r\n  \r\n      // 一般会是 action 本身，除非\r\n      // 后面的 middleware 修改了它。\r\n      return returnValue\r\n    }\r\n    //箭头函数返回了一个箭头函数\r\n  }\r\n//会先走logger thunk 在走到reducer\r\nconst thunk = ({ dispatch, getState }) => (next) => (action) => {\r\n  console.log('thunk');\r\n  if (typeof action === 'function') {\r\n      return action(dispatch, getState);\r\n  }\r\n  return next(action);\r\n};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n      applyMiddleware(logger, thunk),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\nexport default store;\r\n//其实就是状态容器 存着数据 ","import React from 'react';\r\nimport { Route ,BrowserRouter as Router,Switch, Redirect} from 'react-router-dom';\r\nimport './App.css';\r\nimport Mytab from './pages3/Mytab';\r\nimport Home from './pages3/Home'\r\nimport Gouwuche from './pages3/gouwuche'\r\nimport My from './pages3/My'\r\nimport Shoucang from './pages3/Shoucang'\r\nimport Child from './pages3/Child'\r\nimport Search from './pages3/Search';\r\nimport Login from './pages3/Login';\r\nimport list from './pages3/Contents.js'\r\nimport Totop from './pages3/Totop';\r\nimport store from './pages3/store'\r\nimport {Provider} from 'react-redux'  //给你往下提供 包到最外层\r\n\r\nconst App =()=>{\r\n  \r\n  return (\r\n    <Provider store={store}>\r\n\r\n    \r\n    <Router>\r\n      <Switch>\r\n        <Route exact path='/home' render={()=><Home/>}></Route>\r\n        <Route path ='/child/:id' render={(props)=><Child {...props} />}></Route>\r\n        <Route path='/home/search' component={Search}></Route>\r\n        <Route path='/login' component={Login}></Route>\r\n        <Route path='/gouwuche' component={Gouwuche}></Route>\r\n        <Route path='/my' render={(props)=><My {...props}/>}></Route>\r\n        <Route path='/shoucang' component={Shoucang}></Route>\r\n        <Route component={Home}></Route>\r\n        \r\n        {/* <Route render ={\r\n          ()=>\r\n            <Redirect to='/'/>\r\n        }/> */}\r\n\r\n      </Switch>\r\n\r\n      {/* <Mytab/> */}\r\n    </Router>\r\n    </Provider>\r\n  )\r\n}\r\n  \r\nexport default App;","let todo =[4,5,6];//这里不能直接渲染一个对象 要是具体的值\r\nconst todolist=(state=todo,action)=>{\r\n    if(action.type =='ADD_TODO'){\r\n        console.log('添加');\r\n        console.log(action);\r\n        console.log(state);\r\n        console.log(todo);\r\n        console.log([...state,action.value]);\r\n\r\n        return [...todo,action.value];//这里是一个新的\r\n    }\r\n    if(action.type =='DELETE_TODO'){\r\n        console.log('删除');\r\n        console.log(action);\r\n        let arr=[...state];\r\n        arr.splice(action.index,1);\r\n        return arr;\r\n        //或者用state.filter过滤\r\n        // return state.\r\n        // return [...state,action.index];\r\n    }\r\n    if(action.type =='INPUT'){\r\n        console.log(action);\r\n        return [...todo,action.value];//这里是一个新的\r\n    }\r\n\r\n    return state;//要不就返回原数组\r\n}\r\nexport default todolist;\r\n//实现todo功能的一个reducer\r\n//reducer是一个纯函数没有副作用 有相同的输入一定会有相同的输出 date不是每次执行结果不一样 reducer是可以预测的 action的type值一般是大写的\r\n//考试雪梨题 核心概念","import './App.css';\r\nimport React from 'react';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {isToggleOn: true};\r\n   \r\n      // 这边绑定是必要的，这样 `this` 才能在回调函数中使用\r\n      this.handleClick = this.handleClick.bind(this);\r\n    }\r\n   \r\n    handleClick() {\r\n      this.setState(prevState => ({\r\n        isToggleOn: !prevState.isToggleOn\r\n      }));\r\n    }\r\n   \r\n    render() {\r\n      return (<div>\r\n          {this.state.isToggleOn?<i className='iconfont iconshoucang'></i>:\r\n          <i className='iconfont icongouwuche'></i>}                       \r\n\r\n        <button onClick={this.handleClick}>\r\n\r\n          {this.state.isToggleOn ? '收藏' : '已收藏'}\r\n        </button>\r\n      </div>\r\n\r\n      \r\n      );\r\n    }\r\n  }\r\nexport default App ","const homereducer =(state={username:'',datalist:[11],isToggleOn:true},action)=>{\r\n    console.log(action);\r\n    if(action.type==='GETDATA'){\r\n        return {datalist:action.datalist};\r\n\r\n    }\r\n    if(action.type ==='show'){\r\n        return {isToggleOn:action.isToggleOn}\r\n\r\n    }\r\n    if(action.type === 'LOGIN'){\r\n        return {username:action.username};//返回的是一个新的对象 就返回一个用户名\r\n\r\n    }\r\n    return state;\r\n    // switch(action.type){\r\n    //     case'LOGIN':\r\n    //         // Object.assign({},state,{username:'123'});\r\n    //         return {username:action.username};//返回的是一个新的对象 就返回一个用户名\r\n    //     // case 'GETDATA':\r\n    //     //     console.log();\r\n    //     //     return {datalist:action.datalist};\r\n    //     // case 'show':\r\n    //     //     return {isToggleOn:action.isToggleOn}\r\n    //     default:\r\n    //         return state;//什么也没有也要返回一个值\r\n\r\n    // }\r\n}\r\nexport default homereducer;","import {createStore,combineReducers,applyMiddleware,compose} from 'redux';\r\n//compose就是把多个函数组合在一起变成一个函数\r\n// import todolist from './Todosreducer';\r\n// import homereducer from './Homereducer'\r\n// let rootReducer = combineReducers({todo:todolist,home:homereducer});//把子reducer组合起来 在todos里面就变成了数组\r\nimport todo from './Todosreducer'\r\nimport home from './Homereducer'\r\n// import thunk from 'redux-thunk' //这是一个中间键\r\nlet rootReducer = combineReducers({todo,home});\r\nfunction logger({ getState }) {\r\n    return (next) => (action) => {\r\n      console.log('will dispatch', action)\r\n  \r\n      // 调用 middleware 链中下一个 middleware 的 dispatch。\r\n      let returnValue = next(action)\r\n  \r\n      console.log('state after dispatch', getState())\r\n  \r\n      // 一般会是 action 本身，除非\r\n      // 后面的 middleware 修改了它。\r\n      return returnValue\r\n    }\r\n    //箭头函数返回了一个箭头函数\r\n  }\r\n//会先走logger thunk 在走到reducer\r\nconst thunk = ({ dispatch, getState }) => (next) => (action) => {\r\n  console.log('thunk');\r\n  if (typeof action === 'function') {\r\n      return action(dispatch, getState);\r\n  }\r\n  return next(action);\r\n};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n      applyMiddleware(logger, thunk),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\nexport default store;\r\n//其实就是状态容器 存着数据 ","import React from 'react'\r\nimport {connect} from 'react-redux'//这是一个函数\r\nconst Todos = (props) => {\r\n    console.log(props);\r\n    // handleChange = (e)=>{\r\n    //     this.setState({inpValue:e.target.value});\r\n    // }\r\n    // console.log(props);\r\n    return (\r\n        <div>\r\n            {props.data.map((item,i)=><li key={i}>\r\n                {item}\r\n                <button \r\n                    onClick={\r\n                        ()=>props.dispatch({\r\n                            type:'DELETE_TODO',\r\n                            index:i\r\n                        })\r\n                    }\r\n                >\r\n                        删除\r\n                </button>\r\n            </li>)}\r\n            <button onClick={()=>props.dispatch({\r\n                    type:'ADD_TODO',value:456\r\n                })} >\r\n                添加\r\n            </button>\r\n       \r\n        </div>\r\n       \r\n    )\r\n}\r\nconst mapStateToProps = (state)=>({ \r\n    data:state.todo\r\n    \r\n})\r\nexport default connect(mapStateToProps)(Todos) \r\n//函数的调用是一个函数 函数再传一个一个参数 把组件传进去, connet调用的返回值是一个高阶组件\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\n// dispatch在connet里面有\r\nconst Input = (props) => {\r\n    return (\r\n        <div>\r\n            \r\n            <input type='text' onKeyDown={(e)=>\r\n                {\r\n                    if(e.keyCode==13){\r\n                        props.dispatch({\r\n                            type:'ADD_TODO',\r\n                            value:e.target.value\r\n                        })  \r\n                    }\r\n                }\r\n               \r\n            }>\r\n                {/* 键盘事件 获取输入框的值一般就是e.target,value 然后绑定事件dispatch事件*/}\r\n                \r\n            </input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect()(Input)\r\n//在app那里调用\r\n","const log=(username)=>{\r\n    return (dispatch)=>{\r\n        let url ='https://www.fastmock.site/mock/9e4bbf9e35ad15942010865690c87ac6/api/login';\r\n        fetch(url,{\r\n            method:'post',\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            },\r\n        })\r\n        .then(res=>res.json())\r\n        .then(res=>\r\n            {\r\n                console.log(res);\r\n                // res.data.name?\r\n                // dispatch(\r\n                //     // log(res.data.name)///引入这个函数\r\n                //     {\r\n                //     type:'LOGIN',\r\n                //     username:res.data.name //这里实现换值\r\n                //     }\r\n                // )  \r\n                // :\r\n                dispatch(\r\n                    // log(res.data.name)///引入这个函数\r\n                    {\r\n                    type:'LOGIN',\r\n                    username:res.data.name,//这里实现换值\r\n                    }\r\n                )  \r\n        \r\n                // setShow(false);//成功了之后就不显示了\r\n            }\r\n            );\r\n    }\r\n    //\r\n    return {\r\n        type:'LOGIN',\r\n        username:username\r\n    }\r\n}\r\nconst getData=()=>{\r\n    return (dispatch)=>{\r\n        let url = 'https://www.fastmock.site/mock/9e4bbf9e35ad15942010865690c87ac6/api/getgoodslist';\r\n        fetch(url)\r\n        .then(res=>res.json())\r\n        .then(res=>{\r\n            console.log(res)\r\n            dispatch({\r\n                type:'GETDATA',\r\n                datalist:res.data\r\n            })\r\n        });\r\n    }\r\n}\r\nexport {getData}\r\nexport {log}\r\n//匿名导出\r\n","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { ActivityIndicator, WingBlank, WhiteSpace, Button } from 'antd-mobile';\r\nimport { log, getData } from './actionCreators'\r\n// class Home extends React.Component {\r\n//     constructor(props){\r\n//         super(props);\r\n//     }\r\n//     getDatas(){\r\n//         this.props.dispatch(getData());\r\n//     }\r\n//     mapStateToProps = (state)=>({\r\n//         username:state.home.username,\r\n//         datalist:state.home.datalist\r\n//     })\r\n//     render (){\r\n//         return (\r\n//             <div>\r\n//                 <div>\r\n//                     {this.props.datalist[0].id}\r\n//                     <button onClick={this.getDatas}>\r\n\r\n//                         dianji\r\n//                     </button>\r\n//                 </div>\r\n\r\n//             </div>\r\n//         ) \r\n//     }\r\n// }\r\nconst Home = (props) => {\r\n    // const [icoStatus, setIcoStatus] = useState(true)\r\n    // //点击收藏按钮\r\n    // const iconSouCangData = (event, props) => {\r\n    //     setIcoStatus(!icoStatus)\r\n    // }\r\n    const [isShow, setShow] = useState(false);\r\n    const login = () => {\r\n        setShow(true)\r\n        props.dispatch(log())\r\n    }\r\n    const show=()=>{\r\n        props.dispatch(log())\r\n        props.dispatch(\r\n            // log(res.data.name)///引入这个函数\r\n            {\r\n            type:'show',\r\n            username:'',\r\n            isToggleOn:!props.isToggleOn\r\n            }\r\n        )  \r\n    }\r\n    const getDatas = () => {\r\n        props.dispatch(getData());\r\n        console.log(props)\r\n    }\r\n    // const login =()=>{\r\n    //     setShow(true)\r\n    //     let url ='https://www.fastmock.site/mock/9e4bbf9e35ad15942010865690c87ac6/api/login';\r\n    //     fetch(url,{\r\n    //         method:'post',\r\n    //         headers:{\r\n    //             'Content-Type':'application/json'\r\n    //         },\r\n    //     })\r\n    //     .then(res=>res.json())\r\n    //     .then(res=>\r\n    //         {\r\n    //             console.log(res);\r\n    //             props.dispatch(\r\n    //                 log(res.data.name)///引入这个函数\r\n    //                 // {\r\n    //                 // type:'LOGIN',\r\n    //                 // username:res.data.name //这里实现换值\r\n    //                 // }\r\n    //             )  \r\n    //             setShow(false);//成功了之后就不显示了\r\n    //         }\r\n    //         );\r\n    // }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                // props.username?\r\n                // props.username:\r\n                // <button\r\n                //     onClick={login}\r\n                // >登录</button>\r\n\r\n                props.username ?\r\n                    <div>\r\n                        {props.username}\r\n                        <button onClick={() => {\r\n                            let i = true;\r\n\r\n                            if (i) {\r\n        \r\n                                props.dispatch(\r\n                                    {\r\n                                        type: 'LOGIN',\r\n                                        username: '',\r\n                                        \r\n                                    }\r\n                                )\r\n                                i = false;\r\n                            }\r\n\r\n                        }\r\n\r\n                        }>\r\n                            退出\r\n                        </button>\r\n                    </div>\r\n                    :\r\n                    <button\r\n                        onClick={login}\r\n                    >登录</button>\r\n\r\n\r\n            },\r\n            <div>\r\n                {/* {props.datalist[0].id} */}\r\n                <button onClick={getDatas}>\r\n\r\n                    dianji\r\n                </button>\r\n            </div>\r\n            <div>\r\n                {props.isToggleOn ? <i className='iconfont iconshoucang'></i> :\r\n                    <i className='iconfont icongouwuche'></i>}\r\n\r\n                <button onClick={show}>\r\n                    {props.isToggleOn ? '收藏' : '已收藏'}\r\n                </button>\r\n            </div>\r\n            {/* <div>\r\n                <span className={icoStatus? \" icon-soucang2 soucang-color\" : \"icon-soucang2\"} onClick={(e) => icoStatusData(e,props)}></span>\r\n \r\n            </div> */}\r\n            {/* <ActivityIndicator style={{ height: '0%' }}\r\n                toast\r\n                text='登录中'\r\n                animating={isShow}\r\n            /> */}\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    username: state.home.username,\r\n    datalist: state.home.datalist,\r\n    isToggleOn:state.home.isToggleOn\r\n})\r\nexport default connect(mapStateToProps)(Home)\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';//这个只要index 引用了就行\r\nimport Home from './pages/Home'; //导入那一个文件  \r\nimport List from './components/List'; //要导入那个文件的内容\r\n//变灰了就是声明了没有用\r\nimport Control from './components/Control';\r\nimport Demo01 from './pages/Demo01';\r\n// import App from './App';\r\nimport Hoc,{Detail} from './pages/Hoc';\r\nimport Hook from './pages/Hook';\r\nimport Context from './pages/context'\r\nimport TodoList from './components/TodoList'\r\n\r\n\r\nimport RouterSwitch from './exercise/RouterSwitch';\r\nimport App2 from './App2'\r\nimport App4 from './App4'\r\n\r\nimport App from './reduceDemo/App'\r\nimport 'antd-mobile/dist/antd-mobile.css'\r\n// import App from './exercise1/App'\r\n// alt shift + 上下键   复制一行\r\n// alt + 上下键         移动一行\r\n// 按住alt ，鼠标点击\r\n// Ctrl + shift + 左右键，选中整个单词\r\n// ctrl+shift+L \r\n\r\n\r\n// let url ='https://www.fastmock.site/mock/9e4bbf9e35ad15942010865690c87ac6/api/login';\r\n// fetch(url,{\r\n//     method:'post',\r\n//     headers:{\r\n//         'Content-Type':'application/json'\r\n//     },\r\n// })\r\n// .then(res=>res.json())\r\n// .then(res=>console.log(res));\r\nReactDOM.render(\r\n  <App2/>\r\n  // <Control/>\r\n  // <RouterSwitch/>\r\n  // <App2/>\r\n    // <Context.Provider value='usecontext'>\r\n    //   <Hook/>\r\n    // </Context.Provider>\r\n ,\r\n  // <Hook/>,\r\n  // <div><Hoc/><Detail/></div>,\r\n  // <Hoc/>,\r\n  // <App/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// 组件声明\r\n// 函数组件\r\n// UI（展示）组件，木偶组件\r\n// function App(props){\r\n//   const { title, id } = props;\r\n//   return <div>\r\n//     <h1>App组件内容</h1>\r\n//     <div>{title}</div>\r\n//     <div>{id}</div>\r\n//   </div>\r\n// }\r\n// // 智能组件\r\n// class Demo extends React.Component{\r\n//   constructor(){\r\n//      super();\r\n//     //  声明状态\r\n//      this.state = {\r\n//        name: new Date().toLocaleString()\r\n//      }\r\n//      setInterval(()=>{\r\n//       this.setState({name:new Date().toLocaleString()})\r\n//      },1000)\r\n//   }\r\n//   render(){\r\n//     return <div>\r\n//       <div>name:{this.state.name}</div>\r\n//       <App title={this.state.name} id='app'/>\r\n//     </div>\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// let ele = React.createElement(\r\n//   'h1',\r\n//   {id:'title'},\r\n//   React.createElement('div',{},'hello'),\r\n//   'react'\r\n// )\r\n\r\n// 将jsx对象渲染到DOM中\r\n// let ReactDOM = {\r\n//   render(eleObj,container){\r\n//     // 解构\r\n//     const { type,props } = eleObj;\r\n//     // 创建第一层节点\r\n//     let ele = document.createElement(type);\r\n//     // 遍历属性对象，将属性添加到第一层节点对象上\r\n//     for (const prop in props) {\r\n//       console.log(prop)\r\n//       if(prop == 'children'){\r\n//         if(typeof props.children == 'string'){\r\n//             const txtNode = document.createTextNode(props.children);\r\n//             ele.appendChild(txtNode);\r\n//             break;\r\n//         }\r\n//         // 将第一层节点对象的子元素添加进去\r\n//         props.children.forEach( child => {\r\n//           if(typeof child == 'string'){\r\n//             const txtNode = document.createTextNode(child);\r\n//             ele.appendChild(txtNode);\r\n//           }else{\r\n//             ReactDOM.render(child,ele);\r\n//           }\r\n//         })\r\n//       }else{\r\n//         ele[prop] = props[prop];\r\n//       }\r\n//     }\r\n\r\n//     // 将第一层DOM节点添加到container中\r\n//     container.appendChild(ele);\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n  // 1、原生JS，DOM操作（jQ）\r\n  // 2、React：开发效率高、性能高\r\n  // 3、环境搭建、创建一个项目、运行\r\n  // 4、JSX语法\r\n\r\n\r\n\r\n"],"sourceRoot":""}